<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" kind="struct" language="C++" prot="public">
    <compoundname>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</compoundname>
    <basecompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</basecompoundref>
    <derivedcompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename A1</type>
      </param>
      <param>
        <type>typename A2</type>
      </param>
      <param>
        <type>typename A3</type>
      </param>
      <param>
        <type>typename A4</type>
      </param>
      <param>
        <type>typename A5</type>
      </param>
      <param>
        <type>typename A6</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1ab69a06609b76f3b0ef780b9ecf0a940c" prot="public" static="no">
        <type>A6</type>
        <definition>typedef A6 testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;::Argument6</definition>
        <argsstring></argsstring>
        <name>Argument6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="220" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1a3120b03652156e1475ce5892e1b5dd7a" prot="public" static="no">
        <type>::testing::tuple&lt; A1, A2, A3, A4, A5, A6 &gt;</type>
        <definition>typedef ::testing::tuple&lt;A1, A2, A3, A4, A5, A6&gt; testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;::ArgumentTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="221" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1a8555cb8e68c1e64b91b6c50a7b5951bd" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt; ArgumentTuple &gt;::type</type>
        <definition>typedef MatcherTuple&lt;ArgumentTuple&gt;::type testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;::ArgumentMatcherTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentMatcherTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="222" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1aa60c44ec945ca78297aaf7a3c785bce5" prot="public" static="no">
        <type>void</type>
        <definition>typedef void testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;::MakeResultVoid(A1, A2, A3, A4, A5, A6)</definition>
        <argsstring>(A1, A2, A3, A4, A5, A6)</argsstring>
        <name>MakeResultVoid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="223" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1a20c49ac827433a288921ca0caa0d319b" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref></type>
        <definition>typedef IgnoredValue testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;::MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6)</definition>
        <argsstring>(A1, A2, A3, A4, A5, A6)</argsstring>
        <name>MakeResultIgnoredValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="224" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="734">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="735" relation="public-inheritance">
        </childnode>
      </node>
      <node id="733">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="734" relation="public-inheritance">
        </childnode>
      </node>
      <node id="735">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
      <node id="729">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4"/>
        <childnode refid="730" relation="public-inheritance">
        </childnode>
      </node>
      <node id="731">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="732" relation="public-inheritance">
        </childnode>
      </node>
      <node id="738">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6dfab3ccde80824a59fc4efd5336a27c1"/>
        <childnode refid="737" relation="public-inheritance">
        </childnode>
      </node>
      <node id="736">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4"/>
        <childnode refid="729" relation="public-inheritance">
        </childnode>
      </node>
      <node id="730">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="731" relation="public-inheritance">
        </childnode>
      </node>
      <node id="739">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6f6ff91550f0557b7708e490e5002cd35"/>
        <childnode refid="738" relation="public-inheritance">
        </childnode>
      </node>
      <node id="732">
        <label>testing::internal::Function&lt; R(A1, A2, A3)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="737">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4"/>
        <childnode refid="736" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="745">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="746" relation="public-inheritance">
        </childnode>
      </node>
      <node id="744">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="745" relation="public-inheritance">
        </childnode>
      </node>
      <node id="746">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
      <node id="740">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4"/>
        <childnode refid="741" relation="public-inheritance">
        </childnode>
      </node>
      <node id="742">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="743" relation="public-inheritance">
        </childnode>
      </node>
      <node id="741">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="742" relation="public-inheritance">
        </childnode>
      </node>
      <node id="743">
        <label>testing::internal::Function&lt; R(A1, A2, A3)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="744" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="219" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="218" bodyend="225"/>
    <listofallmembers>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4_1aca36c8586218fd015cc4736dc8d4c14f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>Argument1</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a025f5192252366d73aa19718bb0ea89d" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>Argument2</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4_1a2ac6eefb33feafe85c1c6742bdab509f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>Argument3</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1ae5039423598ab0fecd4f594acbf34d85" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>Argument4</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a5bc0279c43aa98c409219dee1b815c71" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>Argument5</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1ab69a06609b76f3b0ef780b9ecf0a940c" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>Argument6</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1a8555cb8e68c1e64b91b6c50a7b5951bd" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>ArgumentMatcherTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1a3120b03652156e1475ce5892e1b5dd7a" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>ArgumentTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1a20c49ac827433a288921ca0caa0d319b" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>MakeResultIgnoredValue</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4_1aa60c44ec945ca78297aaf7a3c785bce5" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>MakeResultVoid</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4_1a5c228a886ef598ac10988f8de5e32ca1" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</scope><name>Result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
