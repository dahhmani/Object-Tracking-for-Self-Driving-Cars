<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gtest__repeat__test_8cc" kind="file" language="C++">
    <compoundname>gtest_repeat_test.cc</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="gtest_8h" local="yes">gtest/gtest.h</includes>
    <includes refid="gtest-internal-inl_8h" local="yes">src/gtest-internal-inl.h</includes>
    <incdepgraph>
      <node id="6842">
        <label>sys/stat.h</label>
      </node>
      <node id="6861">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="6836" relation="include">
        </childnode>
      </node>
      <node id="6855">
        <label>iomanip</label>
      </node>
      <node id="6832">
        <label>limits</label>
      </node>
      <node id="6877">
        <label>src/gtest-internal-inl.h</label>
        <link refid="gtest-internal-inl_8h_source"/>
        <childnode refid="6878" relation="include">
        </childnode>
        <childnode refid="6838" relation="include">
        </childnode>
        <childnode refid="6829" relation="include">
        </childnode>
        <childnode refid="6840" relation="include">
        </childnode>
        <childnode refid="6843" relation="include">
        </childnode>
        <childnode refid="6845" relation="include">
        </childnode>
        <childnode refid="6834" relation="include">
        </childnode>
        <childnode refid="6836" relation="include">
        </childnode>
        <childnode refid="6831" relation="include">
        </childnode>
        <childnode refid="6879" relation="include">
        </childnode>
      </node>
      <node id="6868">
        <label>assert.h</label>
      </node>
      <node id="6847">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="6866">
        <label>iterator</label>
      </node>
      <node id="6854">
        <label>float.h</label>
      </node>
      <node id="6872">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="6829">
        <label>stdlib.h</label>
      </node>
      <node id="6859">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="6840" relation="include">
        </childnode>
        <childnode refid="6845" relation="include">
        </childnode>
        <childnode refid="6836" relation="include">
        </childnode>
      </node>
      <node id="6873">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="6874" relation="include">
        </childnode>
        <childnode refid="6834" relation="include">
        </childnode>
        <childnode refid="6835" relation="include">
        </childnode>
        <childnode refid="6859" relation="include">
        </childnode>
      </node>
      <node id="6878">
        <label>errno.h</label>
      </node>
      <node id="6845">
        <label>string</label>
      </node>
      <node id="6856">
        <label>map</label>
      </node>
      <node id="6871">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="6865" relation="include">
        </childnode>
        <childnode refid="6836" relation="include">
        </childnode>
      </node>
      <node id="6838">
        <label>stddef.h</label>
      </node>
      <node id="6876">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="6833">
        <label>ostream</label>
      </node>
      <node id="6848">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="6862">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="6863" relation="include">
        </childnode>
      </node>
      <node id="6841">
        <label>sys/types.h</label>
      </node>
      <node id="6840">
        <label>string.h</label>
      </node>
      <node id="6852">
        <label>typeinfo</label>
      </node>
      <node id="6849">
        <label>unistd.h</label>
      </node>
      <node id="6834">
        <label>vector</label>
      </node>
      <node id="6870">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="6858">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="6832" relation="include">
        </childnode>
        <childnode refid="6836" relation="include">
        </childnode>
      </node>
      <node id="6846">
        <label>utility</label>
      </node>
      <node id="6844">
        <label>sstream</label>
      </node>
      <node id="6867">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="6829" relation="include">
        </childnode>
        <childnode refid="6868" relation="include">
        </childnode>
        <childnode refid="6836" relation="include">
        </childnode>
      </node>
      <node id="6874">
        <label>iosfwd</label>
      </node>
      <node id="6860">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="6859" relation="include">
        </childnode>
      </node>
      <node id="6830">
        <label>iostream</label>
      </node>
      <node id="6853">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="6846" relation="include">
        </childnode>
      </node>
      <node id="6831">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="6832" relation="include">
        </childnode>
        <childnode refid="6833" relation="include">
        </childnode>
        <childnode refid="6834" relation="include">
        </childnode>
        <childnode refid="6835" relation="include">
        </childnode>
        <childnode refid="6859" relation="include">
        </childnode>
        <childnode refid="6862" relation="include">
        </childnode>
        <childnode refid="6858" relation="include">
        </childnode>
        <childnode refid="6864" relation="include">
        </childnode>
        <childnode refid="6869" relation="include">
        </childnode>
        <childnode refid="6872" relation="include">
        </childnode>
        <childnode refid="6873" relation="include">
        </childnode>
        <childnode refid="6875" relation="include">
        </childnode>
        <childnode refid="6876" relation="include">
        </childnode>
      </node>
      <node id="6850">
        <label>strings.h</label>
      </node>
      <node id="6837">
        <label>ctype.h</label>
      </node>
      <node id="6875">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="6836" relation="include">
        </childnode>
        <childnode refid="6861" relation="include">
        </childnode>
      </node>
      <node id="6836">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="6837" relation="include">
        </childnode>
        <childnode refid="6838" relation="include">
        </childnode>
        <childnode refid="6829" relation="include">
        </childnode>
        <childnode refid="6839" relation="include">
        </childnode>
        <childnode refid="6840" relation="include">
        </childnode>
        <childnode refid="6841" relation="include">
        </childnode>
        <childnode refid="6842" relation="include">
        </childnode>
        <childnode refid="6843" relation="include">
        </childnode>
        <childnode refid="6830" relation="include">
        </childnode>
        <childnode refid="6844" relation="include">
        </childnode>
        <childnode refid="6845" relation="include">
        </childnode>
        <childnode refid="6846" relation="include">
        </childnode>
        <childnode refid="6834" relation="include">
        </childnode>
        <childnode refid="6847" relation="include">
        </childnode>
        <childnode refid="6848" relation="include">
        </childnode>
        <childnode refid="6849" relation="include">
        </childnode>
        <childnode refid="6850" relation="include">
        </childnode>
        <childnode refid="6851" relation="include">
        </childnode>
        <childnode refid="6852" relation="include">
        </childnode>
        <childnode refid="6853" relation="include">
        </childnode>
      </node>
      <node id="6835">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="6836" relation="include">
        </childnode>
        <childnode refid="6837" relation="include">
        </childnode>
        <childnode refid="6854" relation="include">
        </childnode>
        <childnode refid="6840" relation="include">
        </childnode>
        <childnode refid="6855" relation="include">
        </childnode>
        <childnode refid="6832" relation="include">
        </childnode>
        <childnode refid="6856" relation="include">
        </childnode>
        <childnode refid="6857" relation="include">
        </childnode>
        <childnode refid="6845" relation="include">
        </childnode>
        <childnode refid="6834" relation="include">
        </childnode>
        <childnode refid="6858" relation="include">
        </childnode>
        <childnode refid="6859" relation="include">
        </childnode>
        <childnode refid="6860" relation="include">
        </childnode>
        <childnode refid="6861" relation="include">
        </childnode>
      </node>
      <node id="6828">
        <label>vendor/googletest/googletest/test/gtest_repeat_test.cc</label>
        <link refid="gtest__repeat__test_8cc"/>
        <childnode refid="6829" relation="include">
        </childnode>
        <childnode refid="6830" relation="include">
        </childnode>
        <childnode refid="6831" relation="include">
        </childnode>
        <childnode refid="6877" relation="include">
        </childnode>
      </node>
      <node id="6865">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="6837" relation="include">
        </childnode>
        <childnode refid="6866" relation="include">
        </childnode>
        <childnode refid="6857" relation="include">
        </childnode>
        <childnode refid="6846" relation="include">
        </childnode>
        <childnode refid="6834" relation="include">
        </childnode>
        <childnode refid="6835" relation="include">
        </childnode>
        <childnode refid="6867" relation="include">
        </childnode>
        <childnode refid="6836" relation="include">
        </childnode>
        <childnode refid="6869" relation="include">
        </childnode>
      </node>
      <node id="6857">
        <label>set</label>
      </node>
      <node id="6864">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="6836" relation="include">
        </childnode>
        <childnode refid="6846" relation="include">
        </childnode>
        <childnode refid="6835" relation="include">
        </childnode>
        <childnode refid="6865" relation="include">
        </childnode>
        <childnode refid="6871" relation="include">
        </childnode>
      </node>
      <node id="6843">
        <label>algorithm</label>
      </node>
      <node id="6851">
        <label>regex.h</label>
      </node>
      <node id="6879">
        <label>gtest/gtest-spi.h</label>
        <link refid="gtest-spi_8h_source"/>
        <childnode refid="6831" relation="include">
        </childnode>
      </node>
      <node id="6839">
        <label>stdio.h</label>
      </node>
      <node id="6863">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="6835" relation="include">
        </childnode>
        <childnode refid="6839" relation="include">
        </childnode>
      </node>
      <node id="6869">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="6833" relation="include">
        </childnode>
        <childnode refid="6844" relation="include">
        </childnode>
        <childnode refid="6845" relation="include">
        </childnode>
        <childnode refid="6846" relation="include">
        </childnode>
        <childnode refid="6834" relation="include">
        </childnode>
        <childnode refid="6836" relation="include">
        </childnode>
        <childnode refid="6835" relation="include">
        </childnode>
        <childnode refid="6870" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesting">testing</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="gtest__repeat__test_8cc_1a83bd232fd1077579fada92c31bb7469f" prot="public" static="no">
        <name>GTEST_IMPLEMENTATION_</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_repeat_test.cc" line="43" column="9" bodyfile="vendor/googletest/googletest/test/gtest_repeat_test.cc" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtest__repeat__test_8cc_1a7e5ba7c523079f679398b4c730184de3" prot="public" static="no">
        <name>GTEST_CHECK_INT_EQ_</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <initializer>do {\
    const int expected_val = (expected);\
    const int actual_val = (actual);\
    if (::testing::internal::IsTrue(expected_val != actual_val)) {\
      ::std::cout &lt;&lt; &quot;Value of: &quot; #actual &quot;\n&quot;\
                  &lt;&lt; &quot;  Actual: &quot; &lt;&lt; actual_val &lt;&lt; &quot;\n&quot;\
                  &lt;&lt; &quot;Expected: &quot; #expected &quot;\n&quot;\
                  &lt;&lt; &quot;Which is: &quot; &lt;&lt; expected_val &lt;&lt; &quot;\n&quot;;\
      ::testing::internal::posix::Abort();\
    }\
  } while (::testing::internal::AlwaysFalse())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_repeat_test.cc" line="63" column="9" bodyfile="vendor/googletest/googletest/test/gtest_repeat_test.cc" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gtest__repeat__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_repeat_test.cc" line="229" column="1" bodyfile="vendor/googletest/googletest/test/gtest_repeat_test.cc" bodystart="229" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>--gtest_repeat=number<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Indicates<sp/>that<sp/>this<sp/>translation<sp/>unit<sp/>is<sp/>part<sp/>of<sp/>Google<sp/>Test&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementation.<sp/><sp/>It<sp/>must<sp/>come<sp/>before<sp/>gtest-internal-inl.h<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>included,<sp/>or<sp/>there<sp/>will<sp/>be<sp/>a<sp/>compiler<sp/>error.<sp/><sp/>This<sp/>trick<sp/>is<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>prevent<sp/>a<sp/>user<sp/>from<sp/>accidentally<sp/>including<sp/>gtest-internal-inl.h<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>his<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_IMPLEMENTATION_<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;src/gtest-internal-inl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>GTEST_IMPLEMENTATION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">GTEST_DECLARE_string_(death_test_style);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">GTEST_DECLARE_string_(filter);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">GTEST_DECLARE_int32_(repeat);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>testing::GTEST_FLAG(death_test_style);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>testing::GTEST_FLAG(filter);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>testing::GTEST_FLAG(repeat);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>this<sp/>when<sp/>we<sp/>are<sp/>testing<sp/>Google<sp/>Test<sp/>itself<sp/>and<sp/>therefore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cannot<sp/>use<sp/>Google<sp/>Test<sp/>assertions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_CHECK_INT_EQ_(expected,<sp/>actual)<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>expected_val<sp/>=<sp/>(expected);\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>actual_val<sp/>=<sp/>(actual);\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(::testing::internal::IsTrue(expected_val<sp/>!=<sp/>actual_val))<sp/>{\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::std::cout<sp/>&lt;&lt;<sp/>&quot;Value<sp/>of:<sp/>&quot;<sp/>#actual<sp/>&quot;\n&quot;\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>Actual:<sp/>&quot;<sp/>&lt;&lt;<sp/>actual_val<sp/>&lt;&lt;<sp/>&quot;\n&quot;\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;Expected:<sp/>&quot;<sp/>#expected<sp/>&quot;\n&quot;\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;Which<sp/>is:<sp/>&quot;<sp/>&lt;&lt;<sp/>expected_val<sp/>&lt;&lt;<sp/>&quot;\n&quot;;\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::posix::Abort();\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(::testing::internal::AlwaysFalse())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>verifying<sp/>that<sp/>global<sp/>environment<sp/>set-up<sp/>and<sp/>tear-down<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inside<sp/>the<sp/>gtest_repeat<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_environment_set_up_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_environment_tear_down_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyEnvironment<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_environment" kindref="compound">testing::Environment</ref><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>MyEnvironment()<sp/>{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUp()<sp/>{<sp/>g_environment_set_up_count++;<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TearDown()<sp/>{<sp/>g_environment_tear_down_count++;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>test<sp/>that<sp/>should<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_should_fail_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">TEST(FooTest,<sp/>ShouldFail)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>g_should_fail_count++;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0,<sp/>1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>failure.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>test<sp/>that<sp/>should<sp/>pass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_should_pass_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">TEST(FooTest,<sp/>ShouldPass)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>g_should_pass_count++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>test<sp/>that<sp/>contains<sp/>a<sp/>thread-safe<sp/>death<sp/>test<sp/>and<sp/>a<sp/>fast<sp/>death</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>test.<sp/><sp/>It<sp/>should<sp/>pass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_death_test_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">TEST(BarDeathTest,<sp/>ThreadSafeAndFast)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>g_death_test_count++;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>GTEST_FLAG(death_test_style)<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;threadsafe&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>EXPECT_DEATH_IF_SUPPORTED(::testing::internal::posix::Abort(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>GTEST_FLAG(death_test_style)<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>EXPECT_DEATH_IF_SUPPORTED(::testing::internal::posix::Abort(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_param_test_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumberOfParamTests<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyParamTest<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>testing::TestWithParam&lt;int&gt;<sp/>{};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">TEST_P(MyParamTest,<sp/>ShouldPass)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(vladl@google.com):<sp/>Make<sp/>parameter<sp/>value<sp/>checking<sp/>robust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRT<sp/>order<sp/>of<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(g_param_test_count<sp/>%<sp/>kNumberOfParamTests,<sp/>GetParam());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>g_param_test_count++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">INSTANTIATE_TEST_CASE_P(MyParamSequence,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyParamTest,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testing::Range(0,<sp/>kNumberOfParamTests));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resets<sp/>the<sp/>count<sp/>for<sp/>each<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetCounts()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>g_environment_set_up_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>g_environment_tear_down_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>g_should_fail_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>g_should_pass_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>g_death_test_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>g_param_test_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checks<sp/>that<sp/>the<sp/>count<sp/>for<sp/>each<sp/>test<sp/>is<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CheckCounts(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(expected,<sp/>g_environment_set_up_count);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(expected,<sp/>g_environment_tear_down_count);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(expected,<sp/>g_should_fail_count);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(expected,<sp/>g_should_pass_count);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(expected,<sp/>g_death_test_count);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(expected<sp/>*<sp/>kNumberOfParamTests,<sp/>g_param_test_count);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>behavior<sp/>of<sp/>Google<sp/>Test<sp/>when<sp/>--gtest_repeat<sp/>is<sp/>not<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestRepeatUnspecified()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>ResetCounts();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(1,<sp/>RUN_ALL_TESTS());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>CheckCounts(1);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>behavior<sp/>of<sp/>Google<sp/>Test<sp/>when<sp/>--gtest_repeat<sp/>has<sp/>the<sp/>given<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestRepeat(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>GTEST_FLAG(repeat)<sp/>=<sp/>repeat;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>ResetCounts();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0,<sp/>RUN_ALL_TESTS());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>CheckCounts(repeat);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>using<sp/>--gtest_repeat<sp/>when<sp/>--gtest_filter<sp/>specifies<sp/>an<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>of<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestRepeatWithEmptyFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>GTEST_FLAG(repeat)<sp/>=<sp/>repeat;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>GTEST_FLAG(filter)<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>ResetCounts();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(0,<sp/>RUN_ALL_TESTS());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>CheckCounts(0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>using<sp/>--gtest_repeat<sp/>when<sp/>--gtest_filter<sp/>specifies<sp/>a<sp/>set<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>successful<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestRepeatWithFilterForSuccessfulTests(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>GTEST_FLAG(repeat)<sp/>=<sp/>repeat;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>GTEST_FLAG(filter)<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*-*ShouldFail&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>ResetCounts();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(0,<sp/>RUN_ALL_TESTS());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat,<sp/>g_environment_set_up_count);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat,<sp/>g_environment_tear_down_count);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(0,<sp/>g_should_fail_count);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat,<sp/>g_should_pass_count);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat,<sp/>g_death_test_count);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat<sp/>*<sp/>kNumberOfParamTests,<sp/>g_param_test_count);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>using<sp/>--gtest_repeat<sp/>when<sp/>--gtest_filter<sp/>specifies<sp/>a<sp/>set<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>failed<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestRepeatWithFilterForFailedTests(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>GTEST_FLAG(repeat)<sp/>=<sp/>repeat;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>GTEST_FLAG(filter)<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*ShouldFail&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>ResetCounts();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(1,<sp/>RUN_ALL_TESTS());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat,<sp/>g_environment_set_up_count);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat,<sp/>g_environment_tear_down_count);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(repeat,<sp/>g_should_fail_count);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(0,<sp/>g_should_pass_count);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(0,<sp/>g_death_test_count);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>GTEST_CHECK_INT_EQ_(0,<sp/>g_param_test_count);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>testing::AddGlobalTestEnvironment(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MyEnvironment);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>TestRepeatUnspecified();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>TestRepeat(0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>TestRepeat(1);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>TestRepeat(5);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>TestRepeatWithEmptyFilter(2);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>TestRepeatWithEmptyFilter(3);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>TestRepeatWithFilterForSuccessfulTests(3);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>TestRepeatWithFilterForFailedTests(4);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>be<sp/>nice<sp/>to<sp/>verify<sp/>that<sp/>the<sp/>tests<sp/>indeed<sp/>loop<sp/>forever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>GTEST_FLAG(repeat)<sp/>is<sp/>negative,<sp/>but<sp/>this<sp/>test<sp/>will<sp/>be<sp/>quite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>complicated<sp/>to<sp/>write.<sp/><sp/>Since<sp/>this<sp/>flag<sp/>is<sp/>for<sp/>interactive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>debugging<sp/>only<sp/>and<sp/>doesn&apos;t<sp/>affect<sp/>the<sp/>normal<sp/>test<sp/>result,<sp/>such<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>would<sp/>be<sp/>an<sp/>overkill.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PASS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googletest/test/gtest_repeat_test.cc"/>
  </compounddef>
</doxygen>
