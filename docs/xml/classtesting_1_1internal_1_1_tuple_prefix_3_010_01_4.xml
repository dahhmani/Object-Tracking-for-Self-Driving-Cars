<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_tuple_prefix_3_010_01_4" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::TuplePrefix&lt; 0 &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_tuple_prefix_3_010_01_4_1a8bb323da9f209f4fef5d81d7c0b628e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref></type>
          </param>
          <param>
            <type>typename ValueTuple</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool testing::internal::TuplePrefix&lt; 0 &gt;::Matches</definition>
        <argsstring>(const MatcherTuple &amp;, const ValueTuple &amp;)</argsstring>
        <name>Matches</name>
        <param>
          <type>const <ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref> &amp;</type>
        </param>
        <param>
          <type>const ValueTuple &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="779" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="779" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_tuple_prefix_3_010_01_4_1aa2980f100d8100e56a0dff1d6df9da57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref></type>
          </param>
          <param>
            <type>typename ValueTuple</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void testing::internal::TuplePrefix&lt; 0 &gt;::ExplainMatchFailuresTo</definition>
        <argsstring>(const MatcherTuple &amp;, const ValueTuple &amp;, ::std::ostream *)</argsstring>
        <name>ExplainMatchFailuresTo</name>
        <param>
          <type>const <ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref> &amp;</type>
        </param>
        <param>
          <type>const ValueTuple &amp;</type>
        </param>
        <param>
          <type>::std::ostream *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="785" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="785" bodyend="787"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="776" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="776" bodyend="788"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_tuple_prefix_3_010_01_4_1aa2980f100d8100e56a0dff1d6df9da57" prot="public" virt="non-virtual"><scope>testing::internal::TuplePrefix&lt; 0 &gt;</scope><name>ExplainMatchFailuresTo</name></member>
      <member refid="classtesting_1_1internal_1_1_tuple_prefix_3_010_01_4_1a8bb323da9f209f4fef5d81d7c0b628e9" prot="public" virt="non-virtual"><scope>testing::internal::TuplePrefix&lt; 0 &gt;</scope><name>Matches</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
