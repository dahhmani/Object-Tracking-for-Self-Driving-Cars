<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack" kind="class" language="C++" prot="public">
    <compoundname>testing::gmock_generated_function_mockers_test::MockStack</compoundname>
    <basecompoundref refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface" prot="public" virt="non-virtual">testing::gmock_generated_function_mockers_test::StackInterface&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1aa8a3df8e1cbc95836663acd99c3e9d37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::MockStack</definition>
        <argsstring>()</argsstring>
        <name>MockStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="400" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a0ad833bc6134c5150b8271a5ba2e91b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::MOCK_METHOD1_T</definition>
        <argsstring>(Push, void(const T &amp;elem))</argsstring>
        <name>MOCK_METHOD1_T</name>
        <param>
          <type>Push</type>
        </param>
        <param>
          <type>void(const T &amp;elem)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a5e55ffb22e7f11c6940a97bd001bd50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::MOCK_METHOD0_T</definition>
        <argsstring>(Pop, void())</argsstring>
        <name>MOCK_METHOD0_T</name>
        <param>
          <type>Pop</type>
        </param>
        <param>
          <type>void()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a6171be20e8e4f44464cc8968e05b7c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::MOCK_CONST_METHOD0_T</definition>
        <argsstring>(GetSize, int())</argsstring>
        <name>MOCK_CONST_METHOD0_T</name>
        <param>
          <type>GetSize</type>
        </param>
        <param>
          <type>int()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1ae5950cfac08382a0ffc7c3bd5aba405f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::MOCK_CONST_METHOD0_T</definition>
        <argsstring>(GetTop, const T &amp;())</argsstring>
        <name>MOCK_CONST_METHOD0_T</name>
        <param>
          <type>GetTop</type>
        </param>
        <param>
          <type>const T &amp;</type>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="405" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a4b67d1f5b795e7c072fb846217a8f130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::MOCK_METHOD0_T</definition>
        <argsstring>(ReturnTypeWithComma, std::map&lt; int, int &gt;())</argsstring>
        <name>MOCK_METHOD0_T</name>
        <param>
          <type>ReturnTypeWithComma</type>
        </param>
        <param>
          <type>std::map&lt; int, int &gt;</type>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a69b9a7d0231b729d8a47201a49fa9166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::MOCK_CONST_METHOD1_T</definition>
        <argsstring>(ReturnTypeWithComma, std::map&lt; int, int &gt;(int))</argsstring>
        <name>MOCK_CONST_METHOD1_T</name>
        <param>
          <type>ReturnTypeWithComma</type>
        </param>
        <param>
          <type>std::map&lt; int, int &gt;</type>
          <array>int</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="409" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a769b47c7a69cbf6b1aab29e40005c234" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(MockStack)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack" kindref="compound">MockStack</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="412" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1565">
        <label>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack"/>
        <childnode refid="1566" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1566">
        <label>testing::gmock_generated_function_mockers_test::StackInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1567">
        <label>testing::gmock_generated_function_mockers_test::MockStack&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack"/>
        <childnode refid="1568" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1568">
        <label>testing::gmock_generated_function_mockers_test::StackInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface"/>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" line="398" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc" bodystart="398" bodyend="413"/>
    <listofallmembers>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface_1a537ec8647a2333f50e5f923a85b90eba" prot="public" virt="pure-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>GetSize</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface_1af36e32b9ae568100363466d1ebf95364" prot="public" virt="pure-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>GetTop</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a769b47c7a69cbf6b1aab29e40005c234" prot="private" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a6171be20e8e4f44464cc8968e05b7c7a" prot="public" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>MOCK_CONST_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1ae5950cfac08382a0ffc7c3bd5aba405f" prot="public" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>MOCK_CONST_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a69b9a7d0231b729d8a47201a49fa9166" prot="public" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>MOCK_CONST_METHOD1_T</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a5e55ffb22e7f11c6940a97bd001bd50c" prot="public" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>MOCK_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a4b67d1f5b795e7c072fb846217a8f130" prot="public" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>MOCK_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1a0ad833bc6134c5150b8271a5ba2e91b5" prot="public" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>MOCK_METHOD1_T</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_mock_stack_1aa8a3df8e1cbc95836663acd99c3e9d37" prot="public" virt="non-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>MockStack</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface_1a1a6646d1d9febe90c607b9b3e4539b67" prot="public" virt="pure-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>Pop</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface_1a49448f6195021fee947d37b80b6e5d30" prot="public" virt="pure-virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>Push</name></member>
      <member refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_stack_interface_1a87b83db3e9cb1c986d6b0649b37cfa7c" prot="public" virt="virtual"><scope>testing::gmock_generated_function_mockers_test::MockStack</scope><name>~StackInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
