<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structtesting_1_1internal_1_1_lossless_arithmetic_convertible_impl_3_01k_integer_00_01_from_00_01k_integer_00_01_to_01_4" kind="struct" language="C++" prot="public">
    <compoundname>testing::internal::LosslessArithmeticConvertibleImpl&lt; kInteger, From, kInteger, To &gt;</compoundname>
    <basecompoundref refid="structtesting_1_1internal_1_1bool__constant" prot="public" virt="non-virtual">testing::internal::bool_constant&lt;((sizeof(From)&lt; sizeof(To)) &amp;&amp;(!GMOCK_IS_SIGNED_(From)||GMOCK_IS_SIGNED_(To)))||((sizeof(From)==sizeof(To)) &amp;&amp;(GMOCK_IS_SIGNED_(From)==GMOCK_IS_SIGNED_(To)))&gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename From</type>
      </param>
      <param>
        <type>typename <ref refid="classtesting_1_1internal_1_1_to" kindref="compound">To</ref></type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1344">
        <label>testing::internal::LosslessArithmeticConvertibleImpl&lt; kInteger, From, kInteger, To &gt;</label>
        <link refid="structtesting_1_1internal_1_1_lossless_arithmetic_convertible_impl_3_01k_integer_00_01_from_00_01k_integer_00_01_to_01_4"/>
        <childnode refid="1345" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1345">
        <label>testing::internal::bool_constant&lt;((sizeof(From)&lt; sizeof(To)) &amp;&amp;(!GMOCK_IS_SIGNED_(From)||GMOCK_IS_SIGNED_(To)))||((sizeof(From)==sizeof(To)) &amp;&amp;(GMOCK_IS_SIGNED_(From)==GMOCK_IS_SIGNED_(To)))&gt;</label>
        <link refid="structtesting_1_1internal_1_1bool__constant"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1346">
        <label>testing::internal::LosslessArithmeticConvertibleImpl&lt; kInteger, From, kInteger, To &gt;</label>
        <link refid="structtesting_1_1internal_1_1_lossless_arithmetic_convertible_impl_3_01k_integer_00_01_from_00_01k_integer_00_01_to_01_4"/>
        <childnode refid="1347" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1347">
        <label>testing::internal::bool_constant&lt;((sizeof(From)&lt; sizeof(To)) &amp;&amp;(!GMOCK_IS_SIGNED_(From)||GMOCK_IS_SIGNED_(To)))||((sizeof(From)==sizeof(To)) &amp;&amp;(GMOCK_IS_SIGNED_(From)==GMOCK_IS_SIGNED_(To)))&gt;</label>
        <link refid="structtesting_1_1internal_1_1bool__constant"/>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h" line="218" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h" bodystart="210" bodyend="218"/>
    <listofallmembers>
      <member refid="structtesting_1_1internal_1_1bool__constant_1aba6d09ecf7eecea6c93480f0d627a167" prot="public" virt="non-virtual"><scope>testing::internal::LosslessArithmeticConvertibleImpl&lt; kInteger, From, kInteger, To &gt;</scope><name>type</name></member>
      <member refid="structtesting_1_1internal_1_1bool__constant_1a499fba6576296b04d99690a486424b32" prot="public" virt="non-virtual"><scope>testing::internal::LosslessArithmeticConvertibleImpl&lt; kInteger, From, kInteger, To &gt;</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
