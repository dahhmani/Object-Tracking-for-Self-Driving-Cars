<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_file_path" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::FilePath</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_file_path_1a12ce28a0015f85604e0372230fa18d6e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string testing::internal::FilePath::pathname_</definition>
        <argsstring></argsstring>
        <name>pathname_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="200" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a3504a51accbca78a52fe586133ea5499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::FilePath::FilePath</definition>
        <argsstring>()</argsstring>
        <name>FilePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="61" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1ae9efd0fee56c6e3e2d659b464250b112" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::FilePath::FilePath</definition>
        <argsstring>(const FilePath &amp;rhs)</argsstring>
        <name>FilePath</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="62" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a9fc072b140aa0652a7022fb809fe3abe" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::FilePath::FilePath</definition>
        <argsstring>(const std::string &amp;pathname)</argsstring>
        <name>FilePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>pathname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="64" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a8d9c1bafb90f10bcd5611a54d8f326ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
        <definition>FilePath&amp; testing::internal::FilePath::operator=</definition>
        <argsstring>(const FilePath &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="68" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a15a42de7518e89254e0640dd9317d5f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::FilePath::Set</definition>
        <argsstring>(const FilePath &amp;rhs)</argsstring>
        <name>Set</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="73" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1ab1d58734f2e179264eb6353fea57361d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; testing::internal::FilePath::string</definition>
        <argsstring>() const</argsstring>
        <name>string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="77" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a43e9ff978b0d7c43c401d976d4621aa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::internal::FilePath::c_str</definition>
        <argsstring>() const</argsstring>
        <name>c_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="78" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a2c165c5510e8705ade547849a9234a6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="111" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1ab47ada111cc940cf2359f6533bada6ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::RemoveTrailingPathSeparator</definition>
        <argsstring>() const</argsstring>
        <name>RemoveTrailingPathSeparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="116" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="346" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a6b61ede2c81ecd870b8220c04aec3060" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::RemoveDirectoryName</definition>
        <argsstring>() const</argsstring>
        <name>RemoveDirectoryName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="124" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a49e030b5a62ca7dcc7f920a63a96fa55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::RemoveFileName</definition>
        <argsstring>() const</argsstring>
        <name>RemoveFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="132" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="166" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1aab20b631705b90044d04c67205f2256f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::RemoveExtension</definition>
        <argsstring>(const char *extension) const</argsstring>
        <name>RemoveExtension</name>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="138" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a26790e530dd738f7fc8202c1ce718406" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::CreateDirectoriesRecursively</definition>
        <argsstring>() const</argsstring>
        <name>CreateDirectoriesRecursively</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="144" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="308" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1ae3a455e7c9fc967c2443b703e958f8bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::CreateFolder</definition>
        <argsstring>() const</argsstring>
        <name>CreateFolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="150" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="325" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a105bd8fc3adff8fcb4a593532842fb68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::FileOrDirectoryExists</definition>
        <argsstring>() const</argsstring>
        <name>FileOrDirectoryExists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="154" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="209" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a74ba8435e822d77f79f137c38de9bfeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::DirectoryExists</definition>
        <argsstring>() const</argsstring>
        <name>DirectoryExists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="158" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="223" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a73fc042ad65e85bbecb956eb4603a6f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::IsDirectory</definition>
        <argsstring>() const</argsstring>
        <name>IsDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="163" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a0661adf59aec40c40c8e39b888d68142" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::IsRootDirectory</definition>
        <argsstring>() const</argsstring>
        <name>IsRootDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="167" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="253" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1ae17e5581e7996021e598851fe947df9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FilePath::IsAbsolutePath</definition>
        <argsstring>() const</argsstring>
        <name>IsAbsolutePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="170" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="265" bodyend="276"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1aaff39ccd7bfb7a1c09c0220a64326387" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::GetCurrentDir</definition>
        <argsstring>()</argsstring>
        <name>GetCurrentDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="81" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="99" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1aa8c102da670261eb4fa8e2f2481df139" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::MakeFileName</definition>
        <argsstring>(const FilePath &amp;directory, const FilePath &amp;base_name, int number, const char *extension)</argsstring>
        <name>MakeFileName</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>directory</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>base_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="87" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="183" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1ac9d57987f60ac43f0c57b89e333e531e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::ConcatPaths</definition>
        <argsstring>(const FilePath &amp;directory, const FilePath &amp;relative_path)</argsstring>
        <name>ConcatPaths</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>directory</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>relative_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="95" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1a2280a77adb394cf80bb5f73fc292e8c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::FilePath::GenerateUniqueFileName</definition>
        <argsstring>(const FilePath &amp;directory, const FilePath &amp;base_name, const char *extension)</argsstring>
        <name>GenerateUniqueFileName</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>directory</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref> &amp;</type>
          <declname>base_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="106" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="286" bodyend="295"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1aa2f6d7d7823f71f25de50d309c966ef7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::FilePath::Normalize</definition>
        <argsstring>()</argsstring>
        <name>Normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="193" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="356" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_file_path_1ab47f288e1e9ce5a904eccb94e86c4f99" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * testing::internal::FilePath::FindLastPathSeparator</definition>
        <argsstring>() const</argsstring>
        <name>FindLastPathSeparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="198" column="1" bodyfile="vendor/googletest/googletest/src/gtest-filepath.cc" bodystart="136" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" line="59" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-filepath.h" bodystart="59" bodyend="201"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_file_path_1a43e9ff978b0d7c43c401d976d4621aa3" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>c_str</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1ac9d57987f60ac43f0c57b89e333e531e" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>ConcatPaths</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a26790e530dd738f7fc8202c1ce718406" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>CreateDirectoriesRecursively</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1ae3a455e7c9fc967c2443b703e958f8bd" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>CreateFolder</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a74ba8435e822d77f79f137c38de9bfeb" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>DirectoryExists</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a105bd8fc3adff8fcb4a593532842fb68" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>FileOrDirectoryExists</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a3504a51accbca78a52fe586133ea5499" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>FilePath</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1ae9efd0fee56c6e3e2d659b464250b112" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>FilePath</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a9fc072b140aa0652a7022fb809fe3abe" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>FilePath</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1ab47f288e1e9ce5a904eccb94e86c4f99" prot="private" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>FindLastPathSeparator</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a2280a77adb394cf80bb5f73fc292e8c8" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>GenerateUniqueFileName</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1aaff39ccd7bfb7a1c09c0220a64326387" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>GetCurrentDir</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1ae17e5581e7996021e598851fe947df9c" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>IsAbsolutePath</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a73fc042ad65e85bbecb956eb4603a6f2" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>IsDirectory</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a2c165c5510e8705ade547849a9234a6e" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>IsEmpty</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a0661adf59aec40c40c8e39b888d68142" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>IsRootDirectory</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1aa8c102da670261eb4fa8e2f2481df139" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>MakeFileName</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1aa2f6d7d7823f71f25de50d309c966ef7" prot="private" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>Normalize</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a8d9c1bafb90f10bcd5611a54d8f326ef" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>operator=</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a12ce28a0015f85604e0372230fa18d6e" prot="private" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>pathname_</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a6b61ede2c81ecd870b8220c04aec3060" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>RemoveDirectoryName</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1aab20b631705b90044d04c67205f2256f" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>RemoveExtension</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a49e030b5a62ca7dcc7f920a63a96fa55" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>RemoveFileName</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1ab47ada111cc940cf2359f6533bada6ca" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>RemoveTrailingPathSeparator</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1a15a42de7518e89254e0640dd9317d5f7" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>Set</name></member>
      <member refid="classtesting_1_1internal_1_1_file_path_1ab1d58734f2e179264eb6353fea57361d" prot="public" virt="non-virtual"><scope>testing::internal::FilePath</scope><name>string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
