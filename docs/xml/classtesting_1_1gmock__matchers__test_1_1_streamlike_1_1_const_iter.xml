<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter" kind="class" language="C++" prot="private">
    <compoundname>testing::gmock_matchers_test::Streamlike::ConstIter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::iterator&lt; std::input_iterator_tag, value_type, ptrdiff_t, const value_type *, const value_type &amp;&gt;</basecompoundref>
    <innerclass refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1_1_post_incr_proxy" prot="public">testing::gmock_matchers_test::Streamlike::ConstIter::PostIncrProxy</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a159a45a0271c596ad01ae70d9a5be69d" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtesting_1_1gmock__matchers__test_1_1_streamlike" kindref="compound">Streamlike</ref> *</type>
        <definition>const Streamlike* testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter::s_</definition>
        <argsstring></argsstring>
        <name>s_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4553" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a829a92cb79cc5c30841552385c609f82" prot="private" static="no" mutable="no">
        <type>std::list&lt; value_type &gt;::iterator</type>
        <definition>std::list&lt;value_type&gt;::iterator testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter::pos_</definition>
        <argsstring></argsstring>
        <name>pos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4554" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4554" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1ad986f4c477f42fe95dba4aedac08bcda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter::ConstIter</definition>
        <argsstring>(const Streamlike *s, typename std::list&lt; value_type &gt;::iterator pos)</argsstring>
        <name>ConstIter</name>
        <param>
          <type>const <ref refid="classtesting_1_1gmock__matchers__test_1_1_streamlike" kindref="compound">Streamlike</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>typename std::list&lt; value_type &gt;::iterator</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4519" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4519" bodyend="4521"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1aa0c10fda460c4e2173d04556ece2211e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>const value_type&amp; testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4523" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4523" bodyend="4523"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a639c3c1aba0cd794546eef5748acedfd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const value_type *</type>
        <definition>const value_type* testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4524" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4524" bodyend="4524"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a9bcafc679a4e5bf63060bcee69a983f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ConstIter &amp;</type>
        <definition>ConstIter&amp; testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4525" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4525" bodyend="4528"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a2c47b9a343e5360282885f6ac57afdb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1_1_post_incr_proxy" kindref="compound">PostIncrProxy</ref></type>
        <definition>PostIncrProxy testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4539" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4539" bodyend="4543"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a901fdc0cf03a573177b1e1c23925043d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const ConstIter &amp;a, const ConstIter &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const ConstIter &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const ConstIter &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4545" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4545" bodyend="4547"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1abed2e0628cac1a6c253ab60f9ad743f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const ConstIter &amp;a, const ConstIter &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const ConstIter &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const ConstIter &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4548" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4548" bodyend="4550"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="319">
        <label>std::iterator&lt; std::input_iterator_tag, value_type, ptrdiff_t, const value_type *, const value_type &amp; &gt;</label>
      </node>
      <node id="318">
        <label>testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter</label>
        <childnode refid="319" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="321">
        <label>std::iterator&lt; std::input_iterator_tag, value_type, ptrdiff_t, const value_type *, const value_type &amp; &gt;</label>
      </node>
      <node id="320">
        <label>testing::gmock_matchers_test::Streamlike&lt; T &gt;::ConstIter</label>
        <childnode refid="321" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="4517" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="4513" bodyend="4555"/>
    <listofallmembers>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1ad986f4c477f42fe95dba4aedac08bcda" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>ConstIter</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1abed2e0628cac1a6c253ab60f9ad743f6" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>operator!=</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1aa0c10fda460c4e2173d04556ece2211e" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>operator*</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a9bcafc679a4e5bf63060bcee69a983f9" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>operator++</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a2c47b9a343e5360282885f6ac57afdb5" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>operator++</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a639c3c1aba0cd794546eef5748acedfd" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>operator-&gt;</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a901fdc0cf03a573177b1e1c23925043d" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>operator==</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a829a92cb79cc5c30841552385c609f82" prot="private" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>pos_</name></member>
      <member refid="classtesting_1_1gmock__matchers__test_1_1_streamlike_1_1_const_iter_1a159a45a0271c596ad01ae70d9a5be69d" prot="private" virt="non-virtual"><scope>testing::gmock_matchers_test::Streamlike::ConstIter</scope><name>s_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
