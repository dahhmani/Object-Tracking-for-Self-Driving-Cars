<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1_matcher_interface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>testing::MatcherInterface</compoundname>
    <basecompoundref refid="classtesting_1_1_matcher_describer_interface" prot="public" virt="non-virtual">testing::MatcherDescriberInterface</basecompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__matchers__test_1_1_even_matcher_impl" prot="public" virt="non-virtual">testing::gmock_matchers_test::EvenMatcherImpl</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__matchers__test_1_1_greater_than_matcher" prot="public" virt="non-virtual">testing::gmock_matchers_test::GreaterThanMatcher</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__matchers__test_1_1_new_even_matcher_impl" prot="public" virt="non-virtual">testing::gmock_matchers_test::NewEvenMatcherImpl</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_any_matcher_impl" prot="public" virt="non-virtual">testing::internal::AnyMatcherImpl&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_both_of_matcher_impl" prot="public" virt="non-virtual">testing::internal::BothOfMatcherImpl&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_either_of_matcher_impl" prot="public" virt="non-virtual">testing::internal::EitherOfMatcherImpl&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_floating_eq_matcher_1_1_impl" prot="public" virt="non-virtual">testing::internal::FloatingEqMatcher&lt; FloatType &gt;::Impl&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_not_matcher_impl" prot="public" virt="non-virtual">testing::internal::NotMatcherImpl&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_matcher_interface_1a296b43607cd99d60365f0e6a762777cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool testing::MatcherInterface&lt; T &gt;::MatchAndExplain</definition>
        <argsstring>(T x, MatchResultListener *listener) const =0</argsstring>
        <name>MatchAndExplain</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_args_matcher_impl_1a60383b3073a61f9d82cbf31fe19e6bfa">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_any_matcher_impl_1ac2d8f01b1c8ede16295f03eda91c5de1">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_not_matcher_impl_1aff3743d9ffcd6dc54b389b5e23caacf3">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_both_of_matcher_impl_1a4f3e5edf69d168fef8bec577313748f4">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_either_of_matcher_impl_1af00ed8cd85c36f1e862bf85f776cee3b">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_floating_eq_matcher_1_1_impl_1a4ce47c481fdc4973ed671a492f455f99">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_size_is_matcher_1_1_impl_1a5180472f5a18b8c0314ed835c52e09d4">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_begin_end_distance_is_matcher_1_1_impl_1aa7bda59eae256018247699b0baa285c9">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_when_sorted_by_matcher_1_1_impl_1a9d8f57c729df8c041f2fd7febbc950da">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_pointwise_matcher_1_1_impl_1a4253946989f3743c4dd983909f2d062b">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_contains_matcher_impl_1a1cb9f1d2da48bd4a48c281215f8f94e9">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_each_matcher_impl_1a3b8ca89c85a96bbbcc74196ad29bf1ec">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_key_matcher_impl_1ae821c96473c6400defbb21eb9eca8d4c">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_pair_matcher_impl_1a1bba47f97cbf50a1f6331d3f7bfd47a1">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_elements_are_matcher_impl_1a6562159fa83e09417c3552fd881f878e">MatchAndExplain</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher_impl_1a4031291eef9be8c1e9e1effdd02c4334">MatchAndExplain</reimplementedby>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1436">
        <label>testing::internal::BothOfMatcherImpl&lt; T &gt;</label>
        <link refid="classtesting_1_1internal_1_1_both_of_matcher_impl"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1430">
        <label>testing::MatcherInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1_matcher_interface"/>
        <childnode refid="1431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1435">
        <label>testing::internal::AnyMatcherImpl&lt; T &gt;</label>
        <link refid="classtesting_1_1internal_1_1_any_matcher_impl"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1439">
        <label>testing::internal::NotMatcherImpl&lt; T &gt;</label>
        <link refid="classtesting_1_1internal_1_1_not_matcher_impl"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1431">
        <label>testing::MatcherDescriberInterface</label>
        <link refid="classtesting_1_1_matcher_describer_interface"/>
      </node>
      <node id="1437">
        <label>testing::internal::EitherOfMatcherImpl&lt; T &gt;</label>
        <link refid="classtesting_1_1internal_1_1_either_of_matcher_impl"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1433">
        <label>testing::gmock_matchers_test::GreaterThanMatcher&lt; int &gt;</label>
        <link refid="classtesting_1_1gmock__matchers__test_1_1_greater_than_matcher"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1438">
        <label>testing::internal::FloatingEqMatcher&lt; T &gt;::Impl</label>
        <link refid="classtesting_1_1internal_1_1_floating_eq_matcher_1_1_impl"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1434">
        <label>testing::gmock_matchers_test::NewEvenMatcherImpl&lt; int &gt;</label>
        <link refid="classtesting_1_1gmock__matchers__test_1_1_new_even_matcher_impl"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1432">
        <label>testing::gmock_matchers_test::EvenMatcherImpl&lt; int &gt;</label>
        <link refid="classtesting_1_1gmock__matchers__test_1_1_even_matcher_impl"/>
        <childnode refid="1430" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1440">
        <label>testing::MatcherInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1_matcher_interface"/>
        <childnode refid="1441" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1441">
        <label>testing::MatcherDescriberInterface</label>
        <link refid="classtesting_1_1_matcher_describer_interface"/>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="143" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="143" bodyend="181"/>
    <listofallmembers>
      <member refid="classtesting_1_1_matcher_describer_interface_1a2071afbc47097c4d1c0064275af34db0" prot="public" virt="virtual"><scope>testing::MatcherInterface</scope><name>DescribeNegationTo</name></member>
      <member refid="classtesting_1_1_matcher_describer_interface_1ad9f861588bd969b6e3e717f13bb94e7b" prot="public" virt="pure-virtual"><scope>testing::MatcherInterface</scope><name>DescribeTo</name></member>
      <member refid="classtesting_1_1_matcher_interface_1a296b43607cd99d60365f0e6a762777cf" prot="public" virt="pure-virtual"><scope>testing::MatcherInterface</scope><name>MatchAndExplain</name></member>
      <member refid="classtesting_1_1_matcher_describer_interface_1ae2236a56ad2cc35cad10efc1208854f4" prot="public" virt="virtual"><scope>testing::MatcherInterface</scope><name>~MatcherDescriberInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
