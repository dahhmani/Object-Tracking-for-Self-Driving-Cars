<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_unit_test_options" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::UnitTestOptions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_unit_test_options_1ae7413a21296d885c6924650b51ac4f6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::UnitTestOptions::GetOutputFormat</definition>
        <argsstring>()</argsstring>
        <name>GetOutputFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest-internal-inl.h" line="378" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="414" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_unit_test_options_1a993fb30ad66104158c8c0ac508daca3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile</definition>
        <argsstring>()</argsstring>
        <name>GetAbsolutePathToOutputFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest-internal-inl.h" line="383" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="426" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_unit_test_options_1af0235a2ee26dd6db21305e11d2358e4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::UnitTestOptions::PatternMatchesString</definition>
        <argsstring>(const char *pattern, const char *str)</argsstring>
        <name>PatternMatchesString</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest-internal-inl.h" line="392" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="462" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_unit_test_options_1a9975b59cece94874b303421697e3bca6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::UnitTestOptions::FilterMatchesTest</definition>
        <argsstring>(const std::string &amp;test_case_name, const std::string &amp;test_name)</argsstring>
        <name>FilterMatchesTest</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>test_case_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>test_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest-internal-inl.h" line="396" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="502" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_unit_test_options_1a67fc0adaffbb8d320b92e42e05017e4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::UnitTestOptions::MatchesFilter</definition>
        <argsstring>(const std::string &amp;name, const char *filter)</argsstring>
        <name>MatchesFilter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest-internal-inl.h" line="410" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="479" bodyend="498"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googletest/src/gtest-internal-inl.h" line="373" column="1" bodyfile="vendor/googletest/googletest/src/gtest-internal-inl.h" bodystart="373" bodyend="411"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_unit_test_options_1a9975b59cece94874b303421697e3bca6" prot="public" virt="non-virtual"><scope>testing::internal::UnitTestOptions</scope><name>FilterMatchesTest</name></member>
      <member refid="classtesting_1_1internal_1_1_unit_test_options_1a993fb30ad66104158c8c0ac508daca3f" prot="public" virt="non-virtual"><scope>testing::internal::UnitTestOptions</scope><name>GetAbsolutePathToOutputFile</name></member>
      <member refid="classtesting_1_1internal_1_1_unit_test_options_1ae7413a21296d885c6924650b51ac4f6d" prot="public" virt="non-virtual"><scope>testing::internal::UnitTestOptions</scope><name>GetOutputFormat</name></member>
      <member refid="classtesting_1_1internal_1_1_unit_test_options_1a67fc0adaffbb8d320b92e42e05017e4e" prot="public" virt="non-virtual"><scope>testing::internal::UnitTestOptions</scope><name>MatchesFilter</name></member>
      <member refid="classtesting_1_1internal_1_1_unit_test_options_1af0235a2ee26dd6db21305e11d2358e4f" prot="public" virt="non-virtual"><scope>testing::internal::UnitTestOptions</scope><name>PatternMatchesString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
