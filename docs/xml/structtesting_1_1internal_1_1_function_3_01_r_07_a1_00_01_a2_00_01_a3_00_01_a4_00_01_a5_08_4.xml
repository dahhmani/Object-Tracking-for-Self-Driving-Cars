<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" kind="struct" language="C++" prot="public">
    <compoundname>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</compoundname>
    <basecompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</basecompoundref>
    <derivedcompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename A1</type>
      </param>
      <param>
        <type>typename A2</type>
      </param>
      <param>
        <type>typename A3</type>
      </param>
      <param>
        <type>typename A4</type>
      </param>
      <param>
        <type>typename A5</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a5bc0279c43aa98c409219dee1b815c71" prot="public" static="no">
        <type>A5</type>
        <definition>typedef A5 testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;::Argument5</definition>
        <argsstring></argsstring>
        <name>Argument5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="209" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1af5a1487829347eae2a48b2f66f216f52" prot="public" static="no">
        <type>::testing::tuple&lt; A1, A2, A3, A4, A5 &gt;</type>
        <definition>typedef ::testing::tuple&lt;A1, A2, A3, A4, A5&gt; testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;::ArgumentTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="210" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a03c18380538e53141227afe6d0f20cc8" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt; ArgumentTuple &gt;::type</type>
        <definition>typedef MatcherTuple&lt;ArgumentTuple&gt;::type testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;::ArgumentMatcherTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentMatcherTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="211" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a2903acde18de33d756eef4d43d843c04" prot="public" static="no">
        <type>void</type>
        <definition>typedef void testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;::MakeResultVoid(A1, A2, A3, A4, A5)</definition>
        <argsstring>(A1, A2, A3, A4, A5)</argsstring>
        <name>MakeResultVoid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="212" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a552ce4ec27e2d09fa1c133c66f72d7b3" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref></type>
        <definition>typedef IgnoredValue testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;::MakeResultIgnoredValue(A1, A2, A3, A4, A5)</definition>
        <argsstring>(A1, A2, A3, A4, A5)</argsstring>
        <name>MakeResultIgnoredValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="213" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="716">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="717" relation="public-inheritance">
        </childnode>
      </node>
      <node id="715">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="716" relation="public-inheritance">
        </childnode>
      </node>
      <node id="717">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
      <node id="718">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4"/>
        <childnode refid="712" relation="public-inheritance">
        </childnode>
      </node>
      <node id="713">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="714" relation="public-inheritance">
        </childnode>
      </node>
      <node id="721">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6dfab3ccde80824a59fc4efd5336a27c1"/>
        <childnode refid="720" relation="public-inheritance">
        </childnode>
      </node>
      <node id="719">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4"/>
        <childnode refid="718" relation="public-inheritance">
        </childnode>
      </node>
      <node id="712">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="713" relation="public-inheritance">
        </childnode>
      </node>
      <node id="722">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6f6ff91550f0557b7708e490e5002cd35"/>
        <childnode refid="721" relation="public-inheritance">
        </childnode>
      </node>
      <node id="714">
        <label>testing::internal::Function&lt; R(A1, A2, A3)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="720">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4"/>
        <childnode refid="719" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="727">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="728" relation="public-inheritance">
        </childnode>
      </node>
      <node id="726">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="727" relation="public-inheritance">
        </childnode>
      </node>
      <node id="728">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
      <node id="724">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="725" relation="public-inheritance">
        </childnode>
      </node>
      <node id="723">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="724" relation="public-inheritance">
        </childnode>
      </node>
      <node id="725">
        <label>testing::internal::Function&lt; R(A1, A2, A3)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="726" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="208" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="207" bodyend="214"/>
    <listofallmembers>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4_1aca36c8586218fd015cc4736dc8d4c14f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Argument1</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a025f5192252366d73aa19718bb0ea89d" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Argument2</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4_1a2ac6eefb33feafe85c1c6742bdab509f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Argument3</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1ae5039423598ab0fecd4f594acbf34d85" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Argument4</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a5bc0279c43aa98c409219dee1b815c71" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Argument5</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a03c18380538e53141227afe6d0f20cc8" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>ArgumentMatcherTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1af5a1487829347eae2a48b2f66f216f52" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>ArgumentTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a552ce4ec27e2d09fa1c133c66f72d7b3" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>MakeResultIgnoredValue</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a2903acde18de33d756eef4d43d843c04" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>MakeResultVoid</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4_1a5c228a886ef598ac10988f8de5e32ca1" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
