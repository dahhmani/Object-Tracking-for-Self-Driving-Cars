<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmock-generated-matchers_8h" kind="file" language="C++">
    <compoundname>gmock-generated-matchers.h</compoundname>
    <includes local="no">iterator</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="gmock-matchers_8h" local="yes">gmock/gmock-matchers.h</includes>
    <includedby refid="gmock-more-matchers_8h" local="yes">vendor/googletest/googlemock/include/gmock/gmock-more-matchers.h</includedby>
    <includedby refid="gmock_8h" local="yes">vendor/googletest/googlemock/include/gmock/gmock.h</includedby>
    <includedby refid="gmock-matchers_8cc" local="yes">vendor/googletest/googlemock/src/gmock-matchers.cc</includedby>
    <includedby refid="gmock-generated-matchers__test_8cc" local="yes">vendor/googletest/googlemock/test/gmock-generated-matchers_test.cc</includedby>
    <incdepgraph>
      <node id="505">
        <label>sys/stat.h</label>
      </node>
      <node id="523">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="500" relation="include">
        </childnode>
      </node>
      <node id="517">
        <label>iomanip</label>
      </node>
      <node id="489">
        <label>limits</label>
      </node>
      <node id="506">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="496">
        <label>assert.h</label>
      </node>
      <node id="482">
        <label>iterator</label>
      </node>
      <node id="516">
        <label>float.h</label>
      </node>
      <node id="492">
        <label>gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
      </node>
      <node id="531">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="497">
        <label>stdlib.h</label>
      </node>
      <node id="521">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
      </node>
      <node id="532">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="481">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h</label>
        <link refid="gmock-generated-matchers_8h"/>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
      </node>
      <node id="536">
        <label>gmock/internal/custom/gmock-matchers.h</label>
        <link refid="internal_2custom_2gmock-matchers_8h_source"/>
      </node>
      <node id="484">
        <label>string</label>
      </node>
      <node id="518">
        <label>map</label>
      </node>
      <node id="513">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="530">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>stddef.h</label>
      </node>
      <node id="535">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="490">
        <label>ostream</label>
      </node>
      <node id="507">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="524">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="504">
        <label>sys/types.h</label>
      </node>
      <node id="503">
        <label>string.h</label>
      </node>
      <node id="511">
        <label>typeinfo</label>
      </node>
      <node id="495">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
      </node>
      <node id="508">
        <label>unistd.h</label>
      </node>
      <node id="485">
        <label>vector</label>
      </node>
      <node id="529">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="520">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
      </node>
      <node id="491">
        <label>utility</label>
      </node>
      <node id="483">
        <label>sstream</label>
      </node>
      <node id="499">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
      </node>
      <node id="486">
        <label>gmock/gmock-matchers.h</label>
        <link refid="gmock-matchers_8h_source"/>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
      </node>
      <node id="487">
        <label>math.h</label>
      </node>
      <node id="533">
        <label>iosfwd</label>
      </node>
      <node id="522">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="498">
        <label>iostream</label>
      </node>
      <node id="514">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
      </node>
      <node id="512">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="491" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>strings.h</label>
      </node>
      <node id="501">
        <label>ctype.h</label>
      </node>
      <node id="534">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="500">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="527">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
      </node>
      <node id="494">
        <label>gmock/internal/gmock-generated-internal-utils.h</label>
        <link refid="gmock-generated-internal-utils_8h_source"/>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>set</label>
      </node>
      <node id="526">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
      </node>
      <node id="488">
        <label>algorithm</label>
      </node>
      <node id="510">
        <label>regex.h</label>
      </node>
      <node id="493">
        <label>stdio.h</label>
      </node>
      <node id="525">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
      </node>
      <node id="528">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="537">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h</label>
        <link refid="gmock-generated-matchers_8h"/>
        <childnode refid="538" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
      </node>
      <node id="539">
        <label>vendor/googletest/googlemock/include/gmock/gmock.h</label>
        <link refid="gmock_8h_source"/>
        <childnode refid="540" relation="include">
        </childnode>
      </node>
      <node id="538">
        <label>vendor/googletest/googlemock/include/gmock/gmock-more-matchers.h</label>
        <link refid="gmock-more-matchers_8h_source"/>
        <childnode refid="539" relation="include">
        </childnode>
      </node>
      <node id="540">
        <label>vendor/googletest/googlemock/test/gmock_link_test.h</label>
        <link refid="gmock__link__test_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields" prot="public">testing::internal::TupleFields</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields" prot="public">testing::internal::TupleFields</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01-1_00_01-1_00_01-1_00_01-1_00_01-1_00_c541d4fe72f9dece2f1a50ee33bb16df" prot="public">testing::internal::TupleFields&lt; Tuple, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01-1_00_01-1_00_01-1_00_01-1_00_079b3e59a7bb10f5d0d7a5843be2be9d" prot="public">testing::internal::TupleFields&lt; Tuple, k0, -1, -1, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01-1_00_01-1_00_01-1_00_bfbbbfc9cc03949b0b1ff3620709d8ff" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, -1, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01-1_00_01-1_00_897bcaf4b51057696318fe39b8a2dc88" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, k2, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01-1_00_d404aa1c50b4758daf5bb2f78d0fb44c" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, k2, k3, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_24d73e0cd5fb480b4f69b3d189a737e1" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, k2, k3, k4, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_fc3c297a037e5312ea5ea32562e3997e" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, k2, k3, k4, k5, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_15a5f7560bc4eac1ca3e5cac752bf68d" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, k2, k3, k4, k5, k6, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_cda35487ca7d3bd5a9557919642ae14b" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, k2, k3, k4, k5, k6, k7, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_9c7cea784cec512ef84e111fc1d12260" prot="public">testing::internal::TupleFields&lt; Tuple, k0, k1, k2, k3, k4, k5, k6, k7, k8, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_args_matcher_impl" prot="public">testing::internal::ArgsMatcherImpl</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_args_matcher" prot="public">testing::internal::ArgsMatcher</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result1" prot="public">testing::internal::AllOfResult1</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result2" prot="public">testing::internal::AllOfResult2</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result3" prot="public">testing::internal::AllOfResult3</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result4" prot="public">testing::internal::AllOfResult4</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result5" prot="public">testing::internal::AllOfResult5</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result6" prot="public">testing::internal::AllOfResult6</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result7" prot="public">testing::internal::AllOfResult7</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result8" prot="public">testing::internal::AllOfResult8</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result9" prot="public">testing::internal::AllOfResult9</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_all_of_result10" prot="public">testing::internal::AllOfResult10</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result1" prot="public">testing::internal::AnyOfResult1</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result2" prot="public">testing::internal::AnyOfResult2</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result3" prot="public">testing::internal::AnyOfResult3</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result4" prot="public">testing::internal::AnyOfResult4</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result5" prot="public">testing::internal::AnyOfResult5</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result6" prot="public">testing::internal::AnyOfResult6</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result7" prot="public">testing::internal::AnyOfResult7</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result8" prot="public">testing::internal::AnyOfResult8</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result9" prot="public">testing::internal::AnyOfResult9</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_any_of_result10" prot="public">testing::internal::AnyOfResult10</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal">testing::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="gmock-generated-matchers_8h_1acf3e27de83a73f0d873da1cd471e505b" prot="public" static="no">
        <name>GMOCK_FIELD_TYPE_</name>
        <param><defname>Tuple</defname></param>
        <param><defname>i</defname></param>
        <initializer>typename ::testing::tuple_element&lt;i, Tuple&gt;::type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="51" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1af4fe73ff8e2b0494f4970b575b65ddff" prot="public" static="no">
        <name>MATCHER</name>
        <param><defname>name</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
<para>&lt;&lt; DiffStrings(str, arg); </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1381" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1acb7ae915efa2fd8d3f6ea7313198afb6" prot="public" static="no">
        <name>MATCHER_P</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1428" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1a78efce3ad21c8f68223f5c2d09f2e79d" prot="public" static="no">
        <name>MATCHER_P2</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1480" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1a507103c6251f8bf4393ec119d9e34d34" prot="public" static="no">
        <name>MATCHER_P3</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1537" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1a6ec420ed6bc3ad073f19a4e32dd1f38f" prot="public" static="no">
        <name>MATCHER_P4</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1597" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1a3a9589cd79e2dbdb4e09981510c9c42e" prot="public" static="no">
        <name>MATCHER_P5</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1666" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1aceda758bb064965b2b9a7e0e96085861" prot="public" static="no">
        <name>MATCHER_P6</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1739" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1a2948ce54387a83c33fa98ba0c73eb11f" prot="public" static="no">
        <name>MATCHER_P7</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1814" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1814" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1ad86c95b03df37fada38e18d8eb9e53bc" prot="public" static="no">
        <name>MATCHER_P8</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1898" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1898" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1a2dc1db146d4112c9fde1c2708807e43e" prot="public" static="no">
        <name>MATCHER_P9</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="1987" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="1987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-matchers_8h_1aa6a3925eeb8bcb4b6b3465cc4ff26650" prot="public" static="no">
        <name>MATCHER_P10</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <param><defname>description</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" line="2080" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h" bodystart="2080" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>was<sp/>GENERATED<sp/>by<sp/>command:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>pump.py<sp/>gmock-generated-matchers.h.pump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>EDIT<sp/>BY<sp/>HAND!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Mock<sp/>-<sp/>a<sp/>framework<sp/>for<sp/>writing<sp/>C++<sp/>mock<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>implements<sp/>some<sp/>commonly<sp/>used<sp/>variadic<sp/>matchers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_MATCHERS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_MATCHERS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/gmock-matchers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>of<sp/>the<sp/>i-th<sp/>(0-based)<sp/>field<sp/>of<sp/>Tuple.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>i)<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>::testing::tuple_element&lt;i,<sp/>Tuple&gt;::type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TupleFields&lt;Tuple,<sp/>k0,<sp/>...,<sp/>kn&gt;<sp/>is<sp/>for<sp/>selecting<sp/>fields<sp/>from<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tuple<sp/>of<sp/>type<sp/>Tuple.<sp/><sp/>It<sp/>has<sp/>two<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>type:<sp/>a<sp/>tuple<sp/>type<sp/>whose<sp/>i-th<sp/>field<sp/>is<sp/>the<sp/>ki-th<sp/>field<sp/>of<sp/>Tuple.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GetSelectedFields(t):<sp/>returns<sp/>fields<sp/>k0,<sp/>...,<sp/>and<sp/>kn<sp/>of<sp/>t<sp/>as<sp/>a<sp/>tuple.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>in<sp/>class<sp/>TupleFields&lt;tuple&lt;bool,<sp/>char,<sp/>int&gt;,<sp/>2,<sp/>0&gt;,<sp/>we<sp/>have:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>type<sp/>is<sp/>tuple&lt;int,<sp/>bool&gt;,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GetSelectedFields(make_tuple(true,<sp/>&apos;a&apos;,<sp/>42))<sp/>is<sp/>(42,<sp/>true).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9<sp/>=<sp/>-1&gt;</highlight></codeline>
<codeline lineno="68" refid="classtesting_1_1internal_1_1_tuple_fields" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>generic<sp/>version<sp/>is<sp/>used<sp/>when<sp/>there<sp/>are<sp/>10<sp/>selectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k3),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k4),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k5),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k6),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k7),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k8),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k9)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t),<sp/>get&lt;k3&gt;(t),<sp/>get&lt;k4&gt;(t),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k5&gt;(t),<sp/>get&lt;k6&gt;(t),<sp/>get&lt;k7&gt;(t),<sp/>get&lt;k8&gt;(t),<sp/>get&lt;k9&gt;(t));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>specialization<sp/>is<sp/>used<sp/>for<sp/>0<sp/>~<sp/>9<sp/>selectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple&gt;</highlight></codeline>
<codeline lineno="90" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01-1_00_01-1_00_01-1_00_01-1_00_01-1_00_c541d4fe72f9dece2f1a50ee33bb16df" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;&gt;<sp/>type;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/></highlight><highlight class="comment">/*<sp/>t<sp/>*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0&gt;</highlight></codeline>
<codeline lineno="99" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01-1_00_01-1_00_01-1_00_01-1_00_079b3e59a7bb10f5d0d7a5843be2be9d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1&gt;</highlight></codeline>
<codeline lineno="108" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01-1_00_01-1_00_01-1_00_bfbbbfc9cc03949b0b1ff3620709d8ff" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2&gt;</highlight></codeline>
<codeline lineno="118" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01-1_00_01-1_00_897bcaf4b51057696318fe39b8a2dc88" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3&gt;</highlight></codeline>
<codeline lineno="128" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01-1_00_d404aa1c50b4758daf5bb2f78d0fb44c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k3)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t),<sp/>get&lt;k3&gt;(t));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4&gt;</highlight></codeline>
<codeline lineno="139" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_24d73e0cd5fb480b4f69b3d189a737e1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k3),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k4)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t),<sp/>get&lt;k3&gt;(t),<sp/>get&lt;k4&gt;(t));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5&gt;</highlight></codeline>
<codeline lineno="150" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_fc3c297a037e5312ea5ea32562e3997e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k3),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k4),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k5)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t),<sp/>get&lt;k3&gt;(t),<sp/>get&lt;k4&gt;(t),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k5&gt;(t));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6&gt;</highlight></codeline>
<codeline lineno="163" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_15a5f7560bc4eac1ca3e5cac752bf68d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k3),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k4),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k5),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k6)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t),<sp/>get&lt;k3&gt;(t),<sp/>get&lt;k4&gt;(t),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k5&gt;(t),<sp/>get&lt;k6&gt;(t));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7&gt;</highlight></codeline>
<codeline lineno="177" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_cda35487ca7d3bd5a9557919642ae14b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k3),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k4),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k5),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k6),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k7)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t),<sp/>get&lt;k3&gt;(t),<sp/>get&lt;k4&gt;(t),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k5&gt;(t),<sp/>get&lt;k6&gt;(t),<sp/>get&lt;k7&gt;(t));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8&gt;</highlight></codeline>
<codeline lineno="192" refid="classtesting_1_1internal_1_1_tuple_fields_3_01_tuple_00_01k0_00_01k1_00_01k2_00_01k3_00_01k4_00_9c7cea784cec512ef84e111fc1d12260" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;Tuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;GMOCK_FIELD_TYPE_(Tuple,<sp/>k0),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k1),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k2),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k3),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k4),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k5),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k6),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k7),<sp/>GMOCK_FIELD_TYPE_(Tuple,<sp/>k8)&gt;<sp/>type;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>GetSelectedFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tuple&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(get&lt;k0&gt;(t),<sp/>get&lt;k1&gt;(t),<sp/>get&lt;k2&gt;(t),<sp/>get&lt;k3&gt;(t),<sp/>get&lt;k4&gt;(t),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k5&gt;(t),<sp/>get&lt;k6&gt;(t),<sp/>get&lt;k7&gt;(t),<sp/>get&lt;k8&gt;(t));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>GMOCK_FIELD_TYPE_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implements<sp/>the<sp/>Args()<sp/>matcher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ArgsTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9<sp/>=<sp/>-1&gt;</highlight></codeline>
<codeline lineno="211" refid="classtesting_1_1internal_1_1_args_matcher_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_args_matcher_impl" kindref="compound">ArgsMatcherImpl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher_interface" kindref="compound">MatcherInterface</ref>&lt;ArgsTuple&gt;<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ArgsTuple<sp/>may<sp/>have<sp/>top-level<sp/>const<sp/>or<sp/>reference<sp/>modifiers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>GTEST_REMOVE_REFERENCE_AND_CONST_(ArgsTuple)<sp/>RawArgsTuple;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">internal::TupleFields</ref>&lt;RawArgsTuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k6,<sp/>k7,<sp/>k8,<sp/>k9&gt;::type<sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;const SelectedArgs&amp;&gt;</ref><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">MonomorphicInnerMatcher</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher_impl" kindref="compound">ArgsMatcherImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>inner_matcher)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>inner_matcher_(SafeMatcherCast&lt;const<sp/>SelectedArgs&amp;&gt;(inner_matcher))<sp/>{}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MatchAndExplain(ArgsTuple<sp/>args,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref>*<sp/>listener)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectedArgs&amp;<sp/>selected_args<sp/>=<sp/>GetSelectedArgs(args);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!listener-&gt;IsInterested())</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inner_matcher_.Matches(selected_args);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintIndices(listener-&gt;stream());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>*listener<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;are<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>PrintToString(selected_args);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_string_match_result_listener" kindref="compound">StringMatchResultListener</ref><sp/>inner_listener;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match<sp/>=<sp/>inner_matcher_.MatchAndExplain(selected_args,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;inner_listener);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintIfNotEmpty(inner_listener.str(),<sp/>listener-&gt;stream());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DescribeTo(::std::ostream*<sp/>os)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>*os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;are<sp/>a<sp/>tuple<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintIndices(os);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>inner_matcher_.DescribeTo(os);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DescribeNegationTo(::std::ostream*<sp/>os)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>*os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;are<sp/>a<sp/>tuple<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintIndices(os);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>inner_matcher_.DescribeNegationTo(os);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>GetSelectedArgs(ArgsTuple<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_tuple_fields" kindref="compound">TupleFields</ref>&lt;RawArgsTuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k9&gt;::GetSelectedFields(args);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prints<sp/>the<sp/>indices<sp/>of<sp/>the<sp/>selected<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintIndices(::std::ostream*<sp/>os)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>*os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;whose<sp/>fields<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indices[10]<sp/>=<sp/>{<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,<sp/>k9<sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[i]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indices[i];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>*os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MonomorphicInnerMatcher<sp/>inner_matcher_;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_ASSIGN_(<ref refid="classtesting_1_1internal_1_1_args_matcher_impl" kindref="compound">ArgsMatcherImpl</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InnerMatcher,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9<sp/>=<sp/>-1&gt;</highlight></codeline>
<codeline lineno="281" refid="classtesting_1_1internal_1_1_args_matcher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">ArgsMatcher</ref><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">ArgsMatcher</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>inner_matcher)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>inner_matcher_(inner_matcher)<sp/>{}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgsTuple&gt;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;ArgsTuple&gt;</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MakeMatcher(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher_impl" kindref="compound">ArgsMatcherImpl</ref>&lt;ArgsTuple,<sp/>k0,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k6,<sp/>k7,<sp/>k8,<sp/>k9&gt;(inner_matcher_));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher<sp/>inner_matcher_;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_ASSIGN_(<ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">ArgsMatcher</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>set<sp/>of<sp/>metafunctions<sp/>for<sp/>computing<sp/>the<sp/>result<sp/>type<sp/>of<sp/>AllOf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AllOf(m1,<sp/>...,<sp/>mN)<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AllOfResultN&lt;decltype(m1),<sp/>...,<sp/>decltype(mN)&gt;::type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Although<sp/>AllOf<sp/>isn&apos;t<sp/>defined<sp/>for<sp/>one<sp/>argument,<sp/>AllOfResult1<sp/>is<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>simplify<sp/>the<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1&gt;</highlight></codeline>
<codeline lineno="305" refid="structtesting_1_1internal_1_1_all_of_result1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result1" kindref="compound">AllOfResult1</ref><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>M1<sp/>type;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2&gt;</highlight></codeline>
<codeline lineno="310" refid="structtesting_1_1internal_1_1_all_of_result2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result2" kindref="compound">AllOfResult2</ref><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AllOfResult1&lt;M1&gt;::type,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AllOfResult1&lt;M2&gt;::type</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3&gt;</highlight></codeline>
<codeline lineno="318" refid="structtesting_1_1internal_1_1_all_of_result3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result3" kindref="compound">AllOfResult3</ref><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AllOfResult1&lt;M1&gt;::type,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult2&lt;M2, M3&gt;::type</ref></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4&gt;</highlight></codeline>
<codeline lineno="326" refid="structtesting_1_1internal_1_1_all_of_result4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result4" kindref="compound">AllOfResult4</ref><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult2&lt;M1, M2&gt;::type</ref>,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult2&lt;M3, M4&gt;::type</ref></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5&gt;</highlight></codeline>
<codeline lineno="334" refid="structtesting_1_1internal_1_1_all_of_result5" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result5" kindref="compound">AllOfResult5</ref><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult2&lt;M1, M2&gt;::type</ref>,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult3&lt;M3, M4, M5&gt;::type</ref></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6&gt;</highlight></codeline>
<codeline lineno="343" refid="structtesting_1_1internal_1_1_all_of_result6" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result6" kindref="compound">AllOfResult6</ref><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult3&lt;M1, M2, M3&gt;::type</ref>,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult3&lt;M4, M5, M6&gt;::type</ref></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7&gt;</highlight></codeline>
<codeline lineno="352" refid="structtesting_1_1internal_1_1_all_of_result7" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result7" kindref="compound">AllOfResult7</ref><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult3&lt;M1, M2, M3&gt;::type</ref>,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult4&lt;M4, M5, M6, M7&gt;::type</ref></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">};</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8&gt;</highlight></codeline>
<codeline lineno="361" refid="structtesting_1_1internal_1_1_all_of_result8" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result8" kindref="compound">AllOfResult8</ref><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult4&lt;M1, M2, M3, M4&gt;::type</ref>,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult4&lt;M5, M6, M7, M8&gt;::type</ref></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9&gt;</highlight></codeline>
<codeline lineno="370" refid="structtesting_1_1internal_1_1_all_of_result9" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result9" kindref="compound">AllOfResult9</ref><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult4&lt;M1, M2, M3, M4&gt;::type</ref>,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult5&lt;M5, M6, M7, M8, M9&gt;::type</ref></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M10&gt;</highlight></codeline>
<codeline lineno="379" refid="structtesting_1_1internal_1_1_all_of_result10" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_all_of_result10" kindref="compound">AllOfResult10</ref><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">BothOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult5&lt;M1, M2, M3, M4, M5&gt;::type</ref>,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">AllOfResult5&lt;M6, M7, M8, M9, M10&gt;::type</ref></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">};</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>set<sp/>of<sp/>metafunctions<sp/>for<sp/>computing<sp/>the<sp/>result<sp/>type<sp/>of<sp/>AnyOf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AnyOf(m1,<sp/>...,<sp/>mN)<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AnyOfResultN&lt;decltype(m1),<sp/>...,<sp/>decltype(mN)&gt;::type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Although<sp/>AnyOf<sp/>isn&apos;t<sp/>defined<sp/>for<sp/>one<sp/>argument,<sp/>AnyOfResult1<sp/>is<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>simplify<sp/>the<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1&gt;</highlight></codeline>
<codeline lineno="393" refid="structtesting_1_1internal_1_1_any_of_result1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result1" kindref="compound">AnyOfResult1</ref><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>M1<sp/>type;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2&gt;</highlight></codeline>
<codeline lineno="398" refid="structtesting_1_1internal_1_1_any_of_result2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result2" kindref="compound">AnyOfResult2</ref><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AnyOfResult1&lt;M1&gt;::type,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AnyOfResult1&lt;M2&gt;::type</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3&gt;</highlight></codeline>
<codeline lineno="406" refid="structtesting_1_1internal_1_1_any_of_result3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result3" kindref="compound">AnyOfResult3</ref><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AnyOfResult1&lt;M1&gt;::type,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult2&lt;M2, M3&gt;::type</ref></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">};</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4&gt;</highlight></codeline>
<codeline lineno="414" refid="structtesting_1_1internal_1_1_any_of_result4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result4" kindref="compound">AnyOfResult4</ref><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult2&lt;M1, M2&gt;::type</ref>,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult2&lt;M3, M4&gt;::type</ref></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="419"><highlight class="normal">};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5&gt;</highlight></codeline>
<codeline lineno="422" refid="structtesting_1_1internal_1_1_any_of_result5" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result5" kindref="compound">AnyOfResult5</ref><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult2&lt;M1, M2&gt;::type</ref>,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult3&lt;M3, M4, M5&gt;::type</ref></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6&gt;</highlight></codeline>
<codeline lineno="431" refid="structtesting_1_1internal_1_1_any_of_result6" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result6" kindref="compound">AnyOfResult6</ref><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult3&lt;M1, M2, M3&gt;::type</ref>,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult3&lt;M4, M5, M6&gt;::type</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7&gt;</highlight></codeline>
<codeline lineno="440" refid="structtesting_1_1internal_1_1_any_of_result7" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result7" kindref="compound">AnyOfResult7</ref><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult3&lt;M1, M2, M3&gt;::type</ref>,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult4&lt;M4, M5, M6, M7&gt;::type</ref></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8&gt;</highlight></codeline>
<codeline lineno="449" refid="structtesting_1_1internal_1_1_any_of_result8" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result8" kindref="compound">AnyOfResult8</ref><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult4&lt;M1, M2, M3, M4&gt;::type</ref>,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult4&lt;M5, M6, M7, M8&gt;::type</ref></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">};</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9&gt;</highlight></codeline>
<codeline lineno="458" refid="structtesting_1_1internal_1_1_any_of_result9" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result9" kindref="compound">AnyOfResult9</ref><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult4&lt;M1, M2, M3, M4&gt;::type</ref>,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult5&lt;M5, M6, M7, M8, M9&gt;::type</ref></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M10&gt;</highlight></codeline>
<codeline lineno="467" refid="structtesting_1_1internal_1_1_any_of_result10" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_any_of_result10" kindref="compound">AnyOfResult10</ref><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">EitherOfMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult5&lt;M1, M2, M3, M4, M5&gt;::type</ref>,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">AnyOfResult5&lt;M6, M7, M8, M9, M10&gt;::type</ref></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">};</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Args&lt;N1,<sp/>N2,<sp/>...,<sp/>Nk&gt;(a_matcher)<sp/>matches<sp/>a<sp/>tuple<sp/>if<sp/>the<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fields<sp/>of<sp/>it<sp/>matches<sp/>a_matcher.<sp/><sp/>C++<sp/>doesn&apos;t<sp/>support<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>for<sp/>function<sp/>templates,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>overload<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher&gt;</ref></highlight></codeline>
<codeline lineno="481"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher&gt;</ref>(matcher);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1&gt;</ref></highlight></codeline>
<codeline lineno="487"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1&gt;</ref>(matcher);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2&gt;</ref></highlight></codeline>
<codeline lineno="493"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2&gt;</ref>(matcher);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3&gt;</ref></highlight></codeline>
<codeline lineno="499"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3&gt;</ref>(matcher);</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4&gt;</ref></highlight></codeline>
<codeline lineno="505"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4&gt;</ref>(matcher);</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4, k5&gt;</ref></highlight></codeline>
<codeline lineno="511"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4, k5&gt;</ref>(matcher);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4, k5, k6&gt;</ref></highlight></codeline>
<codeline lineno="517"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4, k5, k6&gt;</ref>(matcher);</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4, k5, k6, k7&gt;</ref></highlight></codeline>
<codeline lineno="524"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher</ref>&lt;InnerMatcher,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k7&gt;(matcher);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4, k5, k6, k7, k8&gt;</ref></highlight></codeline>
<codeline lineno="532"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher</ref>&lt;InnerMatcher,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k8&gt;(matcher);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher&lt;InnerMatcher, k1, k2, k3, k4, k5, k6, k7, k8, k9&gt;</ref></highlight></codeline>
<codeline lineno="540"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher</ref>&lt;InnerMatcher,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k9&gt;(matcher);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerMatcher&gt;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher</ref>&lt;InnerMatcher,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,<sp/>k9,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>k10&gt;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">Args(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerMatcher&amp;<sp/>matcher)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_args_matcher" kindref="compound">internal::ArgsMatcher</ref>&lt;InnerMatcher,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k9,<sp/>k10&gt;(matcher);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ElementsAre(e_1,<sp/>e_2,<sp/>...<sp/>e_n)<sp/>matches<sp/>an<sp/>STL-style<sp/>container<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//<sp/>n<sp/>elements,<sp/>where<sp/>the<sp/>i-th<sp/>element<sp/>in<sp/>the<sp/>container<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>match<sp/>the<sp/>i-th<sp/>argument<sp/>in<sp/>the<sp/>list.<sp/><sp/>Each<sp/>argument<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ElementsAre()<sp/>can<sp/>be<sp/>either<sp/>a<sp/>value<sp/>or<sp/>a<sp/>matcher.<sp/><sp/>We<sp/>support<sp/>up<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>10<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>use<sp/>of<sp/>DecayArray<sp/>in<sp/>the<sp/>implementation<sp/>allows<sp/>ElementsAre()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>accept<sp/>string<sp/>literals,<sp/>whose<sp/>type<sp/>is<sp/>const<sp/>char[N],<sp/>but<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>want<sp/>to<sp/>treat<sp/>them<sp/>as<sp/>const<sp/>char*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Since<sp/>ElementsAre()<sp/>cares<sp/>about<sp/>the<sp/>order<sp/>of<sp/>the<sp/>elements,<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>not<sp/>be<sp/>used<sp/>with<sp/>containers<sp/>whose<sp/>elements&apos;s<sp/>order<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>undefined<sp/>(e.g.<sp/>hash_map).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">ElementsAre()<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args());</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1));</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="590"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2));</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3));</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4&gt;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4));</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5&gt;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5));</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6&gt;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,<sp/>e6));</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7&gt;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,<sp/>e6,<sp/>e7));</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8&gt;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T8&amp;<sp/>e8)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,<sp/>e6,<sp/>e7,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e8));</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9&gt;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T8&amp;<sp/>e8,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T9&amp;<sp/>e9)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,<sp/>e6,<sp/>e7,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e8,<sp/>e9));</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10&gt;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T10&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">ElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T8&amp;<sp/>e8,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T9&amp;<sp/>e9,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T10&amp;<sp/>e10)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T10&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_elements_are_matcher" kindref="compound">internal::ElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,<sp/>e6,<sp/>e7,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e8,<sp/>e9,<sp/>e10));</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UnorderedElementsAre(e_1,<sp/>e_2,<sp/>...,<sp/>e_n)<sp/>is<sp/>an<sp/>ElementsAre<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>matches<sp/>n<sp/>elements<sp/>in<sp/>any<sp/>order.<sp/><sp/>We<sp/>support<sp/>up<sp/>to<sp/>n=10<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="785"><highlight class="normal">UnorderedElementsAre()<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args());</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1));</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="805"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2));</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="818"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3));</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4&gt;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="833"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4));</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5&gt;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="850"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5));</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6&gt;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e6));</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7&gt;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e6,<sp/>e7));</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8&gt;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T8&amp;<sp/>e8)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e6,<sp/>e7,<sp/>e8));</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9&gt;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="949"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T8&amp;<sp/>e8,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T9&amp;<sp/>e9)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e6,<sp/>e7,<sp/>e8,<sp/>e9));</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10&gt;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher</ref>&lt;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T10&gt;::type&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="979"><highlight class="normal">UnorderedElementsAre(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1&amp;<sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2&amp;<sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T3&amp;<sp/>e3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T4&amp;<sp/>e4,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T5&amp;<sp/>e5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T6&amp;<sp/>e6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T7&amp;<sp/>e7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T8&amp;<sp/>e8,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T9&amp;<sp/>e9,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T10&amp;<sp/>e10)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T1&gt;::type,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T2&gt;::type,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T3&gt;::type,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T4&gt;::type,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T5&gt;::type,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T6&gt;::type,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T7&gt;::type,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T8&gt;::type,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T9&gt;::type,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>internal::DecayArray&lt;T10&gt;::type&gt;<sp/>Args;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_unordered_elements_are_matcher" kindref="compound">internal::UnorderedElementsAreMatcher&lt;Args&gt;</ref>(Args(e1,<sp/>e2,<sp/>e3,<sp/>e4,<sp/>e5,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e6,<sp/>e7,<sp/>e8,<sp/>e9,<sp/>e10));</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AllOf(m1,<sp/>m2,<sp/>...,<sp/>mk)<sp/>matches<sp/>any<sp/>value<sp/>that<sp/>matches<sp/>all<sp/>of<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sub-matchers.<sp/><sp/>AllOf<sp/>is<sp/>called<sp/>fully<sp/>qualified<sp/>to<sp/>prevent<sp/>ADL<sp/>from<sp/>firing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2&gt;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult2&lt;M1, M2&gt;::type</ref></highlight></codeline>
<codeline lineno="1002"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult2&lt;M1, M2&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m1,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m2);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3&gt;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult3&lt;M1, M2, M3&gt;::type</ref></highlight></codeline>
<codeline lineno="1010"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult3&lt;M1, M2, M3&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m1,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m2,<sp/>m3));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4&gt;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult4&lt;M1, M2, M3, M4&gt;::type</ref></highlight></codeline>
<codeline lineno="1018"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult4&lt;M1, M2, M3, M4&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m1,<sp/>m2),</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m3,<sp/>m4));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5&gt;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult5&lt;M1, M2, M3, M4, M5&gt;::type</ref></highlight></codeline>
<codeline lineno="1026"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult5&lt;M1, M2, M3, M4, M5&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m1,<sp/>m2),</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m3,<sp/>m4,<sp/>m5));</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6&gt;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult6&lt;M1, M2, M3, M4, M5, M6&gt;::type</ref></highlight></codeline>
<codeline lineno="1035"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult6&lt;M1, M2, M3, M4, M5, M6&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m1,<sp/>m2,<sp/>m3),</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m4,<sp/>m5,<sp/>m6));</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7&gt;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult7&lt;M1, M2, M3, M4, M5, M6, M7&gt;::type</ref></highlight></codeline>
<codeline lineno="1044"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult7&lt;M1, M2, M3, M4, M5, M6, M7&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m1,<sp/>m2,<sp/>m3),</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m4,<sp/>m5,<sp/>m6,<sp/>m7));</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8&gt;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult8&lt;M1, M2, M3, M4, M5, M6, M7, M8&gt;::type</ref></highlight></codeline>
<codeline lineno="1053"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7,<sp/>M8<sp/>m8)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult8&lt;M1, M2, M3, M4, M5, M6, M7, M8&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m1,<sp/>m2,<sp/>m3,<sp/>m4),</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m5,<sp/>m6,<sp/>m7,<sp/>m8));</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9&gt;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_both_of_matcher" kindref="compound">internal::AllOfResult9&lt;M1, M2, M3, M4, M5, M6, M7, M8, M9&gt;::type</ref></highlight></codeline>
<codeline lineno="1062"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7,<sp/>M8<sp/>m8,<sp/>M9<sp/>m9)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_all_of_result9" kindref="compound">internal::AllOfResult9</ref>&lt;M1,<sp/>M2,<sp/>M3,<sp/>M4,<sp/>M5,<sp/>M6,<sp/>M7,<sp/>M8,</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M9&gt;<ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">::type</ref>(</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m1,<sp/>m2,<sp/>m3,<sp/>m4),</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m5,<sp/>m6,<sp/>m7,<sp/>m8,<sp/>m9));</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M10&gt;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_all_of_result10" kindref="compound">internal::AllOfResult10</ref>&lt;M1,<sp/>M2,<sp/>M3,<sp/>M4,<sp/>M5,<sp/>M6,<sp/>M7,<sp/>M8,<sp/>M9,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>M10&gt;<ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">::type</ref></highlight></codeline>
<codeline lineno="1073"><highlight class="normal">AllOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7,<sp/>M8<sp/>m8,<sp/>M9<sp/>m9,<sp/>M10<sp/>m10)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_all_of_result10" kindref="compound">internal::AllOfResult10</ref>&lt;M1,<sp/>M2,<sp/>M3,<sp/>M4,<sp/>M5,<sp/>M6,<sp/>M7,<sp/>M8,<sp/>M9,</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M10&gt;<ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">::type</ref>(</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5),</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AllOf(m6,<sp/>m7,<sp/>m8,<sp/>m9,<sp/>m10));</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AnyOf(m1,<sp/>m2,<sp/>...,<sp/>mk)<sp/>matches<sp/>any<sp/>value<sp/>that<sp/>matches<sp/>any<sp/>of<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sub-matchers.<sp/><sp/>AnyOf<sp/>is<sp/>called<sp/>fully<sp/>qualified<sp/>to<sp/>prevent<sp/>ADL<sp/>from<sp/>firing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2&gt;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult2&lt;M1, M2&gt;::type</ref></highlight></codeline>
<codeline lineno="1085"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult2&lt;M1, M2&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m1,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m2);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3&gt;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult3&lt;M1, M2, M3&gt;::type</ref></highlight></codeline>
<codeline lineno="1093"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3)<sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult3&lt;M1, M2, M3&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m1,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m2,<sp/>m3));</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4&gt;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult4&lt;M1, M2, M3, M4&gt;::type</ref></highlight></codeline>
<codeline lineno="1101"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult4&lt;M1, M2, M3, M4&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m1,<sp/>m2),</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m3,<sp/>m4));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5&gt;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult5&lt;M1, M2, M3, M4, M5&gt;::type</ref></highlight></codeline>
<codeline lineno="1109"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult5&lt;M1, M2, M3, M4, M5&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m1,<sp/>m2),</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m3,<sp/>m4,<sp/>m5));</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6&gt;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult6&lt;M1, M2, M3, M4, M5, M6&gt;::type</ref></highlight></codeline>
<codeline lineno="1118"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult6&lt;M1, M2, M3, M4, M5, M6&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m1,<sp/>m2,<sp/>m3),</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m4,<sp/>m5,<sp/>m6));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7&gt;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult7&lt;M1, M2, M3, M4, M5, M6, M7&gt;::type</ref></highlight></codeline>
<codeline lineno="1127"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult7&lt;M1, M2, M3, M4, M5, M6, M7&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m1,<sp/>m2,<sp/>m3),</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m4,<sp/>m5,<sp/>m6,<sp/>m7));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8&gt;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult8&lt;M1, M2, M3, M4, M5, M6, M7, M8&gt;::type</ref></highlight></codeline>
<codeline lineno="1136"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7,<sp/>M8<sp/>m8)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult8&lt;M1, M2, M3, M4, M5, M6, M7, M8&gt;::type</ref>(</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m1,<sp/>m2,<sp/>m3,<sp/>m4),</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m5,<sp/>m6,<sp/>m7,<sp/>m8));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9&gt;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">internal::AnyOfResult9&lt;M1, M2, M3, M4, M5, M6, M7, M8, M9&gt;::type</ref></highlight></codeline>
<codeline lineno="1145"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7,<sp/>M8<sp/>m8,<sp/>M9<sp/>m9)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_any_of_result9" kindref="compound">internal::AnyOfResult9</ref>&lt;M1,<sp/>M2,<sp/>M3,<sp/>M4,<sp/>M5,<sp/>M6,<sp/>M7,<sp/>M8,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M9&gt;<ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">::type</ref>(</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m1,<sp/>m2,<sp/>m3,<sp/>m4),</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m5,<sp/>m6,<sp/>m7,<sp/>m8,<sp/>m9));</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M5,</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M10&gt;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_any_of_result10" kindref="compound">internal::AnyOfResult10</ref>&lt;M1,<sp/>M2,<sp/>M3,<sp/>M4,<sp/>M5,<sp/>M6,<sp/>M7,<sp/>M8,<sp/>M9,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>M10&gt;<ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">::type</ref></highlight></codeline>
<codeline lineno="1156"><highlight class="normal">AnyOf(M1<sp/>m1,<sp/>M2<sp/>m2,<sp/>M3<sp/>m3,<sp/>M4<sp/>m4,<sp/>M5<sp/>m5,<sp/>M6<sp/>m6,<sp/>M7<sp/>m7,<sp/>M8<sp/>m8,<sp/>M9<sp/>m9,<sp/>M10<sp/>m10)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_any_of_result10" kindref="compound">internal::AnyOfResult10</ref>&lt;M1,<sp/>M2,<sp/>M3,<sp/>M4,<sp/>M5,<sp/>M6,<sp/>M7,<sp/>M8,<sp/>M9,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M10&gt;<ref refid="classtesting_1_1internal_1_1_either_of_matcher" kindref="compound">::type</ref>(</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5),</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::AnyOf(m6,<sp/>m7,<sp/>m8,<sp/>m9,<sp/>m10));</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>MATCHER*<sp/>family<sp/>of<sp/>macros<sp/>can<sp/>be<sp/>used<sp/>in<sp/>a<sp/>namespace<sp/>scope<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>custom<sp/>matchers<sp/>easily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Basic<sp/>Usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER(name,<sp/>description_string)<sp/>{<sp/>statements;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defines<sp/>a<sp/>matcher<sp/>with<sp/>the<sp/>given<sp/>name<sp/>that<sp/>executes<sp/>the<sp/>statements,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>must<sp/>return<sp/>a<sp/>bool<sp/>to<sp/>indicate<sp/>if<sp/>the<sp/>match<sp/>succeeds.<sp/><sp/>Inside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>statements,<sp/>you<sp/>can<sp/>refer<sp/>to<sp/>the<sp/>value<sp/>being<sp/>matched<sp/>by<sp/>&apos;arg&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>refer<sp/>to<sp/>its<sp/>type<sp/>by<sp/>&apos;arg_type&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>description<sp/>string<sp/>documents<sp/>what<sp/>the<sp/>matcher<sp/>does,<sp/>and<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>generate<sp/>the<sp/>failure<sp/>message<sp/>when<sp/>the<sp/>match<sp/>fails.<sp/><sp/>Since<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MATCHER()<sp/>is<sp/>usually<sp/>defined<sp/>in<sp/>a<sp/>header<sp/>file<sp/>shared<sp/>by<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>source<sp/>files,<sp/>we<sp/>require<sp/>the<sp/>description<sp/>to<sp/>be<sp/>a<sp/>C-string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>literal<sp/>to<sp/>avoid<sp/>possible<sp/>side<sp/>effects.<sp/><sp/>It<sp/>can<sp/>be<sp/>empty,<sp/>in<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>case<sp/>we&apos;ll<sp/>use<sp/>the<sp/>sequence<sp/>of<sp/>words<sp/>in<sp/>the<sp/>matcher<sp/>name<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER(IsEven,<sp/>&quot;&quot;)<sp/>{<sp/>return<sp/>(arg<sp/>%<sp/>2)<sp/>==<sp/>0;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allows<sp/>you<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>Expects<sp/>mock_foo.Bar(n)<sp/>to<sp/>be<sp/>called<sp/>where<sp/>n<sp/>is<sp/>even.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_CALL(mock_foo,<sp/>Bar(IsEven()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>Verifies<sp/>that<sp/>the<sp/>value<sp/>of<sp/>some_expression<sp/>is<sp/>even.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_THAT(some_expression,<sp/>IsEven());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>above<sp/>assertion<sp/>fails,<sp/>it<sp/>will<sp/>print<sp/>something<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Value<sp/>of:<sp/>some_expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Expected:<sp/>is<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Actual:<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>the<sp/>description<sp/>&quot;is<sp/>even&quot;<sp/>is<sp/>automatically<sp/>calculated<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matcher<sp/>name<sp/>IsEven.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Argument<sp/>Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>type<sp/>of<sp/>the<sp/>value<sp/>being<sp/>matched<sp/>(arg_type)<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>determined<sp/>by<sp/>the<sp/>context<sp/>in<sp/>which<sp/>you<sp/>use<sp/>the<sp/>matcher<sp/>and<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>supplied<sp/>to<sp/>you<sp/>by<sp/>the<sp/>compiler,<sp/>so<sp/>you<sp/>don&apos;t<sp/>need<sp/>to<sp/>worry<sp/>about</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>declaring<sp/>it<sp/>(nor<sp/>can<sp/>you).<sp/><sp/>This<sp/>allows<sp/>the<sp/>matcher<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>polymorphic.<sp/><sp/>For<sp/>example,<sp/>IsEven()<sp/>can<sp/>be<sp/>used<sp/>to<sp/>match<sp/>any<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>the<sp/>value<sp/>of<sp/>&quot;(arg<sp/>%<sp/>2)<sp/>==<sp/>0&quot;<sp/>can<sp/>be<sp/>implicitly<sp/>converted<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>bool.<sp/><sp/>In<sp/>the<sp/>&quot;Bar(IsEven())&quot;<sp/>example<sp/>above,<sp/>if<sp/>method<sp/>Bar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>takes<sp/>an<sp/>int,<sp/>&apos;arg_type&apos;<sp/>will<sp/>be<sp/>int;<sp/>if<sp/>it<sp/>takes<sp/>an<sp/>unsigned<sp/>long,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;arg_type&apos;<sp/>will<sp/>be<sp/>unsigned<sp/>long;<sp/>and<sp/>so<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parameterizing<sp/>Matchers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sometimes<sp/>you&apos;ll<sp/>want<sp/>to<sp/>parameterize<sp/>the<sp/>matcher.<sp/><sp/>For<sp/>that<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>use<sp/>another<sp/>macro:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_P(name,<sp/>param_name,<sp/>description_string)<sp/>{<sp/>statements;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_P(HasAbsoluteValue,<sp/>value,<sp/>&quot;&quot;)<sp/>{<sp/>return<sp/>abs(arg)<sp/>==<sp/>value;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>allow<sp/>you<sp/>to<sp/>write:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_THAT(Blah(&quot;a&quot;),<sp/>HasAbsoluteValue(n));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>may<sp/>lead<sp/>to<sp/>this<sp/>message<sp/>(assuming<sp/>n<sp/>is<sp/>10):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Value<sp/>of:<sp/>Blah(&quot;a&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Expected:<sp/>has<sp/>absolute<sp/>value<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Actual:<sp/>-9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>both<sp/>the<sp/>matcher<sp/>description<sp/>and<sp/>its<sp/>parameter<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>printed,<sp/>making<sp/>the<sp/>message<sp/>human-friendly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>matcher<sp/>definition<sp/>body,<sp/>you<sp/>can<sp/>write<sp/>&apos;foo_type&apos;<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reference<sp/>the<sp/>type<sp/>of<sp/>a<sp/>parameter<sp/>named<sp/>&apos;foo&apos;.<sp/><sp/>For<sp/>example,<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>body<sp/>of<sp/>MATCHER_P(HasAbsoluteValue,<sp/>value)<sp/>above,<sp/>you<sp/>can<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;value_type&apos;<sp/>to<sp/>refer<sp/>to<sp/>the<sp/>type<sp/>of<sp/>&apos;value&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>also<sp/>provide<sp/>MATCHER_P2,<sp/>MATCHER_P3,<sp/>...,<sp/>up<sp/>to<sp/>MATCHER_P10<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>support<sp/>multi-parameter<sp/>matchers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Describing<sp/>Parameterized<sp/>Matchers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>last<sp/>argument<sp/>to<sp/>MATCHER*()<sp/>is<sp/>a<sp/>string-typed<sp/>expression.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expression<sp/>can<sp/>reference<sp/>all<sp/>of<sp/>the<sp/>matcher&apos;s<sp/>parameters<sp/>and<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>bool-typed<sp/>variable<sp/>named<sp/>&apos;negation&apos;.<sp/><sp/>When<sp/>&apos;negation&apos;<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>false,<sp/>the<sp/>expression<sp/>should<sp/>evaluate<sp/>to<sp/>the<sp/>matcher&apos;s<sp/>description;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise<sp/>it<sp/>should<sp/>evaluate<sp/>to<sp/>the<sp/>description<sp/>of<sp/>the<sp/>negation<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>matcher.<sp/><sp/>For<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>using<sp/>testing::PrintToString;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_P2(InClosedRange,<sp/>low,<sp/>hi,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>string(negation<sp/>?<sp/>&quot;is<sp/>not&quot;<sp/>:<sp/>&quot;is&quot;)<sp/>+<sp/>&quot;<sp/>in<sp/>range<sp/>[&quot;<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintToString(low)<sp/>+<sp/>&quot;,<sp/>&quot;<sp/>+<sp/>PrintToString(hi)<sp/>+<sp/>&quot;]&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>low<sp/>&lt;=<sp/>arg<sp/>&amp;&amp;<sp/>arg<sp/>&lt;=<sp/>hi;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_THAT(3,<sp/>InClosedRange(4,<sp/>6));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_THAT(3,<sp/>Not(InClosedRange(2,<sp/>4)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>would<sp/>generate<sp/>two<sp/>failures<sp/>that<sp/>contain<sp/>the<sp/>text:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Expected:<sp/>is<sp/>in<sp/>range<sp/>[4,<sp/>6]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Expected:<sp/>is<sp/>not<sp/>in<sp/>range<sp/>[2,<sp/>4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>specify<sp/>&quot;&quot;<sp/>as<sp/>the<sp/>description,<sp/>the<sp/>failure<sp/>message<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contain<sp/>the<sp/>sequence<sp/>of<sp/>words<sp/>in<sp/>the<sp/>matcher<sp/>name<sp/>followed<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameter<sp/>values<sp/>printed<sp/>as<sp/>a<sp/>tuple.<sp/><sp/>For<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_P2(InClosedRange,<sp/>low,<sp/>hi,<sp/>&quot;&quot;)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_THAT(3,<sp/>InClosedRange(4,<sp/>6));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_THAT(3,<sp/>Not(InClosedRange(2,<sp/>4)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>would<sp/>generate<sp/>two<sp/>failures<sp/>that<sp/>contain<sp/>the<sp/>text:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Expected:<sp/>in<sp/>closed<sp/>range<sp/>(4,<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Expected:<sp/>not<sp/>(in<sp/>closed<sp/>range<sp/>(2,<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Types<sp/>of<sp/>Matcher<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>purpose<sp/>of<sp/>typing,<sp/>you<sp/>can<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_Pk(Foo,<sp/>p1,<sp/>...,<sp/>pk,<sp/>description_string)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>shorthand<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>template<sp/>&lt;typename<sp/>p1_type,<sp/>...,<sp/>typename<sp/>pk_type&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>FooMatcherPk&lt;p1_type,<sp/>...,<sp/>pk_type&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(p1_type<sp/>p1,<sp/>...,<sp/>pk_type<sp/>pk)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>you<sp/>write<sp/>Foo(v1,<sp/>...,<sp/>vk),<sp/>the<sp/>compiler<sp/>infers<sp/>the<sp/>types<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>parameters<sp/>v1,<sp/>...,<sp/>and<sp/>vk<sp/>for<sp/>you.<sp/><sp/>If<sp/>you<sp/>are<sp/>not<sp/>happy<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>result<sp/>of<sp/>the<sp/>type<sp/>inference,<sp/>you<sp/>can<sp/>specify<sp/>the<sp/>types<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>explicitly<sp/>instantiating<sp/>the<sp/>template,<sp/>as<sp/>in<sp/>Foo&lt;long,<sp/>bool&gt;(5,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>false).<sp/><sp/>As<sp/>said<sp/>earlier,<sp/>you<sp/>don&apos;t<sp/>get<sp/>to<sp/>(or<sp/>need<sp/>to)<sp/>specify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;arg_type&apos;<sp/>as<sp/>that&apos;s<sp/>determined<sp/>by<sp/>the<sp/>context<sp/>in<sp/>which<sp/>the<sp/>matcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>used.<sp/><sp/>You<sp/>can<sp/>assign<sp/>the<sp/>result<sp/>of<sp/>expression<sp/>Foo(p1,<sp/>...,<sp/>pk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>a<sp/>variable<sp/>of<sp/>type<sp/>FooMatcherPk&lt;p1_type,<sp/>...,<sp/>pk_type&gt;.<sp/><sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>useful<sp/>when<sp/>composing<sp/>matchers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>While<sp/>you<sp/>can<sp/>instantiate<sp/>a<sp/>matcher<sp/>template<sp/>with<sp/>reference<sp/>types,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>passing<sp/>the<sp/>parameters<sp/>by<sp/>pointer<sp/>usually<sp/>makes<sp/>your<sp/>code<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>readable.<sp/><sp/>If,<sp/>however,<sp/>you<sp/>still<sp/>want<sp/>to<sp/>pass<sp/>a<sp/>parameter<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reference,<sp/>be<sp/>aware<sp/>that<sp/>in<sp/>the<sp/>failure<sp/>message<sp/>generated<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matcher<sp/>you<sp/>will<sp/>see<sp/>the<sp/>value<sp/>of<sp/>the<sp/>referenced<sp/>object<sp/>but<sp/>not<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Explaining<sp/>Match<sp/>Results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sometimes<sp/>the<sp/>matcher<sp/>description<sp/>alone<sp/>isn&apos;t<sp/>enough<sp/>to<sp/>explain<sp/>why</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>match<sp/>has<sp/>failed<sp/>or<sp/>succeeded.<sp/><sp/>For<sp/>example,<sp/>when<sp/>expecting<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>long<sp/>string,<sp/>it<sp/>can<sp/>be<sp/>very<sp/>helpful<sp/>to<sp/>also<sp/>print<sp/>the<sp/>diff<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>expected<sp/>string<sp/>and<sp/>the<sp/>actual<sp/>one.<sp/><sp/>To<sp/>achieve<sp/>that,<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>optionally<sp/>stream<sp/>additional<sp/>information<sp/>to<sp/>a<sp/>special<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>named<sp/>result_listener,<sp/>whose<sp/>type<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MatchResultListener:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_P(EqualsLongString,<sp/>str,<sp/>&quot;&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(arg<sp/>==<sp/>str)<sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*result_listener<sp/>&lt;&lt;<sp/>&quot;the<sp/>difference:<sp/>&quot;</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Overloading<sp/>Matchers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>overload<sp/>matchers<sp/>with<sp/>different<sp/>numbers<sp/>of<sp/>parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_P(Blah,<sp/>a,<sp/>description_string1)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MATCHER_P2(Blah,<sp/>a,<sp/>b,<sp/>description_string2)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Caveats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>defining<sp/>a<sp/>new<sp/>matcher,<sp/>you<sp/>should<sp/>also<sp/>consider<sp/>implementing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MatcherInterface<sp/>or<sp/>using<sp/>MakePolymorphicMatcher().<sp/><sp/>These</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>approaches<sp/>require<sp/>more<sp/>work<sp/>than<sp/>the<sp/>MATCHER*<sp/>macros,<sp/>but<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>give<sp/>you<sp/>more<sp/>control<sp/>on<sp/>the<sp/>types<sp/>of<sp/>the<sp/>value<sp/>being<sp/>matched<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>matcher<sp/>parameters,<sp/>which<sp/>may<sp/>leads<sp/>to<sp/>better<sp/>compiler<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>messages<sp/>when<sp/>the<sp/>matcher<sp/>is<sp/>used<sp/>wrong.<sp/><sp/>They<sp/>also<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overloading<sp/>matchers<sp/>based<sp/>on<sp/>parameter<sp/>types<sp/>(as<sp/>opposed<sp/>to<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>the<sp/>number<sp/>of<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MATCHER*()<sp/>can<sp/>only<sp/>be<sp/>used<sp/>in<sp/>a<sp/>namespace<sp/>scope.<sp/><sp/>The<sp/>reason<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>C++<sp/>doesn&apos;t<sp/>yet<sp/>allow<sp/>function-local<sp/>types<sp/>to<sp/>be<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instantiate<sp/>templates.<sp/><sp/>The<sp/>up-coming<sp/>C++0x<sp/>standard<sp/>will<sp/>fix<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Once<sp/>that&apos;s<sp/>done,<sp/>we&apos;ll<sp/>consider<sp/>supporting<sp/>using<sp/>MATCHER*()<sp/>inside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>More<sp/>Information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>learn<sp/>more<sp/>about<sp/>using<sp/>these<sp/>macros,<sp/>please<sp/>search<sp/>for<sp/>&apos;MATCHER&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>http://code.google.com/p/googlemock/wiki/CookBook.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER(name,<sp/>description)\</highlight></codeline>
<codeline lineno="1382"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##Matcher<sp/>{\</highlight></codeline>
<codeline lineno="1383"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl()\</highlight></codeline>
<codeline lineno="1388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}\</highlight></codeline>
<codeline lineno="1389"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1394"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1399"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;&gt;()));\</highlight></codeline>
<codeline lineno="1406"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;());\</highlight></codeline>
<codeline lineno="1413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##Matcher()<sp/>{\</highlight></codeline>
<codeline lineno="1415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1416"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##Matcher);\</highlight></codeline>
<codeline lineno="1418"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1419"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##Matcher<sp/>name()<sp/>{\</highlight></codeline>
<codeline lineno="1420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##Matcher();\</highlight></codeline>
<codeline lineno="1421"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1422"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1423"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##Matcher::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P(name,<sp/>p0,<sp/>description)\</highlight></codeline>
<codeline lineno="1429"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type&gt;\</highlight></codeline>
<codeline lineno="1430"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP<sp/>{\</highlight></codeline>
<codeline lineno="1431"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>explicit<sp/>gmock_Impl(p0##_type<sp/>gmock_p0)\</highlight></codeline>
<codeline lineno="1436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0)<sp/>{}\</highlight></codeline>
<codeline lineno="1437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type&gt;(p0)));\</highlight></codeline>
<codeline lineno="1455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0));\</highlight></codeline>
<codeline lineno="1462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1463"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>explicit<sp/>name##MatcherP(p0##_type<sp/>gmock_p0)<sp/>:<sp/>p0(gmock_p0)<sp/>{\</highlight></codeline>
<codeline lineno="1464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1466"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP);\</highlight></codeline>
<codeline lineno="1468"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1469"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type&gt;\</highlight></codeline>
<codeline lineno="1470"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP&lt;p0##_type&gt;<sp/>name(p0##_type<sp/>p0)<sp/>{\</highlight></codeline>
<codeline lineno="1471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP&lt;p0##_type&gt;(p0);\</highlight></codeline>
<codeline lineno="1472"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1473"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type&gt;\</highlight></codeline>
<codeline lineno="1474"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1475"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP&lt;p0##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P2(name,<sp/>p0,<sp/>p1,<sp/>description)\</highlight></codeline>
<codeline lineno="1481"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type&gt;\</highlight></codeline>
<codeline lineno="1482"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP2<sp/>{\</highlight></codeline>
<codeline lineno="1483"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1485"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1)\</highlight></codeline>
<codeline lineno="1488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1)<sp/>{}\</highlight></codeline>
<codeline lineno="1489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1496"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1497"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1501"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type&gt;(p0,<sp/>p1)));\</highlight></codeline>
<codeline lineno="1508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1));\</highlight></codeline>
<codeline lineno="1515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP2(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1)<sp/>:<sp/>p0(gmock_p0),<sp/>\</highlight></codeline>
<codeline lineno="1517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1(gmock_p1)<sp/>{\</highlight></codeline>
<codeline lineno="1518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1521"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP2);\</highlight></codeline>
<codeline lineno="1523"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1524"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type&gt;\</highlight></codeline>
<codeline lineno="1525"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP2&lt;p0##_type,<sp/>p1##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1526"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1)<sp/>{\</highlight></codeline>
<codeline lineno="1527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP2&lt;p0##_type,<sp/>p1##_type&gt;(p0,<sp/>p1);\</highlight></codeline>
<codeline lineno="1528"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1529"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type&gt;\</highlight></codeline>
<codeline lineno="1530"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1531"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP2&lt;p0##_type,<sp/>\</highlight></codeline>
<codeline lineno="1532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1535"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P3(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>description)\</highlight></codeline>
<codeline lineno="1538"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type&gt;\</highlight></codeline>
<codeline lineno="1539"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP3<sp/>{\</highlight></codeline>
<codeline lineno="1540"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2)\</highlight></codeline>
<codeline lineno="1545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2)<sp/>{}\</highlight></codeline>
<codeline lineno="1546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1560"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1562"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1563"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type&gt;(p0,<sp/>p1,<sp/>\</highlight></codeline>
<codeline lineno="1566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2)));\</highlight></codeline>
<codeline lineno="1567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2));\</highlight></codeline>
<codeline lineno="1574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP3(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2)<sp/>{\</highlight></codeline>
<codeline lineno="1577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1579"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1581"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP3);\</highlight></codeline>
<codeline lineno="1583"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1584"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type&gt;\</highlight></codeline>
<codeline lineno="1585"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP3&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1586"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2)<sp/>{\</highlight></codeline>
<codeline lineno="1587"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP3&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type&gt;(p0,<sp/>p1,<sp/>p2);\</highlight></codeline>
<codeline lineno="1588"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1589"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type&gt;\</highlight></codeline>
<codeline lineno="1590"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1591"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP3&lt;p0##_type,<sp/>p1##_type,<sp/>\</highlight></codeline>
<codeline lineno="1592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P4(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>description)\</highlight></codeline>
<codeline lineno="1598"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type&gt;\</highlight></codeline>
<codeline lineno="1600"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP4<sp/>{\</highlight></codeline>
<codeline lineno="1601"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1604"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1606"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3)\</highlight></codeline>
<codeline lineno="1607"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3)<sp/>{}\</highlight></codeline>
<codeline lineno="1608"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1609"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1611"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1612"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1613"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1616"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1617"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1618"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1619"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1621"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1624"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1625"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1629"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3)));\</highlight></codeline>
<codeline lineno="1630"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1632"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1633"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1634"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1635"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1636"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3));\</highlight></codeline>
<codeline lineno="1637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1638"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP4(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1639"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="1640"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3)<sp/>{\</highlight></codeline>
<codeline lineno="1641"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1643"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1645"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1646"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP4);\</highlight></codeline>
<codeline lineno="1648"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1649"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type&gt;\</highlight></codeline>
<codeline lineno="1651"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP4&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>\</highlight></codeline>
<codeline lineno="1653"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3)<sp/>{\</highlight></codeline>
<codeline lineno="1654"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP4&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type&gt;(p0,<sp/>\</highlight></codeline>
<codeline lineno="1655"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1,<sp/>p2,<sp/>p3);\</highlight></codeline>
<codeline lineno="1656"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1657"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type&gt;\</highlight></codeline>
<codeline lineno="1659"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1660"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP4&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P5(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>description)\</highlight></codeline>
<codeline lineno="1667"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type&gt;\</highlight></codeline>
<codeline lineno="1669"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP5<sp/>{\</highlight></codeline>
<codeline lineno="1670"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1672"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1673"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1674"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1675"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4)\</highlight></codeline>
<codeline lineno="1676"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>\</highlight></codeline>
<codeline lineno="1677"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4(gmock_p4)<sp/>{}\</highlight></codeline>
<codeline lineno="1678"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1679"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1680"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1681"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1682"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1690"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1692"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1693"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1694"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1695"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1696"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1698"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1699"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1700"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4)));\</highlight></codeline>
<codeline lineno="1701"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1702"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1703"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1704"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1705"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1706"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1707"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4));\</highlight></codeline>
<codeline lineno="1708"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1709"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP5(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1710"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>\</highlight></codeline>
<codeline lineno="1711"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>gmock_p4)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4)<sp/>{\</highlight></codeline>
<codeline lineno="1713"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1714"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1715"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1716"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1717"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1719"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1720"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP5);\</highlight></codeline>
<codeline lineno="1721"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1722"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1723"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type&gt;\</highlight></codeline>
<codeline lineno="1724"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP5&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1725"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="1726"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4)<sp/>{\</highlight></codeline>
<codeline lineno="1727"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP5&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4);\</highlight></codeline>
<codeline lineno="1729"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1730"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1731"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type&gt;\</highlight></codeline>
<codeline lineno="1732"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1733"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP5&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1734"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1735"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1736"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1737"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P6(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>description)\</highlight></codeline>
<codeline lineno="1740"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1741"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type&gt;\</highlight></codeline>
<codeline lineno="1742"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP6<sp/>{\</highlight></codeline>
<codeline lineno="1743"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1744"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1745"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1746"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1747"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1748"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5)\</highlight></codeline>
<codeline lineno="1749"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>\</highlight></codeline>
<codeline lineno="1750"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4(gmock_p4),<sp/>p5(gmock_p5)<sp/>{}\</highlight></codeline>
<codeline lineno="1751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1752"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1753"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1755"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1756"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1757"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1758"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1759"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1760"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1761"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1766"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1767"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1769"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1771"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1772"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1773"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1774"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5)));\</highlight></codeline>
<codeline lineno="1775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1780"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1781"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5));\</highlight></codeline>
<codeline lineno="1782"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1783"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP6(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5)<sp/>{\</highlight></codeline>
<codeline lineno="1787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1788"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1794"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP6);\</highlight></codeline>
<codeline lineno="1796"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1797"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1798"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type&gt;\</highlight></codeline>
<codeline lineno="1799"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP6&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1800"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>\</highlight></codeline>
<codeline lineno="1801"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5)<sp/>{\</highlight></codeline>
<codeline lineno="1802"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP6&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1803"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5);\</highlight></codeline>
<codeline lineno="1804"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1805"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1806"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type&gt;\</highlight></codeline>
<codeline lineno="1807"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1808"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP6&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1809"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1810"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1811"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1812"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P7(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>description)\</highlight></codeline>
<codeline lineno="1815"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1816"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1817"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type&gt;\</highlight></codeline>
<codeline lineno="1818"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP7<sp/>{\</highlight></codeline>
<codeline lineno="1819"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1820"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1821"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1822"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1823"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1824"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1825"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6)\</highlight></codeline>
<codeline lineno="1826"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>\</highlight></codeline>
<codeline lineno="1827"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6)<sp/>{}\</highlight></codeline>
<codeline lineno="1828"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1829"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1830"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1831"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1832"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1833"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1834"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1835"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1836"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1837"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1838"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1839"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1840"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1841"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1842"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1843"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1844"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1845"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1846"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1847"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1848"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1849"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1850"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1851"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1852"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1853"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6)));\</highlight></codeline>
<codeline lineno="1854"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1855"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1856"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1857"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1858"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1859"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1860"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6));\</highlight></codeline>
<codeline lineno="1861"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1862"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP7(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1863"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1864"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="1865"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>\</highlight></codeline>
<codeline lineno="1866"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6(gmock_p6)<sp/>{\</highlight></codeline>
<codeline lineno="1867"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1868"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1869"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1870"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1871"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1872"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1873"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1874"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1875"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1876"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP7);\</highlight></codeline>
<codeline lineno="1877"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1878"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1879"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1880"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type&gt;\</highlight></codeline>
<codeline lineno="1881"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP7&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1882"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>\</highlight></codeline>
<codeline lineno="1883"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1884"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6)<sp/>{\</highlight></codeline>
<codeline lineno="1885"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP7&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1886"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6);\</highlight></codeline>
<codeline lineno="1887"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1888"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1889"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1890"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type&gt;\</highlight></codeline>
<codeline lineno="1891"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1892"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP7&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1893"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1894"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1895"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1896"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P8(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>description)\</highlight></codeline>
<codeline lineno="1899"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1900"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1901"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type&gt;\</highlight></codeline>
<codeline lineno="1902"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP8<sp/>{\</highlight></codeline>
<codeline lineno="1903"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1904"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1905"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1906"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1907"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1908"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1909"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7)\</highlight></codeline>
<codeline lineno="1910"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>\</highlight></codeline>
<codeline lineno="1911"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7)<sp/>{}\</highlight></codeline>
<codeline lineno="1912"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="1913"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="1914"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1915"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="1916"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1917"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1918"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="1919"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1920"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1921"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1922"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1923"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1925"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1926"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1927"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="1928"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1929"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1930"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="1931"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="1932"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="1933"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="1934"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="1935"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="1936"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1937"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>\</highlight></codeline>
<codeline lineno="1938"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7)));\</highlight></codeline>
<codeline lineno="1939"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1940"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1941"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1942"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1943"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1944"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="1945"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7));\</highlight></codeline>
<codeline lineno="1946"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1947"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP8(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1948"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1949"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6,<sp/>\</highlight></codeline>
<codeline lineno="1950"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>gmock_p7)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1951"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>\</highlight></codeline>
<codeline lineno="1952"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7(gmock_p7)<sp/>{\</highlight></codeline>
<codeline lineno="1953"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1954"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1955"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1956"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1957"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1958"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1959"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1960"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1961"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="1962"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1963"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP8);\</highlight></codeline>
<codeline lineno="1964"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1965"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1966"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1967"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type&gt;\</highlight></codeline>
<codeline lineno="1968"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP8&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1969"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1970"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1971"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7)<sp/>{\</highlight></codeline>
<codeline lineno="1972"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP8&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1973"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1974"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6,<sp/>p7);\</highlight></codeline>
<codeline lineno="1975"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1976"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1977"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1978"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type&gt;\</highlight></codeline>
<codeline lineno="1979"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1980"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP8&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1981"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>\</highlight></codeline>
<codeline lineno="1982"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="1983"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="1984"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="1985"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P9(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>description)\</highlight></codeline>
<codeline lineno="1988"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1989"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1990"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type&gt;\</highlight></codeline>
<codeline lineno="1991"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP9<sp/>{\</highlight></codeline>
<codeline lineno="1992"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1993"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="1994"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1995"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1996"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1997"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1998"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>p8##_type<sp/>gmock_p8)\</highlight></codeline>
<codeline lineno="1999"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>\</highlight></codeline>
<codeline lineno="2000"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7),<sp/>\</highlight></codeline>
<codeline lineno="2001"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8(gmock_p8)<sp/>{}\</highlight></codeline>
<codeline lineno="2002"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="2003"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="2004"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2005"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="2006"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2007"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2008"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="2009"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2010"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="2011"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="2012"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="2013"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="2014"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="2015"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="2016"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="2017"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="2018"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="2019"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="2020"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2021"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="2022"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="2023"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="2024"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="2025"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="2026"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="2027"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2028"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>\</highlight></codeline>
<codeline lineno="2029"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8)));\</highlight></codeline>
<codeline lineno="2030"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2031"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="2032"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="2033"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="2034"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2035"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="2036"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8));\</highlight></codeline>
<codeline lineno="2037"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2038"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP9(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="2039"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="2040"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>\</highlight></codeline>
<codeline lineno="2041"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>gmock_p8)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="2042"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7),<sp/>\</highlight></codeline>
<codeline lineno="2043"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8(gmock_p8)<sp/>{\</highlight></codeline>
<codeline lineno="2044"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2045"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="2046"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="2047"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="2048"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="2049"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="2050"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="2051"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="2052"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="2053"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="2054"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="2055"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP9);\</highlight></codeline>
<codeline lineno="2056"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="2057"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="2058"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="2059"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type&gt;\</highlight></codeline>
<codeline lineno="2060"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP9&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2061"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>\</highlight></codeline>
<codeline lineno="2062"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="2063"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7,<sp/>\</highlight></codeline>
<codeline lineno="2064"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>p8)<sp/>{\</highlight></codeline>
<codeline lineno="2065"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP9&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2066"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>\</highlight></codeline>
<codeline lineno="2067"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8);\</highlight></codeline>
<codeline lineno="2068"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2069"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="2070"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="2071"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type&gt;\</highlight></codeline>
<codeline lineno="2072"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="2073"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP9&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="2074"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>\</highlight></codeline>
<codeline lineno="2075"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="2076"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="2077"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="2078"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATCHER_P10(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9,<sp/>description)\</highlight></codeline>
<codeline lineno="2081"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="2082"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="2083"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2084"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p9##_type&gt;\</highlight></codeline>
<codeline lineno="2085"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##MatcherP10<sp/>{\</highlight></codeline>
<codeline lineno="2086"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="2087"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="2088"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::MatcherInterface&lt;arg_type&gt;<sp/>{\</highlight></codeline>
<codeline lineno="2089"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="2090"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="2091"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="2092"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>p8##_type<sp/>gmock_p8,<sp/>\</highlight></codeline>
<codeline lineno="2093"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type<sp/>gmock_p9)\</highlight></codeline>
<codeline lineno="2094"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>\</highlight></codeline>
<codeline lineno="2095"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7),<sp/>\</highlight></codeline>
<codeline lineno="2096"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8(gmock_p8),<sp/>p9(gmock_p9)<sp/>{}\</highlight></codeline>
<codeline lineno="2097"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>MatchAndExplain(\</highlight></codeline>
<codeline lineno="2098"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>::testing::MatchResultListener*<sp/>result_listener)<sp/>const;\</highlight></codeline>
<codeline lineno="2099"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(false);\</highlight></codeline>
<codeline lineno="2101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>DescribeNegationTo(::std::ostream*<sp/>gmock_os)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gmock_os<sp/>&lt;&lt;<sp/>FormatDescription(true);\</highlight></codeline>
<codeline lineno="2104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="2106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="2107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="2108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="2109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="2110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="2111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="2112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="2113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="2114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type<sp/>p9;\</highlight></codeline>
<codeline lineno="2115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="2116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::string<sp/>FormatDescription(bool<sp/>negation)<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::string<sp/>gmock_description<sp/>=<sp/>(description);\</highlight></codeline>
<codeline lineno="2118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gmock_description.empty())\</highlight></codeline>
<codeline lineno="2119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>gmock_description;\</highlight></codeline>
<codeline lineno="2120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::FormatMatcherDescription(\</highlight></codeline>
<codeline lineno="2121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negation,<sp/>#name,<sp/>\</highlight></codeline>
<codeline lineno="2122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::UniversalTersePrintTupleFieldsToStrings(\</highlight></codeline>
<codeline lineno="2123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9)));\</highlight></codeline>
<codeline lineno="2126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="2128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="2129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="2130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>::testing::Matcher&lt;arg_type&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Matcher&lt;arg_type&gt;(\</highlight></codeline>
<codeline lineno="2132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;arg_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9));\</highlight></codeline>
<codeline lineno="2133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##MatcherP10(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="2135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="2136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>\</highlight></codeline>
<codeline lineno="2137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>gmock_p8,<sp/>p9##_type<sp/>gmock_p9)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="2138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>\</highlight></codeline>
<codeline lineno="2139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7(gmock_p7),<sp/>p8(gmock_p8),<sp/>p9(gmock_p9)<sp/>{\</highlight></codeline>
<codeline lineno="2140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="2142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="2143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="2144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="2145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="2146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="2147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="2148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="2149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="2150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p9##_type<sp/>p9;\</highlight></codeline>
<codeline lineno="2151"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="2152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##MatcherP10);\</highlight></codeline>
<codeline lineno="2153"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="2154"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="2155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="2156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p9##_type&gt;\</highlight></codeline>
<codeline lineno="2158"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##MatcherP10&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="2161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7,<sp/>p8##_type<sp/>p8,<sp/>\</highlight></codeline>
<codeline lineno="2162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type<sp/>p9)<sp/>{\</highlight></codeline>
<codeline lineno="2163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##MatcherP10&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>p9##_type&gt;(p0,<sp/>\</highlight></codeline>
<codeline lineno="2165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9);\</highlight></codeline>
<codeline lineno="2166"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2167"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="2168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="2169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p9##_type&gt;\</highlight></codeline>
<codeline lineno="2171"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg_type&gt;\</highlight></codeline>
<codeline lineno="2172"><highlight class="preprocessor"><sp/><sp/>bool<sp/>name##MatcherP10&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type&gt;::gmock_Impl&lt;arg_type&gt;::MatchAndExplain(\</highlight></codeline>
<codeline lineno="2175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>arg_type<sp/>arg,<sp/>\</highlight></codeline>
<codeline lineno="2176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::MatchResultListener*<sp/>result_listener<sp/>GTEST_ATTRIBUTE_UNUSED_)\</highlight></codeline>
<codeline lineno="2177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_MATCHERS_H_</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h"/>
  </compounddef>
</doxygen>
