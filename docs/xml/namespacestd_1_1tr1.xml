<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacestd_1_1tr1" kind="namespace" language="C++">
    <compoundname>std::tr1</compoundname>
    <innerclass refid="classstd_1_1tr1_1_1tuple" prot="public">std::tr1::tuple</innerclass>
    <innerclass refid="classstd_1_1tr1_1_1tuple_3_4" prot="public">std::tr1::tuple&lt;&gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__element" prot="public">std::tr1::tuple_element</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size" prot="public">std::tr1::tuple_size</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__0___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_0_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__10___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_10_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__1___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_1_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__2___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_2_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__3___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_3_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__4___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_4_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__5___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_5_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__6___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_6_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__7___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_7_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__8___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_8_TUPLE_(T) &gt;</innerclass>
    <innerclass refid="structstd_1_1tr1_1_1tuple__size_3_01_g_t_e_s_t__9___t_u_p_l_e___07_t_08_01_4" prot="public">std::tr1::tuple_size&lt; GTEST_9_TUPLE_(T) &gt;</innerclass>
    <innernamespace refid="namespacestd_1_1tr1_1_1gtest__internal">std::tr1::gtest_internal</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gtest-tuple_8h_1a9c0fa65b105f8e2f58ba59ecf75fd000" prot="public" static="no" mutable="no">
        <type>const T1 &amp;</type>
        <definition>const T1 &amp; std::tr1::f1</definition>
        <argsstring></argsstring>
        <name>f1</name>
        <initializer>{
  return GTEST_2_TUPLE_(T)(f0, f1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="683" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1a87dd9e009868361317f587126dba63d4" prot="public" static="no" mutable="no">
        <type>const T1 const T2 &amp;</type>
        <definition>const T1 const T2 &amp; std::tr1::f2</definition>
        <argsstring></argsstring>
        <name>f2</name>
        <initializer>{
  return GTEST_3_TUPLE_(T)(f0, f1, f2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="688" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1a0f7c3b47d27d42d82d1a333ea420ce4e" prot="public" static="no" mutable="no">
        <type>const T1 const T2 const T3 &amp;</type>
        <definition>const T1 const T2 const T3 &amp; std::tr1::f3</definition>
        <argsstring></argsstring>
        <name>f3</name>
        <initializer>{
  return GTEST_4_TUPLE_(T)(f0, f1, f2, f3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="694" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1adc796e02b7385d526aff708189564f67" prot="public" static="no" mutable="no">
        <type>const T1 const T2 const T3 const T4 &amp;</type>
        <definition>const T1 const T2 const T3 const T4 &amp; std::tr1::f4</definition>
        <argsstring></argsstring>
        <name>f4</name>
        <initializer>{
  return GTEST_5_TUPLE_(T)(f0, f1, f2, f3, f4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="700" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1a9c1eb66b2b2fa321942af95405232a0d" prot="public" static="no" mutable="no">
        <type>const T1 const T2 const T3 const T4 const T5 &amp;</type>
        <definition>const T1 const T2 const T3 const T4 const T5 &amp; std::tr1::f5</definition>
        <argsstring></argsstring>
        <name>f5</name>
        <initializer>{
  return GTEST_6_TUPLE_(T)(f0, f1, f2, f3, f4, f5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="706" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1a6b62f32e1e3e21bceb94eb46c4cbfd56" prot="public" static="no" mutable="no">
        <type>const T1 const T2 const T3 const T4 const T5 const T6 &amp;</type>
        <definition>const T1 const T2 const T3 const T4 const T5 const T6 &amp; std::tr1::f6</definition>
        <argsstring></argsstring>
        <name>f6</name>
        <initializer>{
  return GTEST_7_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="712" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="712" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1a2185f3a1c07f2df072c39cb91ffa89a4" prot="public" static="no" mutable="no">
        <type>const T1 const T2 const T3 const T4 const T5 const T6 const T7 &amp;</type>
        <definition>const T1 const T2 const T3 const T4 const T5 const T6 const T7 &amp; std::tr1::f7</definition>
        <argsstring></argsstring>
        <name>f7</name>
        <initializer>{
  return GTEST_8_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="718" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1ab998afa41cea8d6d26d7e4288b0bf974" prot="public" static="no" mutable="no">
        <type>const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 &amp;</type>
        <definition>const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 &amp; std::tr1::f8</definition>
        <argsstring></argsstring>
        <name>f8</name>
        <initializer>{
  return GTEST_9_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="725" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest-tuple_8h_1a216d2c7cdfaaf415caba2f88e2c34413" prot="public" static="no" mutable="no">
        <type>const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 const T9 &amp;</type>
        <definition>const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 const T9&amp; std::tr1::f9</definition>
        <argsstring></argsstring>
        <name>f9</name>
        <initializer>{
  return GTEST_10_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8, f9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="732" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gtest-tuple_8h_1a9971f52f994f142fe36c786b991cfd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_1_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_1_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_1_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="213" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a05651180c3a4c06fe0f3b09144b82b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_2_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_2_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_2_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="245" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a368170c49cc7d7f130c0564bbad01205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_3_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_3_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_3_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="288" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a661b17d2b7137863f06a016762f5c888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_4_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_4_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_4_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="325" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a51b070e2eb5e6bb83a290f35c19667dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_5_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_5_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_5_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="366" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a485b05fdbbcfcf7ad5e4234e17702268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_6_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_6_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_6_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="410" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1ab451b390a95ee0555d7a43b67ea348aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_7_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_7_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_7_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="457" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1ab2b1c72e9db7436909d9ac011645f29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_8_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_8_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_8_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="506" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1ab4f2c7d5458171bec6c4330fc5c7aba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_9_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class std::tr1::GTEST_9_TUPLE_</definition>
        <argsstring>(T)</argsstring>
        <name>GTEST_9_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="157" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="558" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1af7e12a0f5b5791b5b7c49a5a17b85359" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref></type>
        <definition>tuple std::tr1::make_tuple</definition>
        <argsstring>()</argsstring>
        <name>make_tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="675" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="675" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a8b196fb65b7521a688f59c51418ab191" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_1_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_1_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0)</argsstring>
        <name>GTEST_1_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="678" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="678" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a90d9f0e7f95fa1c2093372d72493c3c1" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_2_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_2_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_2_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="683" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a4493d91e61718415264f7e72fea42930" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_3_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_3_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_3_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="688" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a4e57e6fab4219802275bd31821b31b58" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_4_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_4_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_4_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a6f8af2da768a7ea1e48b2700d1288166" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_5_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_5_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_5_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a31cde155977a4544af2b44b51ffe69ac" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_6_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_6_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_6_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a61277f5af24b20fce87a9fd94307ab34" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_7_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_7_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_7_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="711" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a29c8efcb79a4749e079b704c418266e6" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_8_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_8_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_8_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="717" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a6afad1f98814ccc897d0b02bc6fc4e7d" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_9_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_9_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_9_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1aa636d3269bf1f368a7bc09ff158bc482" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_10_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_10_TUPLE_</definition>
        <argsstring>(T) make_tuple(const T0 &amp;f0</argsstring>
        <name>GTEST_10_TUPLE_</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="730" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a495d7fb7a131317a9ba985598d3c1504" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>k</declname>
            <defname>k</defname>
          </param>
          <param>
            <type>GTEST_10_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_ADD_REF_</definition>
        <argsstring>(GTEST_TUPLE_ELEMENT_(k, GTEST_10_TUPLE_(T))) get(GTEST_10_TUPLE_(T) &amp;t)</argsstring>
        <name>GTEST_ADD_REF_</name>
        <param>
          <type>GTEST_TUPLE_ELEMENT_(k, GTEST_10_TUPLE_(T))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="930" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="930" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1ae7b5ea477ac34a3eef5c4c15c42b76ed" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>k</declname>
            <defname>k</defname>
          </param>
          <param>
            <type>GTEST_10_TYPENAMES_(T)</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::GTEST_BY_REF_</definition>
        <argsstring>(GTEST_TUPLE_ELEMENT_(k, GTEST_10_TUPLE_(T))) get(const GTEST_10_TUPLE_(T) &amp;t)</argsstring>
        <name>GTEST_BY_REF_</name>
        <param>
          <type>GTEST_TUPLE_ELEMENT_(k, GTEST_10_TUPLE_(T))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="936" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="936" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1af4516de784404381f9b14797694b6311" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_10_TYPENAMES_(T)</type>
          </param>
          <param>
            <type>GTEST_10_TYPENAMES_(U)</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool std::tr1::operator==</definition>
        <argsstring>(const GTEST_10_TUPLE_(T)&amp;t, const GTEST_10_TUPLE_(U)&amp;u)</argsstring>
        <name>operator==</name>
        <param>
          <type>const GTEST_10_TUPLE_(T)&amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const GTEST_10_TUPLE_(U)&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="974" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="974" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="gtest-tuple_8h_1a058882c51de469b5e78d29076f864940" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>GTEST_10_TYPENAMES_(T)</type>
          </param>
          <param>
            <type>GTEST_10_TYPENAMES_(U)</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool std::tr1::operator!=</definition>
        <argsstring>(const GTEST_10_TUPLE_(T)&amp;t, const GTEST_10_TUPLE_(U)&amp;u)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const GTEST_10_TUPLE_(T)&amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const GTEST_10_TUPLE_(U)&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="982" column="1" bodyfile="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" bodystart="982" bodyend="983"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googletest/include/gtest/internal/gtest-tuple.h" line="113" column="1"/>
  </compounddef>
</doxygen>
