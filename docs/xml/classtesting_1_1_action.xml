<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1_action" kind="class" language="C++" prot="public">
    <compoundname>testing::Action</compoundname>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>F</declname>
        <defname>F</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtesting_1_1_action_1a9af08a21ad329331fde856cba9b6dea2" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function</ref>&lt; F &gt;::Result</type>
        <definition>typedef internal::Function&lt;F&gt;::Result testing::Action&lt; F &gt;::Result</definition>
        <argsstring></argsstring>
        <name>Result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="357" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtesting_1_1_action_1ae27fda510696a9294f991de5b1abfaf2" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function</ref>&lt; F &gt;::ArgumentTuple</type>
        <definition>typedef internal::Function&lt;F&gt;::ArgumentTuple testing::Action&lt; F &gt;::ArgumentTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="358" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1_action_1a66fe4f9c9b9d020273151aa6054b491e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F1</type>
          </param>
          <param>
            <type>typename F2</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class internal::ActionAdaptor</definition>
        <argsstring></argsstring>
        <name>internal::ActionAdaptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="400" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1_action_1a878cb86f5126a22b5c6d5d8fb919f5d9" prot="private" static="no" mutable="no">
        <type><ref refid="classtesting_1_1internal_1_1linked__ptr" kindref="compound">internal::linked_ptr</ref>&lt; <ref refid="classtesting_1_1_action_interface" kindref="compound">ActionInterface</ref>&lt; F &gt; &gt;</type>
        <definition>internal::linked_ptr&lt;ActionInterface&lt;F&gt; &gt; testing::Action&lt; F &gt;::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="402" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_action_1a967772922a39dd7098bee429d749f277" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::Action&lt; F &gt;::Action</definition>
        <argsstring>()</argsstring>
        <name>Action</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="362" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_1a5ce44c673e3f91378777b954d88917cd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::Action&lt; F &gt;::Action</definition>
        <argsstring>(ActionInterface&lt; F &gt; *impl)</argsstring>
        <name>Action</name>
        <param>
          <type><ref refid="classtesting_1_1_action_interface" kindref="compound">ActionInterface</ref>&lt; F &gt; *</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="366" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_1a7027316ea3a6972ce7847496eb360ccd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::Action&lt; F &gt;::Action</definition>
        <argsstring>(const Action &amp;action)</argsstring>
        <name>Action</name>
        <param>
          <type>const <ref refid="classtesting_1_1_action" kindref="compound">Action</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="369" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_1a806bacddaa1f1daf61f89674564bdf0f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::Action&lt; F &gt;::Action</definition>
        <argsstring>(const Action&lt; Func &gt; &amp;action)</argsstring>
        <name>Action</name>
        <param>
          <type>const <ref refid="classtesting_1_1_action" kindref="compound">Action</ref>&lt; Func &gt; &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_1a4468ca2ea5e9f7363271145992d09dba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::Action&lt; F &gt;::IsDoDefault</definition>
        <argsstring>() const</argsstring>
        <name>IsDoDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="379" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_1ad00a03062885685da84b308e6e8ff4cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Result</type>
        <definition>Result testing::Action&lt; F &gt;::Perform</definition>
        <argsstring>(const ArgumentTuple &amp;args) const</argsstring>
        <name>Perform</name>
        <param>
          <type>const ArgumentTuple &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="387" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="387" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_1af23eef2fff5a92d8ff2ed7ac7a542005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::Action&lt; F &gt;::Action</definition>
        <argsstring>(const Action&lt; From &gt; &amp;from)</argsstring>
        <name>Action</name>
        <param>
          <type>const <ref refid="classtesting_1_1_action" kindref="compound">Action</ref>&lt; From &gt; &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="1054" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="1054" bodyend="1055"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="355" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="355" bodyend="403"/>
    <listofallmembers>
      <member refid="classtesting_1_1_action_1a967772922a39dd7098bee429d749f277" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>Action</name></member>
      <member refid="classtesting_1_1_action_1a5ce44c673e3f91378777b954d88917cd" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>Action</name></member>
      <member refid="classtesting_1_1_action_1a7027316ea3a6972ce7847496eb360ccd" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>Action</name></member>
      <member refid="classtesting_1_1_action_1a806bacddaa1f1daf61f89674564bdf0f" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>Action</name></member>
      <member refid="classtesting_1_1_action_1af23eef2fff5a92d8ff2ed7ac7a542005" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>Action</name></member>
      <member refid="classtesting_1_1_action_1ae27fda510696a9294f991de5b1abfaf2" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>ArgumentTuple</name></member>
      <member refid="classtesting_1_1_action_1a878cb86f5126a22b5c6d5d8fb919f5d9" prot="private" virt="non-virtual"><scope>testing::Action</scope><name>impl_</name></member>
      <member refid="classtesting_1_1_action_1a66fe4f9c9b9d020273151aa6054b491e" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>internal::ActionAdaptor</name></member>
      <member refid="classtesting_1_1_action_1a4468ca2ea5e9f7363271145992d09dba" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>IsDoDefault</name></member>
      <member refid="classtesting_1_1_action_1ad00a03062885685da84b308e6e8ff4cb" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>Perform</name></member>
      <member refid="classtesting_1_1_action_1a9af08a21ad329331fde856cba9b6dea2" prot="public" virt="non-virtual"><scope>testing::Action</scope><name>Result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
