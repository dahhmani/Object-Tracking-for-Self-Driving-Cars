<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacetesting_1_1gmock__generated__actions__test" kind="namespace" language="C++">
    <compoundname>testing::gmock_generated_actions_test</compoundname>
    <innerclass refid="classtesting_1_1gmock__generated__actions__test_1_1_bool_resetter" prot="public">testing::gmock_generated_actions_test::BoolResetter</innerclass>
    <innerclass refid="structtesting_1_1gmock__generated__actions__test_1_1_giant_template" prot="public">testing::gmock_generated_actions_test::GiantTemplate</innerclass>
    <innerclass refid="classtesting_1_1gmock__generated__actions__test_1_1_nullary_constructor_class" prot="public">testing::gmock_generated_actions_test::NullaryConstructorClass</innerclass>
    <innerclass refid="classtesting_1_1gmock__generated__actions__test_1_1_nullary_functor" prot="public">testing::gmock_generated_actions_test::NullaryFunctor</innerclass>
    <innerclass refid="classtesting_1_1gmock__generated__actions__test_1_1_substract_action" prot="public">testing::gmock_generated_actions_test::SubstractAction</innerclass>
    <innerclass refid="structtesting_1_1gmock__generated__actions__test_1_1_sum_of5_functor" prot="public">testing::gmock_generated_actions_test::SumOf5Functor</innerclass>
    <innerclass refid="structtesting_1_1gmock__generated__actions__test_1_1_sum_of6_functor" prot="public">testing::gmock_generated_actions_test::SumOf6Functor</innerclass>
    <innerclass refid="classtesting_1_1gmock__generated__actions__test_1_1_ten_arg_constructor_class" prot="public">testing::gmock_generated_actions_test::TenArgConstructorClass</innerclass>
    <innerclass refid="classtesting_1_1gmock__generated__actions__test_1_1_unary_constructor_class" prot="public">testing::gmock_generated_actions_test::UnaryConstructorClass</innerclass>
    <innerclass refid="structtesting_1_1gmock__generated__actions__test_1_1_unary_functor" prot="public">testing::gmock_generated_actions_test::UnaryFunctor</innerclass>
    <innernamespace refid="namespacetesting_1_1gmock__generated__actions__test_1_1action__test">testing::gmock_generated_actions_test::action_test</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gmock-generated-actions__test_8cc_1a5f828d39e27f0615498d5aa31c96916e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool testing::gmock_generated_actions_test::g_done</definition>
        <argsstring></argsstring>
        <name>g_done</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="78" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gmock-generated-actions__test_8cc_1aa10d8101300a51dd20ab028fa9971313" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double testing::gmock_generated_actions_test::g_double</definition>
        <argsstring></argsstring>
        <name>g_double</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="86" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a7c442b3594b6717b8d499781a82170b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>short testing::gmock_generated_actions_test::Short</definition>
        <argsstring>(short n)</argsstring>
        <name>Short</name>
        <param>
          <type>short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="67" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa07e216a4c9d492fb7e7c8fde949bc8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char testing::gmock_generated_actions_test::Char</definition>
        <argsstring>(char ch)</argsstring>
        <name>Char</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="68" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1acb3d926ebbe88529c38d95f5e61573ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_generated_actions_test::Nullary</definition>
        <argsstring>()</argsstring>
        <name>Nullary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="71" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a61f0e6c3f2c07079299f1d6e1667ab92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::gmock_generated_actions_test::Unary</definition>
        <argsstring>(int x)</argsstring>
        <name>Unary</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="80" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a75e901c6d28c591c53a54320a294da55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::gmock_generated_actions_test::Plus1</definition>
        <argsstring>(const char *s)</argsstring>
        <name>Plus1</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="82" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a5886409b3306d3ff2fe548f9747f1de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::gmock_generated_actions_test::ByConstRef</definition>
        <argsstring>(const string &amp;s)</argsstring>
        <name>ByConstRef</name>
        <param>
          <type>const string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="84" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3e552b41de08f0516f4b0e32fed68a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::gmock_generated_actions_test::ReferencesGlobalDouble</definition>
        <argsstring>(const double &amp;x)</argsstring>
        <name>ReferencesGlobalDouble</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="87" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a2d12f232cedb11c5955db0ebb1429eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::ByNonConstRef</definition>
        <argsstring>(string &amp;s)</argsstring>
        <name>ByNonConstRef</name>
        <param>
          <type>string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="89" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3ec2020ddbfa6f2e993e0f88be1e691f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::gmock_generated_actions_test::Binary</definition>
        <argsstring>(const char *input, short n)</argsstring>
        <name>Binary</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="95" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1af957302d6c2b4dacd31385f2a34b529f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::gmock_generated_actions_test::VoidBinary</definition>
        <argsstring>(int, char)</argsstring>
        <name>VoidBinary</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="97" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a1b234626e33284c4159ea666d240d5ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_generated_actions_test::Ternary</definition>
        <argsstring>(int x, char y, short z)</argsstring>
        <name>Ternary</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>char</type>
          <declname>y</declname>
        </param>
        <param>
          <type>short</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="99" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a7b1b519421c70b90ea3c818d4cf565ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::gmock_generated_actions_test::VoidTernary</definition>
        <argsstring>(int, char, bool)</argsstring>
        <name>VoidTernary</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>char</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="101" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a2a5879c060adacf27c3528260172a7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_generated_actions_test::SumOf4</definition>
        <argsstring>(int a, int b, int c, int d)</argsstring>
        <name>SumOf4</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="103" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a18260e53a4612dc68eaa3b43a13ad57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::Concat4</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4)</argsstring>
        <name>Concat4</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="105" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a7ebfbfdf11d92d4f99df6b659c371e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_generated_actions_test::SumOf5</definition>
        <argsstring>(int a, int b, int c, int d, int e)</argsstring>
        <name>SumOf5</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="110" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ac9d254c06f94974ffb0acd8d0f1f8d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::Concat5</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5)</argsstring>
        <name>Concat5</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="118" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3f60acee43510c1603549a1f3bab61ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_generated_actions_test::SumOf6</definition>
        <argsstring>(int a, int b, int c, int d, int e, int f)</argsstring>
        <name>SumOf6</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="123" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a0d9c60ff363796e3edec3587ce7fc856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::Concat6</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6)</argsstring>
        <name>Concat6</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="133" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ac53c9939d35ebbb093b795161fc42504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::Concat7</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7)</argsstring>
        <name>Concat7</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="138" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa6540c5cd5e5cb3ca2253739c05323e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::Concat8</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7, const char *s8)</argsstring>
        <name>Concat8</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="144" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a524a8b6e13732969d177254474c94e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::Concat9</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7, const char *s8, const char *s9)</argsstring>
        <name>Concat9</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s8</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s9</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="150" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ae90b9884fe6a44fa67c323c4f2f46d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string testing::gmock_generated_actions_test::Concat10</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7, const char *s8, const char *s9, const char *s10)</argsstring>
        <name>Concat10</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s8</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s9</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s10</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="156" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa0f16da563ba1f4dd15c8a4fd9048fd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::gmock_generated_actions_test::CharPtr</definition>
        <argsstring>(const char *s)</argsstring>
        <name>CharPtr</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="165" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aee4ab8d88ec59a7e3b91d919a6ed34da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Function0)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Function0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="170" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a47d12c8e504971d1f1c17df8d90bff82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Functor1)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Functor1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="176" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a6afe3cf31ef3f5a9d6fd6af05c9de95c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Function5)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Function5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="182" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aab59917791fb297d6735d46e9a862be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Functor5)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Functor5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="189" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ae3f8bdac5c2ea1cf56ff1484ebb9a44e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Function6)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Function6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="196" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a789c7e8ee88243dc4a53841f6a8da3c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Functor6)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Functor6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="203" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="203" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3e13c2ccf384c80c66116418e1b3ccde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Function7)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Function7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="210" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="210" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a5d583a32b46a306139d32ea9a1d575a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Function8)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Function8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="219" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="219" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3a278f02e1633feda3dea30d810a49ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Function9)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Function9</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="228" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="228" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1afe4653b181e199417b004c4485152010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, Function10)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>Function10</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="237" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ac3ff9db96cb7a664ef44d20eb0a7a71f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, ByPointerFunction)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>ByPointerFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="247" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="247" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a698f1a80b7fed18141fd170524908885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, FunctionWithCStringLiteral)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>FunctionWithCStringLiteral</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="255" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a82aff636cad2f441c584fc8e3c057d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, ByConstReferenceFunction)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>ByConstReferenceFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="262" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="262" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1accb544431629bfb38a618343daaa54c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(InvokeArgumentTest, ByExplicitConstReferenceFunction)</argsstring>
        <name>TEST</name>
        <param>
          <type>InvokeArgumentTest</type>
        </param>
        <param>
          <type>ByExplicitConstReferenceFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="273" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="273" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ae6ef9e9d09c01cd0699a3044fd8c3f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, OneArg)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>OneArg</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="285" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1afadf90d2d0acc55906bfd7f0f43f8a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, TwoArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>TwoArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="292" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1acae0920fc83b3990663b9d448b8bfd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, ThreeArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>ThreeArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="300" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="300" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ab7046e566f75756b6fe1ec4d92ff7c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, FourArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>FourArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="307" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="307" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ab51a43ea1c760e001330400d6cec5bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, FiveArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>FiveArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="315" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="315" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a167731ec11d5cf4135d95b01dc59e223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, SixArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>SixArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="325" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="325" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a04970f4db4de11d91e59ae8769dccea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, SevenArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>SevenArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="333" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="333" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a5cbb36915cb29391752600a2a0e9c7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, EightArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>EightArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="342" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="342" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aee9acec4535339649dd3067f671cc6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, NineArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>NineArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="351" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="351" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a6a818f5a6c2250d3944f90e4331ebc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, TenArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>TenArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="360" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="360" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a5380c41df40cb159d58d4c4c81aeac19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, NonInvokeAction)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>NonInvokeAction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="376" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="376" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a0499d0970300d8d6c252a898222b8dd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, Identity)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>Identity</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="384" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="384" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aea7114a30b1fc589d14e84f1a27bd1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, RepeatedArguments)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>RepeatedArguments</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="391" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="391" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a8a9dc47b8e9810ca74166a9d17cba54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, ReversedArgumentOrder)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>ReversedArgumentOrder</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="398" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="398" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a4330224375c915f21860c30798dacd0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, ArgsOfCompatibleTypes)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>ArgsOfCompatibleTypes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="406" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="406" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a744fd048a745e3df48a578ed251003c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(WithArgsTest, VoidAction)</argsstring>
        <name>TEST</name>
        <param>
          <type>WithArgsTest</type>
        </param>
        <param>
          <type>VoidAction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="413" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="413" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ab1820fa999561582ae20885c4149a634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, TwoActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>TwoActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="421" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="421" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a9fe00b82e3daa39501cefb4636b1909c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, ThreeActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>ThreeActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="430" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="430" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa6ed664752eab81abc0c8ec08bc28fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, FourActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>FourActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="441" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="441" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1adf15fb74ccf2a473a31f0ae733210f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, FiveActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>FiveActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="456" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="456" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1af9328f486c8862bfb3a08bd9c0b10a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, SixActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>SixActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="473" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="473" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa1eb8dae72fb173011bf64027f075cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, SevenActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>SevenActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="492" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="492" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a7e7ffc936de010908f42193b951016e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, EightActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>EightActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="513" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="513" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ae2037cf34f7bbdb2aa779f31f44c0530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, NineActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>NineActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="537" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="537" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a11cc35bfa98278915c040aac2329b4a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(DoAllTest, TenActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>DoAllTest</type>
        </param>
        <param>
          <type>TenActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="563" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="563" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a1275b0757e9f1caf70fbc23da141acd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(Return5)</argsstring>
        <name>ACTION</name>
        <param>
          <type>Return5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="605" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="605" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a6a73da775945f4294d9377b0110bb237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, WorksWhenNotReferencingArguments)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>WorksWhenNotReferencingArguments</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="607" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="607" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a960f5a5ca2b6a95ce1f3f1673b90d02d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(IncrementArg1)</argsstring>
        <name>ACTION</name>
        <param>
          <type>IncrementArg1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="616" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="616" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1accde1673541c5076b0e09b3f1914c9d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, WorksWhenReturningVoid)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>WorksWhenReturningVoid</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="618" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="618" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa2c56f5c6a770b252ebdc27a6d8b613d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(IncrementArg2)</argsstring>
        <name>ACTION</name>
        <param>
          <type>IncrementArg2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="627" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="627" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1abdfd8146dfbb5a152326a851b13e45cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, CanReferenceArgumentType)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>CanReferenceArgumentType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="633" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="633" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a108b4ee75c3b13445b7035fd5ecd6d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(Sum2)</argsstring>
        <name>ACTION</name>
        <param>
          <type>Sum2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="642" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="642" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a4e2d8b9ac63b2f6dc6d4b17c3a767dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, CanReferenceArgumentTuple)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>CanReferenceArgumentTuple</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="648" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="648" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ab91824b86c842e024337b6de45eb8cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_generated_actions_test::Dummy</definition>
        <argsstring>(bool flag)</argsstring>
        <name>Dummy</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="656" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="656" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ae6806220035fcf097362dd736db4b03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(InvokeDummy)</argsstring>
        <name>ACTION</name>
        <param>
          <type>InvokeDummy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="658" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="658" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a1d3b8bb25c79d7e2167234f87935ea1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, CanReferenceMockFunctionType)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>CanReferenceMockFunctionType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="664" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="664" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a9f274ffcf4211cb03b4390cb0cc1ef1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(InvokeDummy2)</argsstring>
        <name>ACTION</name>
        <param>
          <type>InvokeDummy2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="672" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="672" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a384a114235b474bb4318754e0d16f559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, CanReferenceMockFunctionReturnType)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>CanReferenceMockFunctionReturnType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="678" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="678" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a78725817afcd5d7f19df2bdc2d41b9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(ReturnAddrOfConstBoolReferenceArg)</argsstring>
        <name>ACTION</name>
        <param>
          <type>ReturnAddrOfConstBoolReferenceArg</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="685" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="685" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a8b4dadfc32c71e754d6ba3daae382715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, WorksForConstReferenceArg)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>WorksForConstReferenceArg</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="690" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="690" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aeb01205293078272696bd0c19ce4e848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(ReturnAddrOfIntReferenceArg)</argsstring>
        <name>ACTION</name>
        <param>
          <type>ReturnAddrOfIntReferenceArg</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="697" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="697" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a093a824ac7e8ec775a8f5d7b11d223a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, WorksForNonConstReferenceArg)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>WorksForNonConstReferenceArg</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="702" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="702" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1af75a9a5b9d6a1cf718a58f030a5a9133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, WorksInNamespace)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>WorksInNamespace</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="713" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="713" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a0eef2f885ccb1e4fac88a910f0fc5c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(PlusTwo)</argsstring>
        <name>ACTION</name>
        <param>
          <type>PlusTwo</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="720" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="720" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1acb98f6208678d9f5500a0c2c095b8cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, WorksForDifferentArgumentNumbers)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>WorksForDifferentArgumentNumbers</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="722" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="722" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ac081154b3ae2f099bd5be853cacfdaa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P</definition>
        <argsstring>(Plus, n)</argsstring>
        <name>ACTION_P</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>n</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="732" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="732" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a42a5fe606ca18b2eb1e5d7884045118f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPMacroTest, DefinesParameterizedAction)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPMacroTest</type>
        </param>
        <param>
          <type>DefinesParameterizedAction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="734" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="734" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3bcd440e11ab64ad5eb007efce33cf7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P</definition>
        <argsstring>(TypedPlus, n)</argsstring>
        <name>ACTION_P</name>
        <param>
          <type>TypedPlus</type>
        </param>
        <param>
          <type>n</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="741" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="741" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a4262c10efb367abf9771b3060c57d190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPMacroTest, CanReferenceArgumentAndParameterTypes)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPMacroTest</type>
        </param>
        <param>
          <type>CanReferenceArgumentAndParameterTypes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="747" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="747" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ab545244777c7559d1b0c2c63ee2be134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPMacroTest, WorksInCompatibleMockFunction)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPMacroTest</type>
        </param>
        <param>
          <type>WorksInCompatibleMockFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="754" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="754" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a24927d97882dc1d52e203720df804188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(OverloadedAction)</argsstring>
        <name>ACTION</name>
        <param>
          <type>OverloadedAction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="763" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="763" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a1ee92e8b8bd6a5a54f5d2fcdb9f122b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P</definition>
        <argsstring>(OverloadedAction, default_value)</argsstring>
        <name>ACTION_P</name>
        <param>
          <type>OverloadedAction</type>
        </param>
        <param>
          <type>default_value</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="765" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="765" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a233ee874462c7956e154945975da1127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P2</definition>
        <argsstring>(OverloadedAction, true_value, false_value)</argsstring>
        <name>ACTION_P2</name>
        <param>
          <type>OverloadedAction</type>
        </param>
        <param>
          <type>true_value</type>
        </param>
        <param>
          <type>false_value</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="769" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="769" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a8a3d26365bdae172067fe3a63bd88e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionMacroTest, CanDefineOverloadedActions)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionMacroTest</type>
        </param>
        <param>
          <type>CanDefineOverloadedActions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="773" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="773" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a35c62beac532eaff7e54b8ad4a7fe1cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P3</definition>
        <argsstring>(Plus, m, n, k)</argsstring>
        <name>ACTION_P3</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>m</type>
        </param>
        <param>
          <type>n</type>
        </param>
        <param>
          <type>k</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="791" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="791" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3579cf2428f584d2a837c2c219ec1d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor3Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor3Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="793" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="793" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ac86e9e1fa5be82823e80247ba093301c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P4</definition>
        <argsstring>(Plus, p0, p1, p2, p3)</argsstring>
        <name>ACTION_P4</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <param>
          <type>p2</type>
        </param>
        <param>
          <type>p3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="802" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="802" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a6c13e382007960236763d638542bc5fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor4Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor4Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="804" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="804" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a948863fb38d913f02a0c5bde6be0b0a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P5</definition>
        <argsstring>(Plus, p0, p1, p2, p3, p4)</argsstring>
        <name>ACTION_P5</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <param>
          <type>p2</type>
        </param>
        <param>
          <type>p3</type>
        </param>
        <param>
          <type>p4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="809" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="809" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a132cab07373e037a06807a5948b1410b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor5Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor5Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="811" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="811" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a97cbcc90a3063a1882886ded61fc8979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P6</definition>
        <argsstring>(Plus, p0, p1, p2, p3, p4, p5)</argsstring>
        <name>ACTION_P6</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <param>
          <type>p2</type>
        </param>
        <param>
          <type>p3</type>
        </param>
        <param>
          <type>p4</type>
        </param>
        <param>
          <type>p5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="816" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="816" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a9031cb5f0e3d9de21ed3ff0a98a311d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor6Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor6Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="820" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="820" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a58bc376a0637fc1e89e6503466d1b9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P7</definition>
        <argsstring>(Plus, p0, p1, p2, p3, p4, p5, p6)</argsstring>
        <name>ACTION_P7</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <param>
          <type>p2</type>
        </param>
        <param>
          <type>p3</type>
        </param>
        <param>
          <type>p4</type>
        </param>
        <param>
          <type>p5</type>
        </param>
        <param>
          <type>p6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="825" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="825" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1add3cba52186c7ce384808c222492ee18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor7Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor7Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="829" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="829" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ad8766a6dbaeffbf36658d3b5f75d3b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P8</definition>
        <argsstring>(Plus, p0, p1, p2, p3, p4, p5, p6, p7)</argsstring>
        <name>ACTION_P8</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <param>
          <type>p2</type>
        </param>
        <param>
          <type>p3</type>
        </param>
        <param>
          <type>p4</type>
        </param>
        <param>
          <type>p5</type>
        </param>
        <param>
          <type>p6</type>
        </param>
        <param>
          <type>p7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="834" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="834" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a1913bedf1d5cf736e91f2be119de0d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor8Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor8Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="838" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="838" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ab023ad5e95ca2c2b8845963ce7222e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P9</definition>
        <argsstring>(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8)</argsstring>
        <name>ACTION_P9</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <param>
          <type>p2</type>
        </param>
        <param>
          <type>p3</type>
        </param>
        <param>
          <type>p4</type>
        </param>
        <param>
          <type>p5</type>
        </param>
        <param>
          <type>p6</type>
        </param>
        <param>
          <type>p7</type>
        </param>
        <param>
          <type>p8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="843" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="843" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a52d6dc447a4a71524adfeb7c8f7b6a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor9Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor9Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="847" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="847" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a3c6e7ef6aefc94efc9e815e92f0b3e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P10</definition>
        <argsstring>(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8, last_param)</argsstring>
        <name>ACTION_P10</name>
        <param>
          <type>Plus</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <param>
          <type>p2</type>
        </param>
        <param>
          <type>p3</type>
        </param>
        <param>
          <type>p4</type>
        </param>
        <param>
          <type>p5</type>
        </param>
        <param>
          <type>p6</type>
        </param>
        <param>
          <type>p7</type>
        </param>
        <param>
          <type>p8</type>
        </param>
        <param>
          <type>last_param</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="852" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="852" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a564fd77344f58b26577452a380c93935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, WorksFor10Parameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>WorksFor10Parameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="858" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="858" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ad58030fe83ad47cdb4ff027f8399adb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P2</definition>
        <argsstring>(PadArgument, prefix, suffix)</argsstring>
        <name>ACTION_P2</name>
        <param>
          <type>PadArgument</type>
        </param>
        <param>
          <type>prefix</type>
        </param>
        <param>
          <type>suffix</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="866" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="866" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ad42236ad6c6d01fad6dd947ca6163d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, SimpleTypePromotion)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>SimpleTypePromotion</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="873" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="873" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ae46434959151b83249e52d4869e28cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P3</definition>
        <argsstring>(ConcatImpl, a, b, c)</argsstring>
        <name>ACTION_P3</name>
        <param>
          <type>ConcatImpl</type>
        </param>
        <param>
          <type>a</type>
        </param>
        <param>
          <type>b</type>
        </param>
        <param>
          <type>c</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="887" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="887" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a28213583d5450876b564a3df58d1cf91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>ConcatImplActionP3&lt; std::string, T1, T2 &gt;</type>
        <definition>ConcatImplActionP3&lt;std::string, T1, T2&gt; testing::gmock_generated_actions_test::Concat</definition>
        <argsstring>(const std::string &amp;a, T1 b, T2 c)</argsstring>
        <name>Concat</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T1</type>
          <declname>b</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="903" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="903" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a861e9fadbecf0c66e8226021c6c22013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>ConcatImplActionP3&lt; T1, int, T2 &gt;</type>
        <definition>ConcatImplActionP3&lt;T1, int, T2&gt; testing::gmock_generated_actions_test::Concat</definition>
        <argsstring>(T1 a, int b, T2 c)</argsstring>
        <name>Concat</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="922" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="922" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a7222610b197216e7976b3fa751f97daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, CanPartiallyRestrictParameterTypes)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>CanPartiallyRestrictParameterTypes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="926" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="926" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a183b3863b3c2319ac414fe694455f58c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(DoFoo)</argsstring>
        <name>ACTION</name>
        <param>
          <type>DoFoo</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="936" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="936" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a8487a3396f4f705e134e44584634ef1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P</definition>
        <argsstring>(DoFoo, p)</argsstring>
        <name>ACTION_P</name>
        <param>
          <type>DoFoo</type>
        </param>
        <param>
          <type>p</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="937" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="937" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1acd38e742235e154ad309f22e9a470a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P2</definition>
        <argsstring>(DoFoo, p0, p1)</argsstring>
        <name>ACTION_P2</name>
        <param>
          <type>DoFoo</type>
        </param>
        <param>
          <type>p0</type>
        </param>
        <param>
          <type>p1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="938" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="938" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ad702feced8b71b3708782b1a2274453e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, TypesAreCorrect)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>TypesAreCorrect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="940" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="940" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a89c01b82e854ad79e3d139aa72477747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P</definition>
        <argsstring>(Plus1, x)</argsstring>
        <name>ACTION_P</name>
        <param>
          <type>Plus1</type>
        </param>
        <param>
          <type>x</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="980" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="980" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a0e2768c0fae30bc46ec6e322b29dd54c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P2</definition>
        <argsstring>(Plus2, x, y)</argsstring>
        <name>ACTION_P2</name>
        <param>
          <type>Plus2</type>
        </param>
        <param>
          <type>x</type>
        </param>
        <param>
          <type>y</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="981" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="981" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1afc911947c840aa9857eb2d06e4d80787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P3</definition>
        <argsstring>(Plus3, x, y, z)</argsstring>
        <name>ACTION_P3</name>
        <param>
          <type>Plus3</type>
        </param>
        <param>
          <type>x</type>
        </param>
        <param>
          <type>y</type>
        </param>
        <param>
          <type>z</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="982" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="982" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a4e48e01a7bfc369d279cc0c99a7d3c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P10</definition>
        <argsstring>(Plus10, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9)</argsstring>
        <name>ACTION_P10</name>
        <param>
          <type>Plus10</type>
        </param>
        <param>
          <type>a0</type>
        </param>
        <param>
          <type>a1</type>
        </param>
        <param>
          <type>a2</type>
        </param>
        <param>
          <type>a3</type>
        </param>
        <param>
          <type>a4</type>
        </param>
        <param>
          <type>a5</type>
        </param>
        <param>
          <type>a6</type>
        </param>
        <param>
          <type>a7</type>
        </param>
        <param>
          <type>a8</type>
        </param>
        <param>
          <type>a9</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="983" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="983" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a20664d32f08c53d6f9fa5e020a85fab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionPnMacroTest, CanExplicitlyInstantiateWithReferenceTypes)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionPnMacroTest</type>
        </param>
        <param>
          <type>CanExplicitlyInstantiateWithReferenceTypes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="987" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="987" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a058a3d17071ddb888319ab71b491af94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ReturnNewTest, NoArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>ReturnNewTest</type>
        </param>
        <param>
          <type>NoArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1014" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1014" bodyend="1019"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a64f3f8327d51c139b441846e809ae4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ReturnNewTest, Unary)</argsstring>
        <name>TEST</name>
        <param>
          <type>ReturnNewTest</type>
        </param>
        <param>
          <type>Unary</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1028" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1028" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ad8f696b14b0f2dba4986c53f615aef15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ReturnNewTest, UnaryWorksWhenMockMethodHasArgs)</argsstring>
        <name>TEST</name>
        <param>
          <type>ReturnNewTest</type>
        </param>
        <param>
          <type>UnaryWorksWhenMockMethodHasArgs</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1035" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1035" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ad9f45ddc4a5616b919116c766ad37a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ReturnNewTest, UnaryWorksWhenMockMethodReturnsPointerToConst)</argsstring>
        <name>TEST</name>
        <param>
          <type>ReturnNewTest</type>
        </param>
        <param>
          <type>UnaryWorksWhenMockMethodReturnsPointerToConst</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1043" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1043" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a1ed6392f4aeb68b9429ff7dd98ce5a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ReturnNewTest, ConstructorThatTakes10Arguments)</argsstring>
        <name>TEST</name>
        <param>
          <type>ReturnNewTest</type>
        </param>
        <param>
          <type>ConstructorThatTakes10Arguments</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1061" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1061" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a1debc0726715951fcd7f5443e436dc46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(CreateNew, HAS_1_TEMPLATE_PARAMS(typename, T), AND_0_VALUE_PARAMS())</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>CreateNew</type>
        </param>
        <param>
          <type>HAS_1_TEMPLATE_PARAMS(typename, T)</type>
        </param>
        <param>
          <type>AND_0_VALUE_PARAMS()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1072" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1072" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aaac879cbe00638dcc2d4733760180a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionTemplateTest, WorksWithoutValueParam)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionTemplateTest</type>
        </param>
        <param>
          <type>WorksWithoutValueParam</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1078" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1078" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a38fb8047f95126bb0b2cfe7e670c8af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(CreateNew, HAS_1_TEMPLATE_PARAMS(typename, T), AND_1_VALUE_PARAMS(a0))</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>CreateNew</type>
        </param>
        <param>
          <type>HAS_1_TEMPLATE_PARAMS(typename, T)</type>
        </param>
        <param>
          <type>AND_1_VALUE_PARAMS(a0)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1085" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1085" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a21f6e2ad5c4c1afecca93a42c9a84f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionTemplateTest, WorksWithValueParams)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionTemplateTest</type>
        </param>
        <param>
          <type>WorksWithValueParams</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1091" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1091" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aaaac0fbf0bf2c7bd8fc104310e6af25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(MyDeleteArg, HAS_1_TEMPLATE_PARAMS(int, k), AND_0_VALUE_PARAMS())</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>MyDeleteArg</type>
        </param>
        <param>
          <type>HAS_1_TEMPLATE_PARAMS(int, k)</type>
        </param>
        <param>
          <type>AND_0_VALUE_PARAMS()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1099" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1099" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aad8d77a35ac21f366dc334a45cf5b140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionTemplateTest, WorksForIntegralTemplateParams)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionTemplateTest</type>
        </param>
        <param>
          <type>WorksForIntegralTemplateParams</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1114" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1114" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1ad99d926be507eb0c031538da2e8bb838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(ReturnSmartPointer, HAS_1_TEMPLATE_PARAMS(template&lt; typename Pointee &gt; class, Pointer), AND_1_VALUE_PARAMS(pointee))</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>ReturnSmartPointer</type>
        </param>
        <param>
          <type>HAS_1_TEMPLATE_PARAMS(template&lt; typename Pointee &gt; class, Pointer)</type>
        </param>
        <param>
          <type>AND_1_VALUE_PARAMS(pointee)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1124" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1124" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a8908d6badc9054adebdaf5ed8d455c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionTemplateTest, WorksForTemplateTemplateParameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionTemplateTest</type>
        </param>
        <param>
          <type>WorksForTemplateTemplateParameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1131" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1131" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aea61dba8f93605f3e8c1cdedfd1079f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(ReturnGiant, HAS_10_TEMPLATE_PARAMS(typename, T1, typename, T2, typename, T3, int, k4, bool, k5, unsigned int, k6, class, T7, class, T8, class, T9, template&lt; typename T &gt; class, T10), AND_1_VALUE_PARAMS(value))</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>ReturnGiant</type>
        </param>
        <param>
          <type>HAS_10_TEMPLATE_PARAMS(typename, T1, typename, T2, typename, T3, int, k4, bool, k5, unsigned int, k6, class, T7, class, T8, class, T9, template&lt; typename T &gt; class, T10)</type>
        </param>
        <param>
          <type>AND_1_VALUE_PARAMS(value)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1147" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1147" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a39707e50b998b0866ea7dec54099f38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionTemplateTest, WorksFor10TemplateParameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionTemplateTest</type>
        </param>
        <param>
          <type>WorksFor10TemplateParameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1163" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1163" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a0e21a6c1f43a7125a29e6e1edcd7006c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number), AND_10_VALUE_PARAMS(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10))</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>ReturnSum</type>
        </param>
        <param>
          <type>HAS_1_TEMPLATE_PARAMS(typename, Number)</type>
        </param>
        <param>
          <type>AND_10_VALUE_PARAMS(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1174" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1174" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa8dd9ea1777fe67626bab2815b7261f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionTemplateTest, WorksFor10ValueParameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionTemplateTest</type>
        </param>
        <param>
          <type>WorksFor10ValueParameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1180" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1180" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a49c180470c75de1ab88cd2928e738d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION</definition>
        <argsstring>(ReturnSum)</argsstring>
        <name>ACTION</name>
        <param>
          <type>ReturnSum</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1188" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1188" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1acae7628c76df0e3b54ea80459fe3cf60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_P</definition>
        <argsstring>(ReturnSum, x)</argsstring>
        <name>ACTION_P</name>
        <param>
          <type>ReturnSum</type>
        </param>
        <param>
          <type>x</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1190" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1190" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a0d95dcce021580cf2a2af2a91348a01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number), AND_2_VALUE_PARAMS(v1, v2))</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>ReturnSum</type>
        </param>
        <param>
          <type>HAS_1_TEMPLATE_PARAMS(typename, Number)</type>
        </param>
        <param>
          <type>AND_2_VALUE_PARAMS(v1, v2)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1192" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1192" bodyend="1196"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a5241672e22af49093d3601ac42c9a5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number), AND_3_VALUE_PARAMS(v1, v2, v3))</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>ReturnSum</type>
        </param>
        <param>
          <type>HAS_1_TEMPLATE_PARAMS(typename, Number)</type>
        </param>
        <param>
          <type>AND_3_VALUE_PARAMS(v1, v2, v3)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1198" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1198" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1a03e55dabaa60ff2cda602c702ef3ff76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::ACTION_TEMPLATE</definition>
        <argsstring>(ReturnSum, HAS_2_TEMPLATE_PARAMS(typename, Number, int, k), AND_4_VALUE_PARAMS(v1, v2, v3, v4))</argsstring>
        <name>ACTION_TEMPLATE</name>
        <param>
          <type>ReturnSum</type>
        </param>
        <param>
          <type>HAS_2_TEMPLATE_PARAMS(typename, Number, int, k)</type>
        </param>
        <param>
          <type>AND_4_VALUE_PARAMS(v1, v2, v3, v4)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1204" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1204" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="gmock-generated-actions__test_8cc_1aa84c5b4f29e052340459e12649ce7209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_generated_actions_test::TEST</definition>
        <argsstring>(ActionTemplateTest, CanBeOverloadedOnNumberOfValueParameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>ActionTemplateTest</type>
        </param>
        <param>
          <type>CanBeOverloadedOnNumberOfValueParameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="1210" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" bodystart="1210" bodyend="1221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/test/gmock-generated-actions_test.cc" line="45" column="1"/>
  </compounddef>
</doxygen>
