<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sample2__unittest_8cc" kind="file" language="C++">
    <compoundname>sample2_unittest.cc</compoundname>
    <includes refid="sample2_8h" local="yes">sample2.h</includes>
    <includes refid="gtest_8h" local="yes">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="4272">
        <label>sys/stat.h</label>
      </node>
      <node id="4292">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="4266" relation="include">
        </childnode>
      </node>
      <node id="4258">
        <label>vendor/googletest/googletest/samples/sample2_unittest.cc</label>
        <link refid="sample2__unittest_8cc"/>
        <childnode refid="4259" relation="include">
        </childnode>
        <childnode refid="4261" relation="include">
        </childnode>
      </node>
      <node id="4286">
        <label>iomanip</label>
      </node>
      <node id="4262">
        <label>limits</label>
      </node>
      <node id="4299">
        <label>assert.h</label>
      </node>
      <node id="4278">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="4297">
        <label>iterator</label>
      </node>
      <node id="4285">
        <label>float.h</label>
      </node>
      <node id="4303">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="4269">
        <label>stdlib.h</label>
      </node>
      <node id="4290">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="4260" relation="include">
        </childnode>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
      </node>
      <node id="4304">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="4305" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4290" relation="include">
        </childnode>
      </node>
      <node id="4276">
        <label>string</label>
      </node>
      <node id="4287">
        <label>map</label>
      </node>
      <node id="4302">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="4296" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
      </node>
      <node id="4268">
        <label>stddef.h</label>
      </node>
      <node id="4307">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="4263">
        <label>ostream</label>
      </node>
      <node id="4279">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="4293">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="4294" relation="include">
        </childnode>
      </node>
      <node id="4271">
        <label>sys/types.h</label>
      </node>
      <node id="4260">
        <label>string.h</label>
      </node>
      <node id="4283">
        <label>typeinfo</label>
      </node>
      <node id="4259">
        <label>sample2.h</label>
        <link refid="sample2_8h_source"/>
        <childnode refid="4260" relation="include">
        </childnode>
      </node>
      <node id="4280">
        <label>unistd.h</label>
      </node>
      <node id="4264">
        <label>vector</label>
      </node>
      <node id="4301">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="4289">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="4262" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
      </node>
      <node id="4277">
        <label>utility</label>
      </node>
      <node id="4275">
        <label>sstream</label>
      </node>
      <node id="4298">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="4269" relation="include">
        </childnode>
        <childnode refid="4299" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
      </node>
      <node id="4305">
        <label>iosfwd</label>
      </node>
      <node id="4291">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="4290" relation="include">
        </childnode>
      </node>
      <node id="4274">
        <label>iostream</label>
      </node>
      <node id="4284">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="4277" relation="include">
        </childnode>
      </node>
      <node id="4261">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="4262" relation="include">
        </childnode>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4290" relation="include">
        </childnode>
        <childnode refid="4293" relation="include">
        </childnode>
        <childnode refid="4289" relation="include">
        </childnode>
        <childnode refid="4295" relation="include">
        </childnode>
        <childnode refid="4300" relation="include">
        </childnode>
        <childnode refid="4303" relation="include">
        </childnode>
        <childnode refid="4304" relation="include">
        </childnode>
        <childnode refid="4306" relation="include">
        </childnode>
        <childnode refid="4307" relation="include">
        </childnode>
      </node>
      <node id="4281">
        <label>strings.h</label>
      </node>
      <node id="4267">
        <label>ctype.h</label>
      </node>
      <node id="4306">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4292" relation="include">
        </childnode>
      </node>
      <node id="4266">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="4267" relation="include">
        </childnode>
        <childnode refid="4268" relation="include">
        </childnode>
        <childnode refid="4269" relation="include">
        </childnode>
        <childnode refid="4270" relation="include">
        </childnode>
        <childnode refid="4260" relation="include">
        </childnode>
        <childnode refid="4271" relation="include">
        </childnode>
        <childnode refid="4272" relation="include">
        </childnode>
        <childnode refid="4273" relation="include">
        </childnode>
        <childnode refid="4274" relation="include">
        </childnode>
        <childnode refid="4275" relation="include">
        </childnode>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4277" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4278" relation="include">
        </childnode>
        <childnode refid="4279" relation="include">
        </childnode>
        <childnode refid="4280" relation="include">
        </childnode>
        <childnode refid="4281" relation="include">
        </childnode>
        <childnode refid="4282" relation="include">
        </childnode>
        <childnode refid="4283" relation="include">
        </childnode>
        <childnode refid="4284" relation="include">
        </childnode>
      </node>
      <node id="4265">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4267" relation="include">
        </childnode>
        <childnode refid="4285" relation="include">
        </childnode>
        <childnode refid="4260" relation="include">
        </childnode>
        <childnode refid="4286" relation="include">
        </childnode>
        <childnode refid="4262" relation="include">
        </childnode>
        <childnode refid="4287" relation="include">
        </childnode>
        <childnode refid="4288" relation="include">
        </childnode>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4289" relation="include">
        </childnode>
        <childnode refid="4290" relation="include">
        </childnode>
        <childnode refid="4291" relation="include">
        </childnode>
        <childnode refid="4292" relation="include">
        </childnode>
      </node>
      <node id="4296">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="4267" relation="include">
        </childnode>
        <childnode refid="4297" relation="include">
        </childnode>
        <childnode refid="4288" relation="include">
        </childnode>
        <childnode refid="4277" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4298" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4300" relation="include">
        </childnode>
      </node>
      <node id="4288">
        <label>set</label>
      </node>
      <node id="4295">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4277" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4296" relation="include">
        </childnode>
        <childnode refid="4302" relation="include">
        </childnode>
      </node>
      <node id="4273">
        <label>algorithm</label>
      </node>
      <node id="4282">
        <label>regex.h</label>
      </node>
      <node id="4270">
        <label>stdio.h</label>
      </node>
      <node id="4294">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4270" relation="include">
        </childnode>
      </node>
      <node id="4300">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="4263" relation="include">
        </childnode>
        <childnode refid="4275" relation="include">
        </childnode>
        <childnode refid="4276" relation="include">
        </childnode>
        <childnode refid="4277" relation="include">
        </childnode>
        <childnode refid="4264" relation="include">
        </childnode>
        <childnode refid="4266" relation="include">
        </childnode>
        <childnode refid="4265" relation="include">
        </childnode>
        <childnode refid="4301" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sample2__unittest_8cc_1a32d059f46f7041965d44bf1c034ba26e" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char kHelloString[]</definition>
        <argsstring>[]</argsstring>
        <name>kHelloString</name>
        <initializer>= &quot;Hello, world!&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/samples/sample2_unittest.cc" line="77" column="1" bodyfile="vendor/googletest/googletest/samples/sample2_unittest.cc" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sample2__unittest_8cc_1aaf04f91c362407dc08c8bf377a77b4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(MyString, DefaultConstructor)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="class_my_string" kindref="compound">MyString</ref></type>
        </param>
        <param>
          <type>DefaultConstructor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/samples/sample2_unittest.cc" line="49" column="1" bodyfile="vendor/googletest/googletest/samples/sample2_unittest.cc" bodystart="49" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="sample2__unittest_8cc_1a38e540508dce697cb50d6cd5f298d051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(MyString, ConstructorFromCString)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="class_my_string" kindref="compound">MyString</ref></type>
        </param>
        <param>
          <type>ConstructorFromCString</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/samples/sample2_unittest.cc" line="80" column="1" bodyfile="vendor/googletest/googletest/samples/sample2_unittest.cc" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="sample2__unittest_8cc_1a79ed49ad165f76c183707325847043c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(MyString, CopyConstructor)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="class_my_string" kindref="compound">MyString</ref></type>
        </param>
        <param>
          <type>CopyConstructor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/samples/sample2_unittest.cc" line="88" column="1" bodyfile="vendor/googletest/googletest/samples/sample2_unittest.cc" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="sample2__unittest_8cc_1afa5d617a125eb852624619a56cf7f89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(MyString, Set)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="class_my_string" kindref="compound">MyString</ref></type>
        </param>
        <param>
          <type>Set</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/samples/sample2_unittest.cc" line="95" column="1" bodyfile="vendor/googletest/googletest/samples/sample2_unittest.cc" bodystart="95" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2005,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>sample<sp/>program<sp/>demonstrating<sp/>using<sp/>Google<sp/>C++<sp/>testing<sp/>framework.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>sample<sp/>shows<sp/>how<sp/>to<sp/>write<sp/>a<sp/>more<sp/>complex<sp/>unit<sp/>test<sp/>for<sp/>a<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>has<sp/>multiple<sp/>member<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Usually,<sp/>it&apos;s<sp/>a<sp/>good<sp/>idea<sp/>to<sp/>have<sp/>one<sp/>test<sp/>for<sp/>each<sp/>method<sp/>in<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class.<sp/><sp/>You<sp/>don&apos;t<sp/>have<sp/>to<sp/>do<sp/>that<sp/>exactly,<sp/>but<sp/>it<sp/>helps<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>your<sp/>tests<sp/>organized.<sp/><sp/>You<sp/>may<sp/>also<sp/>throw<sp/>in<sp/>additional<sp/>tests<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sample2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>example,<sp/>we<sp/>test<sp/>the<sp/>MyString<sp/>class<sp/>(a<sp/>simple<sp/>string).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>default<sp/>c&apos;tor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">TEST(<ref refid="class_my_string" kindref="compound">MyString</ref>,<sp/>DefaultConstructor)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_my_string" kindref="compound">MyString</ref><sp/>s;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Asserts<sp/>that<sp/>s.c_string()<sp/>returns<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;TechnicalDetails&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>write<sp/>NULL<sp/>instead<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static_cast&lt;const<sp/>char<sp/>*&gt;(NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>assertion,<sp/>it<sp/>will<sp/>generate<sp/>a<sp/>warning<sp/>on<sp/>gcc<sp/>3.4.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reason<sp/>is<sp/>that<sp/>EXPECT_EQ<sp/>needs<sp/>to<sp/>know<sp/>the<sp/>types<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>arguments<sp/>in<sp/>order<sp/>to<sp/>print<sp/>them<sp/>when<sp/>it<sp/>fails.<sp/><sp/>Since<sp/>NULL<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#defined<sp/>as<sp/>0,<sp/>the<sp/>compiler<sp/>will<sp/>use<sp/>the<sp/>formatter<sp/>function<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>to<sp/>print<sp/>it.<sp/><sp/>However,<sp/>gcc<sp/>thinks<sp/>that<sp/>NULL<sp/>should<sp/>be<sp/>used<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer,<sp/>not<sp/>an<sp/>int,<sp/>and<sp/>therefore<sp/>complains.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>root<sp/>of<sp/>the<sp/>problem<sp/>is<sp/>C++&apos;s<sp/>lack<sp/>of<sp/>distinction<sp/>between<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>number<sp/>0<sp/>and<sp/>the<sp/>null<sp/>pointer<sp/>constant.<sp/><sp/>Unfortunately,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>live<sp/>with<sp/>this<sp/>fact.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/TechnicalDetails&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>EXPECT_STREQ(NULL,<sp/>s.c_string());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0u,<sp/>s.Length());</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kHelloString[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello,<sp/>world!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>c&apos;tor<sp/>that<sp/>accepts<sp/>a<sp/>C<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">TEST(<ref refid="class_my_string" kindref="compound">MyString</ref>,<sp/>ConstructorFromCString)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_my_string" kindref="compound">MyString</ref><sp/>s(kHelloString);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0,<sp/>strcmp(s.c_string(),<sp/>kHelloString));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kHelloString)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kHelloString[0])<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.Length());</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>copy<sp/>c&apos;tor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">TEST(<ref refid="class_my_string" kindref="compound">MyString</ref>,<sp/>CopyConstructor)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_my_string" kindref="compound">MyString</ref><sp/>s1(kHelloString);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_my_string" kindref="compound">MyString</ref><sp/>s2<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0,<sp/>strcmp(s2.c_string(),<sp/>kHelloString));</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>Set<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">TEST(<ref refid="class_my_string" kindref="compound">MyString</ref>,<sp/>Set)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="class_my_string" kindref="compound">MyString</ref><sp/>s;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>s.Set(kHelloString);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0,<sp/>strcmp(s.c_string(),<sp/>kHelloString));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>should<sp/>work<sp/>when<sp/>the<sp/>input<sp/>pointer<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>in<sp/>the<sp/>MyString<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>s.Set(s.c_string());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0,<sp/>strcmp(s.c_string(),<sp/>kHelloString));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>we<sp/>set<sp/>the<sp/>MyString<sp/>to<sp/>NULL?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>s.Set(NULL);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>EXPECT_STREQ(NULL,<sp/>s.c_string());</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googletest/samples/sample2_unittest.cc"/>
  </compounddef>
</doxygen>
