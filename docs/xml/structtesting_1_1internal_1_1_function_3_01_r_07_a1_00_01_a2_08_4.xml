<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4" kind="struct" language="C++" prot="public">
    <compoundname>testing::internal::Function&lt; R(A1, A2)&gt;</compoundname>
    <basecompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1)&gt;</basecompoundref>
    <derivedcompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1, A2, A3)&gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename A1</type>
      </param>
      <param>
        <type>typename A2</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a025f5192252366d73aa19718bb0ea89d" prot="public" static="no">
        <type>A2</type>
        <definition>typedef A2 testing::internal::Function&lt; R(A1, A2)&gt;::Argument2</definition>
        <argsstring></argsstring>
        <name>Argument2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="178" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a2de00437877c29ec6cb78396928b8e3e" prot="public" static="no">
        <type>::testing::tuple&lt; A1, A2 &gt;</type>
        <definition>typedef ::testing::tuple&lt;A1, A2&gt; testing::internal::Function&lt; R(A1, A2)&gt;::ArgumentTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="179" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1ad07042129ff6370f55a279ad12f5e80f" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt; ArgumentTuple &gt;::type</type>
        <definition>typedef MatcherTuple&lt;ArgumentTuple&gt;::type testing::internal::Function&lt; R(A1, A2)&gt;::ArgumentMatcherTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentMatcherTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="180" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1ada1ad22fa21c84ec3faea47ed20c1b46" prot="public" static="no">
        <type>void</type>
        <definition>typedef void testing::internal::Function&lt; R(A1, A2)&gt;::MakeResultVoid(A1, A2)</definition>
        <argsstring>(A1, A2)</argsstring>
        <name>MakeResultVoid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="181" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a89033ea870fe831b13899ce36666e102" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref></type>
        <definition>typedef IgnoredValue testing::internal::Function&lt; R(A1, A2)&gt;::MakeResultIgnoredValue(A1, A2)</definition>
        <argsstring>(A1, A2)</argsstring>
        <name>MakeResultIgnoredValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="182" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="668">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="667">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="668" relation="public-inheritance">
        </childnode>
      </node>
      <node id="669">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
      <node id="673">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4"/>
        <childnode refid="672" relation="public-inheritance">
        </childnode>
      </node>
      <node id="671">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="670" relation="public-inheritance">
        </childnode>
      </node>
      <node id="676">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6dfab3ccde80824a59fc4efd5336a27c1"/>
        <childnode refid="675" relation="public-inheritance">
        </childnode>
      </node>
      <node id="674">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4"/>
        <childnode refid="673" relation="public-inheritance">
        </childnode>
      </node>
      <node id="672">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="677">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6f6ff91550f0557b7708e490e5002cd35"/>
        <childnode refid="676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="670">
        <label>testing::internal::Function&lt; R(A1, A2, A3)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="667" relation="public-inheritance">
        </childnode>
      </node>
      <node id="675">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4"/>
        <childnode refid="674" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="679">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="680" relation="public-inheritance">
        </childnode>
      </node>
      <node id="678">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="679" relation="public-inheritance">
        </childnode>
      </node>
      <node id="680">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="177" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="176" bodyend="183"/>
    <listofallmembers>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4_1aca36c8586218fd015cc4736dc8d4c14f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2)&gt;</scope><name>Argument1</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a025f5192252366d73aa19718bb0ea89d" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2)&gt;</scope><name>Argument2</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1ad07042129ff6370f55a279ad12f5e80f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2)&gt;</scope><name>ArgumentMatcherTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a2de00437877c29ec6cb78396928b8e3e" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2)&gt;</scope><name>ArgumentTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a89033ea870fe831b13899ce36666e102" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2)&gt;</scope><name>MakeResultIgnoredValue</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1ada1ad22fa21c84ec3faea47ed20c1b46" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2)&gt;</scope><name>MakeResultVoid</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4_1a5c228a886ef598ac10988f8de5e32ca1" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2)&gt;</scope><name>Result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
