<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl" kind="class" language="C++" prot="private">
    <compoundname>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</compoundname>
    <basecompoundref refid="classtesting_1_1_matcher_interface" prot="public" virt="non-virtual">testing::MatcherInterface&lt; Super &amp;&gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Super</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a534fb65e97f9b601460eb8b0ad09074e" prot="private" static="no" mutable="no">
        <type>const Super &amp;</type>
        <definition>const Super&amp; testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;::object_</definition>
        <argsstring></argsstring>
        <name>object_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1079" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1079" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a9286bcbdec6e5b497bc7b60cd2983c75" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;::Impl</definition>
        <argsstring>(Super &amp;x)</argsstring>
        <name>Impl</name>
        <param>
          <type>Super &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1058" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1058" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1ab10f996ea80e601e763c624edd6890d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;::MatchAndExplain</definition>
        <argsstring>(Super &amp;x, MatchResultListener *listener) const</argsstring>
        <name>MatchAndExplain</name>
        <param>
          <type>Super &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1062" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1062" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a3ddb19a24bfbb627a9c6194b665cbd19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;::DescribeTo</definition>
        <argsstring>(::std::ostream *os) const</argsstring>
        <name>DescribeTo</name>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1068" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1068" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1aa9ee30325e568c5599dd76f8823bf876" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;::DescribeNegationTo</definition>
        <argsstring>(::std::ostream *os) const</argsstring>
        <name>DescribeNegationTo</name>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1073" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1073" bodyend="1076"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a831ab31b47e451eaa81ad5887db94562" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;::GTEST_DISALLOW_ASSIGN_</definition>
        <argsstring>(Impl)</argsstring>
        <name>GTEST_DISALLOW_ASSIGN_</name>
        <param>
          <type>Impl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1081" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1102">
        <label>testing::MatcherInterface&lt; Super &amp;&gt;</label>
        <link refid="classtesting_1_1_matcher_interface"/>
        <childnode refid="1103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1103">
        <label>testing::MatcherDescriberInterface</label>
        <link refid="classtesting_1_1_matcher_describer_interface"/>
      </node>
      <node id="1101">
        <label>testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;</label>
        <childnode refid="1102" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1105">
        <label>testing::MatcherInterface&lt; Super &amp;&gt;</label>
        <link refid="classtesting_1_1_matcher_interface"/>
        <childnode refid="1106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1106">
        <label>testing::MatcherDescriberInterface</label>
        <link refid="classtesting_1_1_matcher_describer_interface"/>
      </node>
      <node id="1104">
        <label>testing::internal::RefMatcher&lt; T &gt;::Impl&lt; Super &gt;</label>
        <childnode refid="1105" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1056" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1056" bodyend="1082"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1aa9ee30325e568c5599dd76f8823bf876" prot="public" virt="virtual"><scope>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</scope><name>DescribeNegationTo</name></member>
      <member refid="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a3ddb19a24bfbb627a9c6194b665cbd19" prot="public" virt="virtual"><scope>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</scope><name>DescribeTo</name></member>
      <member refid="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a831ab31b47e451eaa81ad5887db94562" prot="private" virt="non-virtual"><scope>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</scope><name>GTEST_DISALLOW_ASSIGN_</name></member>
      <member refid="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a9286bcbdec6e5b497bc7b60cd2983c75" prot="public" virt="non-virtual"><scope>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</scope><name>Impl</name></member>
      <member refid="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1ab10f996ea80e601e763c624edd6890d5" prot="public" virt="virtual"><scope>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</scope><name>MatchAndExplain</name></member>
      <member refid="classtesting_1_1internal_1_1_ref_matcher_3_01_t_01_6_01_4_1_1_impl_1a534fb65e97f9b601460eb8b0ad09074e" prot="private" virt="non-virtual"><scope>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</scope><name>object_</name></member>
      <member refid="classtesting_1_1_matcher_describer_interface_1ae2236a56ad2cc35cad10efc1208854f4" prot="public" virt="virtual"><scope>testing::internal::RefMatcher&lt; T &amp; &gt;::Impl</scope><name>~MatcherDescriberInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
