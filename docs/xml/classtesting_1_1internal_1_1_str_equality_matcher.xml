<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_str_equality_matcher" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::StrEqualityMatcher</compoundname>
    <templateparamlist>
      <param>
        <type>typename StringType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_str_equality_matcher_1af6967de4d57d461f3e7c98bece4d1f48" prot="private" static="no" mutable="no">
        <type>const StringType</type>
        <definition>const StringType testing::internal::StrEqualityMatcher&lt; StringType &gt;::string_</definition>
        <argsstring></argsstring>
        <name>string_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1176" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_str_equality_matcher_1a95f7c07612ee34d8ebd1dc97c707901d" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool testing::internal::StrEqualityMatcher&lt; StringType &gt;::expect_eq_</definition>
        <argsstring></argsstring>
        <name>expect_eq_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1177" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_str_equality_matcher_1adabf80fed2710950dd44b2a08fa5930c" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool testing::internal::StrEqualityMatcher&lt; StringType &gt;::case_sensitive_</definition>
        <argsstring></argsstring>
        <name>case_sensitive_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1178" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_str_equality_matcher_1a613006d82018b18ef8fded721f70f860" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::StrEqualityMatcher&lt; StringType &gt;::StrEqualityMatcher</definition>
        <argsstring>(const StringType &amp;str, bool expect_eq, bool case_sensitive)</argsstring>
        <name>StrEqualityMatcher</name>
        <param>
          <type>const StringType &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expect_eq</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1128" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1128" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_str_equality_matcher_1a72b8373d619e29ce27ed3ecdc6089b0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::StrEqualityMatcher&lt; StringType &gt;::MatchAndExplain</definition>
        <argsstring>(CharType *s, MatchResultListener *listener) const</argsstring>
        <name>MatchAndExplain</name>
        <param>
          <type>CharType *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1138" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1138" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_str_equality_matcher_1aedb1ac6fc8c15b318dfd8e99927aa2e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatcheeStringType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::StrEqualityMatcher&lt; StringType &gt;::MatchAndExplain</definition>
        <argsstring>(const MatcheeStringType &amp;s, MatchResultListener *) const</argsstring>
        <name>MatchAndExplain</name>
        <param>
          <type>const MatcheeStringType &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1150" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1150" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_str_equality_matcher_1a18c05a02da6b1df1c3dbfe4870aaa3c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::StrEqualityMatcher&lt; StringType &gt;::DescribeTo</definition>
        <argsstring>(::std::ostream *os) const</argsstring>
        <name>DescribeTo</name>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1158" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1158" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_str_equality_matcher_1af595c0c79e9e550496fe62bc6bbdd4f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::StrEqualityMatcher&lt; StringType &gt;::DescribeNegationTo</definition>
        <argsstring>(::std::ostream *os) const</argsstring>
        <name>DescribeNegationTo</name>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1162" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1162" bodyend="1164"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_str_equality_matcher_1accddf33055803fee7ff0ef7988204474" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::StrEqualityMatcher&lt; StringType &gt;::DescribeToHelper</definition>
        <argsstring>(bool expect_eq, ::std::ostream *os) const</argsstring>
        <name>DescribeToHelper</name>
        <param>
          <type>bool</type>
          <declname>expect_eq</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1167" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1167" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_str_equality_matcher_1a6d3c1bff5de614e105f93c5d05d49a80" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::StrEqualityMatcher&lt; StringType &gt;::GTEST_DISALLOW_ASSIGN_</definition>
        <argsstring>(StrEqualityMatcher)</argsstring>
        <name>GTEST_DISALLOW_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1_str_equality_matcher" kindref="compound">StrEqualityMatcher</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1180" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="1126" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="1126" bodyend="1181"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1adabf80fed2710950dd44b2a08fa5930c" prot="private" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>case_sensitive_</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1af595c0c79e9e550496fe62bc6bbdd4f3" prot="public" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>DescribeNegationTo</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1a18c05a02da6b1df1c3dbfe4870aaa3c2" prot="public" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>DescribeTo</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1accddf33055803fee7ff0ef7988204474" prot="private" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>DescribeToHelper</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1a95f7c07612ee34d8ebd1dc97c707901d" prot="private" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>expect_eq_</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1a6d3c1bff5de614e105f93c5d05d49a80" prot="private" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>GTEST_DISALLOW_ASSIGN_</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1a72b8373d619e29ce27ed3ecdc6089b0b" prot="public" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>MatchAndExplain</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1aedb1ac6fc8c15b318dfd8e99927aa2e1" prot="public" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>MatchAndExplain</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1a613006d82018b18ef8fded721f70f860" prot="public" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>StrEqualityMatcher</name></member>
      <member refid="classtesting_1_1internal_1_1_str_equality_matcher_1af6967de4d57d461f3e7c98bece4d1f48" prot="private" virt="non-virtual"><scope>testing::internal::StrEqualityMatcher</scope><name>string_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
