<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmock-generated-internal-utils__test_8cc" kind="file" language="C++">
    <compoundname>gmock-generated-internal-utils_test.cc</compoundname>
    <includes refid="gmock-generated-internal-utils_8h" local="yes">gmock/internal/gmock-generated-internal-utils.h</includes>
    <includes refid="gmock-internal-utils_8h" local="yes">gmock/internal/gmock-internal-utils.h</includes>
    <includes refid="gtest_8h" local="yes">gtest/gtest.h</includes>
    <includedby refid="gmock__all__test_8cc" local="yes">vendor/googletest/googlemock/test/gmock_all_test.cc</includedby>
    <incdepgraph>
      <node id="1880">
        <label>sys/stat.h</label>
      </node>
      <node id="1906">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="1874" relation="include">
        </childnode>
      </node>
      <node id="1900">
        <label>iomanip</label>
      </node>
      <node id="1897">
        <label>limits</label>
      </node>
      <node id="1886">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="1870">
        <label>assert.h</label>
      </node>
      <node id="1911">
        <label>iterator</label>
      </node>
      <node id="1899">
        <label>float.h</label>
      </node>
      <node id="1894">
        <label>gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="1877" relation="include">
        </childnode>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1883" relation="include">
        </childnode>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1869" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1915">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="1871">
        <label>stdlib.h</label>
      </node>
      <node id="1904">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="1878" relation="include">
        </childnode>
        <childnode refid="1883" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
      </node>
      <node id="1916">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1883">
        <label>string</label>
      </node>
      <node id="1901">
        <label>map</label>
      </node>
      <node id="1893">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="1914">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
      </node>
      <node id="1876">
        <label>stddef.h</label>
      </node>
      <node id="1919">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="1895">
        <label>ostream</label>
      </node>
      <node id="1887">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="1907">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="1908" relation="include">
        </childnode>
      </node>
      <node id="1879">
        <label>sys/types.h</label>
      </node>
      <node id="1878">
        <label>string.h</label>
      </node>
      <node id="1891">
        <label>typeinfo</label>
      </node>
      <node id="1869">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="1870" relation="include">
        </childnode>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1872" relation="include">
        </childnode>
        <childnode refid="1873" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1893" relation="include">
        </childnode>
      </node>
      <node id="1888">
        <label>unistd.h</label>
      </node>
      <node id="1885">
        <label>vector</label>
      </node>
      <node id="1867">
        <label>vendor/googletest/googlemock/test/gmock-generated-internal-utils_test.cc</label>
        <link refid="gmock-generated-internal-utils__test_8cc"/>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1894" relation="include">
        </childnode>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1913">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="1903">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
      </node>
      <node id="1884">
        <label>utility</label>
      </node>
      <node id="1882">
        <label>sstream</label>
      </node>
      <node id="1873">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1870" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
      </node>
      <node id="1917">
        <label>iosfwd</label>
      </node>
      <node id="1905">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1872">
        <label>iostream</label>
      </node>
      <node id="1896">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1919" relation="include">
        </childnode>
      </node>
      <node id="1892">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="1884" relation="include">
        </childnode>
      </node>
      <node id="1889">
        <label>strings.h</label>
      </node>
      <node id="1875">
        <label>ctype.h</label>
      </node>
      <node id="1918">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1874">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="1875" relation="include">
        </childnode>
        <childnode refid="1876" relation="include">
        </childnode>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1877" relation="include">
        </childnode>
        <childnode refid="1878" relation="include">
        </childnode>
        <childnode refid="1879" relation="include">
        </childnode>
        <childnode refid="1880" relation="include">
        </childnode>
        <childnode refid="1881" relation="include">
        </childnode>
        <childnode refid="1872" relation="include">
        </childnode>
        <childnode refid="1882" relation="include">
        </childnode>
        <childnode refid="1883" relation="include">
        </childnode>
        <childnode refid="1884" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1886" relation="include">
        </childnode>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1889" relation="include">
        </childnode>
        <childnode refid="1890" relation="include">
        </childnode>
        <childnode refid="1891" relation="include">
        </childnode>
        <childnode refid="1892" relation="include">
        </childnode>
      </node>
      <node id="1898">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1875" relation="include">
        </childnode>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1878" relation="include">
        </childnode>
        <childnode refid="1900" relation="include">
        </childnode>
        <childnode refid="1897" relation="include">
        </childnode>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1883" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1910">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="1875" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1884" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1873" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1868">
        <label>gmock/internal/gmock-generated-internal-utils.h</label>
        <link refid="gmock-generated-internal-utils_8h_source"/>
        <childnode refid="1869" relation="include">
        </childnode>
      </node>
      <node id="1902">
        <label>set</label>
      </node>
      <node id="1909">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1884" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
      </node>
      <node id="1881">
        <label>algorithm</label>
      </node>
      <node id="1890">
        <label>regex.h</label>
      </node>
      <node id="1877">
        <label>stdio.h</label>
      </node>
      <node id="1908">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1877" relation="include">
        </childnode>
      </node>
      <node id="1912">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="1895" relation="include">
        </childnode>
        <childnode refid="1882" relation="include">
        </childnode>
        <childnode refid="1883" relation="include">
        </childnode>
        <childnode refid="1884" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Mock<sp/>-<sp/>a<sp/>framework<sp/>for<sp/>writing<sp/>C++<sp/>mock<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>tests<sp/>the<sp/>internal<sp/>utilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-generated-internal-utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-internal-utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">using<sp/>::testing::tuple;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">using<sp/>::testing::Matcher;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">using<sp/>::testing::internal::CompileAssertTypesEqual;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">using<sp/>::testing::internal::MatcherTuple;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">using<sp/>::testing::internal::Function;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">using<sp/>::testing::internal::IgnoredValue;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>MatcherTuple<sp/>template<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">TEST(MatcherTupleTest,<sp/>ForSize0)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;&gt;,<sp/>MatcherTuple&lt;tuple&lt;&gt;<sp/>&gt;::type&gt;();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">TEST(MatcherTupleTest,<sp/>ForSize1)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;Matcher&lt;int&gt;<sp/>&gt;,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatcherTuple&lt;tuple&lt;int&gt;<sp/>&gt;::type&gt;();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">TEST(MatcherTupleTest,<sp/>ForSize2)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;Matcher&lt;int&gt;,<sp/>Matcher&lt;char&gt;<sp/>&gt;,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatcherTuple&lt;tuple&lt;int,<sp/>char&gt;<sp/>&gt;::type&gt;();</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">TEST(MatcherTupleTest,<sp/>ForSize5)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;Matcher&lt;int&gt;,<sp/>Matcher&lt;char&gt;,<sp/>Matcher&lt;bool&gt;,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matcher&lt;double&gt;,<sp/>Matcher&lt;char*&gt;<sp/>&gt;,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatcherTuple&lt;tuple&lt;int,<sp/>char,<sp/>bool,<sp/>double,<sp/>char*&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type&gt;();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>Function<sp/>template<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">TEST(FunctionTest,<sp/>Nullary)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Function&lt;int()&gt;<sp/>F;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;int,<sp/>F::Result&gt;();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;&gt;,<sp/>F::ArgumentTuple&gt;();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;&gt;,<sp/>F::ArgumentMatcherTuple&gt;();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;void(),<sp/>F::MakeResultVoid&gt;();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;IgnoredValue(),<sp/>F::MakeResultIgnoredValue&gt;();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">TEST(FunctionTest,<sp/>Unary)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Function&lt;int(bool)&gt;<sp/>F;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;int,<sp/>F::Result&gt;();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;bool,<sp/>F::Argument1&gt;();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;bool&gt;,<sp/>F::ArgumentTuple&gt;();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;Matcher&lt;bool&gt;<sp/>&gt;,<sp/>F::ArgumentMatcherTuple&gt;();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;void(bool),<sp/>F::MakeResultVoid&gt;();<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;IgnoredValue(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>F::MakeResultIgnoredValue&gt;();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">TEST(FunctionTest,<sp/>Binary)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Function&lt;int(bool,<sp/>const<sp/>long&amp;)&gt;<sp/>F;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;int,<sp/>F::Result&gt;();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;bool,<sp/>F::Argument1&gt;();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;const<sp/>long&amp;,<sp/>F::Argument2&gt;();<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;bool,<sp/>const<sp/>long&amp;&gt;,<sp/>F::ArgumentTuple&gt;();<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;Matcher&lt;bool&gt;,<sp/>Matcher&lt;const<sp/>long&amp;&gt;<sp/>&gt;,<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F::ArgumentMatcherTuple&gt;();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;void(bool,<sp/>const<sp/>long&amp;),<sp/>F::MakeResultVoid&gt;();<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;IgnoredValue(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;),<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>F::MakeResultIgnoredValue&gt;();</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">TEST(FunctionTest,<sp/>LongArgumentList)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Function&lt;char(bool,<sp/>int,<sp/>char*,<sp/>int&amp;,<sp/>const<sp/>long&amp;)&gt;<sp/>F;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;char,<sp/>F::Result&gt;();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;bool,<sp/>F::Argument1&gt;();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;int,<sp/>F::Argument2&gt;();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;char*,<sp/>F::Argument3&gt;();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;int&amp;,<sp/>F::Argument4&gt;();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;const<sp/>long&amp;,<sp/>F::Argument5&gt;();<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;bool,<sp/>int,<sp/>char*,<sp/>int&amp;,<sp/>const<sp/>long&amp;&gt;,<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F::ArgumentTuple&gt;();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;tuple&lt;Matcher&lt;bool&gt;,<sp/>Matcher&lt;int&gt;,<sp/>Matcher&lt;char*&gt;,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matcher&lt;int&amp;&gt;,<sp/>Matcher&lt;const<sp/>long&amp;&gt;<sp/>&gt;,<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F::ArgumentMatcherTuple&gt;();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;void(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;),<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F::MakeResultVoid&gt;();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>CompileAssertTypesEqual&lt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IgnoredValue(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;),<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>F::MakeResultIgnoredValue&gt;();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>Unnamed<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googlemock/test/gmock-generated-internal-utils_test.cc"/>
  </compounddef>
</doxygen>
