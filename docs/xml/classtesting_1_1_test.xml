<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1_test" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>testing::Test</compoundname>
    <derivedcompoundref refid="classbar_1_1_mixed_up_test_case_test" prot="public" virt="non-virtual">bar::MixedUpTestCaseTest</derivedcompoundref>
    <derivedcompoundref refid="classbar_1_1_mixed_up_test_case_with_same_test_name_test" prot="public" virt="non-virtual">bar::MixedUpTestCaseWithSameTestNameTest</derivedcompoundref>
    <derivedcompoundref refid="class_common_test" prot="public" virt="non-virtual">CommonTest&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_expect_failure_test" prot="public" virt="non-virtual">ExpectFailureTest</derivedcompoundref>
    <derivedcompoundref refid="class_fatal_failure_in_fixture_constructor_test" prot="public" virt="non-virtual">FatalFailureInFixtureConstructorTest</derivedcompoundref>
    <derivedcompoundref refid="class_fatal_failure_in_set_up_test" prot="public" virt="non-virtual">FatalFailureInSetUpTest</derivedcompoundref>
    <derivedcompoundref refid="classfoo_1_1_mixed_up_test_case_test" prot="public" virt="non-virtual">foo::MixedUpTestCaseTest</derivedcompoundref>
    <derivedcompoundref refid="classfoo_1_1_mixed_up_test_case_with_same_test_name_test" prot="public" virt="non-virtual">foo::MixedUpTestCaseWithSameTestNameTest</derivedcompoundref>
    <derivedcompoundref refid="class_foo_test" prot="public" virt="non-virtual">FooTest</derivedcompoundref>
    <derivedcompoundref refid="class_foo_test" prot="public" virt="non-virtual">FooTest</derivedcompoundref>
    <derivedcompoundref refid="class_g_mock_output_test" prot="public" virt="non-virtual">GMockOutputTest</derivedcompoundref>
    <derivedcompoundref refid="class_non_fatal_failure_in_fixture_constructor_test" prot="public" virt="non-virtual">NonFatalFailureInFixtureConstructorTest</derivedcompoundref>
    <derivedcompoundref refid="class_non_fatal_failure_in_set_up_test" prot="public" virt="non-virtual">NonFatalFailureInSetUpTest</derivedcompoundref>
    <derivedcompoundref refid="class_object_tracker_test" prot="public" virt="non-virtual">ObjectTrackerTest</derivedcompoundref>
    <derivedcompoundref refid="class_predicate1_test" prot="public" virt="non-virtual">Predicate1Test</derivedcompoundref>
    <derivedcompoundref refid="class_predicate2_test" prot="public" virt="non-virtual">Predicate2Test</derivedcompoundref>
    <derivedcompoundref refid="class_predicate3_test" prot="public" virt="non-virtual">Predicate3Test</derivedcompoundref>
    <derivedcompoundref refid="class_predicate4_test" prot="public" virt="non-virtual">Predicate4Test</derivedcompoundref>
    <derivedcompoundref refid="class_predicate5_test" prot="public" virt="non-virtual">Predicate5Test</derivedcompoundref>
    <derivedcompoundref refid="class_prime_table_test" prot="public" virt="non-virtual">PrimeTableTest&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_property_one" prot="public" virt="non-virtual">PropertyOne</derivedcompoundref>
    <derivedcompoundref refid="class_property_two" prot="public" virt="non-virtual">PropertyTwo</derivedcompoundref>
    <derivedcompoundref refid="class_protected_fixture_methods_test" prot="public" virt="non-virtual">ProtectedFixtureMethodsTest</derivedcompoundref>
    <derivedcompoundref refid="class_queue_test" prot="public" virt="non-virtual">QueueTest</derivedcompoundref>
    <derivedcompoundref refid="class_quick_test" prot="public" virt="non-virtual">QuickTest</derivedcompoundref>
    <derivedcompoundref refid="class_t_e_s_t__before___t_e_s_t___f__in__same__test__case" prot="public" virt="non-virtual">TEST_before_TEST_F_in_same_test_case</derivedcompoundref>
    <derivedcompoundref refid="class_t_e_s_t___f__before___t_e_s_t__in__same__test__case" prot="public" virt="non-virtual">TEST_F_before_TEST_in_same_test_case</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1_code_location_for_t_e_s_t_f" prot="public" virt="non-virtual">testing::CodeLocationForTESTF</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1_code_location_for_t_y_p_e_d_t_e_s_t" prot="public" virt="non-virtual">testing::CodeLocationForTYPEDTEST&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1_code_location_for_t_y_p_e_d_t_e_s_t_p" prot="public" virt="non-virtual">testing::CodeLocationForTYPEDTESTP&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1_current_test_info_test" prot="public" virt="non-virtual">testing::CurrentTestInfoTest</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_function_mocker_test" prot="public" virt="non-virtual">testing::gmock_generated_function_mockers_test::FunctionMockerTest</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__matchers__test_1_1_backtracking_b_p_m_test" prot="public" virt="non-virtual">testing::gmock_matchers_test::BacktrackingBPMTest</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__matchers__test_1_1_floating_point_test" prot="public" virt="non-virtual">testing::gmock_matchers_test::FloatingPointTest&lt; RawType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__matchers__test_1_1_unordered_elements_are_test" prot="public" virt="non-virtual">testing::gmock_matchers_test::UnorderedElementsAreTest</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1_init_google_test_test" prot="public" virt="non-virtual">testing::InitGoogleTestTest</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_listener_test" prot="public" virt="non-virtual">testing::internal::ListenerTest</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_unit_test_record_property_test_helper" prot="public" virt="non-virtual">testing::internal::UnitTestRecordPropertyTestHelper</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1_set_up_test_case_test" prot="public" virt="non-virtual">testing::SetUpTestCaseTest</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1_test_info_test" prot="public" virt="non-virtual">testing::TestInfoTest</derivedcompoundref>
    <derivedcompoundref refid="class_typed_test" prot="public" virt="non-virtual">TypedTest&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_type_param_test" prot="public" virt="non-virtual">TypeParamTest&lt; T &gt;</derivedcompoundref>
    <innerclass refid="structtesting_1_1_test_1_1_setup__should__be__spelled___set_up" prot="private">testing::Test::Setup_should_be_spelled_SetUp</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtesting_1_1_test_1a5f2a051d1d99c9b784c666c586186cf9" prot="public" static="no">
        <type>internal::SetUpTestCaseFunc</type>
        <definition>typedef internal::SetUpTestCaseFunc testing::Test::SetUpTestCaseFunc</definition>
        <argsstring></argsstring>
        <name>SetUpTestCaseFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="377" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtesting_1_1_test_1aa0f532e93b9f3500144c53f31466976c" prot="public" static="no">
        <type>internal::TearDownTestCaseFunc</type>
        <definition>typedef internal::TearDownTestCaseFunc testing::Test::TearDownTestCaseFunc</definition>
        <argsstring></argsstring>
        <name>TearDownTestCaseFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="378" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1_test_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestInfo</definition>
        <argsstring></argsstring>
        <name>TestInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="373" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1_test_1a132c542f6932107234988d05a9980e49" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtesting_1_1internal_1_1scoped__ptr" kindref="compound">internal::scoped_ptr</ref>&lt; GTEST_FLAG_SAVER_ &gt;</type>
        <definition>const internal::scoped_ptr&lt; GTEST_FLAG_SAVER_ &gt; testing::Test::gtest_flag_saver_</definition>
        <argsstring></argsstring>
        <name>gtest_flag_saver_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="455" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_test_1a2b0a62f1e667bbe8d8cb18d785bfa991" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Test::~Test</definition>
        <argsstring>()</argsstring>
        <name>~Test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="381" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2221" bodyend="2222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1_test_1a5ccbac42fee8c5b00b0bfe89b6c49d79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::Test::SetUpTestCase</definition>
        <argsstring>()</argsstring>
        <name>SetUpTestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="389" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="389" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1af374706cbaf0ffc460f4fd04e7c150f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::Test::TearDownTestCase</definition>
        <argsstring>()</argsstring>
        <name>TearDownTestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="397" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="397" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a5e83604628ef542af888d631566ff60c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Test::HasFatalFailure</definition>
        <argsstring>()</argsstring>
        <name>HasFatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="400" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2487" bodyend="2489"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a8c00e8cc6fe10616b480bd54d2a426cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Test::HasNonfatalFailure</definition>
        <argsstring>()</argsstring>
        <name>HasNonfatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="403" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2492" bodyend="2495"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a7a00be7dd0a6bfdc8d47a1b784623613" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::Test::HasFailure</definition>
        <argsstring>()</argsstring>
        <name>HasFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="407" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="407" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a1559ce1c83f56993b582650c091535a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::RecordProperty</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>RecordProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="422" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2237" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a373da47b491b1e64e355d22d6ec99b5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::RecordProperty</definition>
        <argsstring>(const std::string &amp;key, int value)</argsstring>
        <name>RecordProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="423" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2242" bodyend="2246"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtesting_1_1_test_1a99f2bbfac6c95612322b0f10e607ebe5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::Test</definition>
        <argsstring>()</argsstring>
        <name>Test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="427" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2214" bodyend="2216"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a190315150c303ddf801313fd1a777733" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Test::SetUp</definition>
        <argsstring>()</argsstring>
        <name>SetUp</name>
        <reimplementedby refid="class_property_two_1aa3ab39cf4e6c751cb0788c575bf92ca2">SetUp</reimplementedby>
        <reimplementedby refid="class_property_one_1a9cb7d7cb508d5f1a6fc7cfead81ebc2b">SetUp</reimplementedby>
        <reimplementedby refid="class_object_tracker_test_1a76621de2cb5ac158a52242e84c2ff604">SetUp</reimplementedby>
        <reimplementedby refid="class_quick_test_1ae52ad082887512b92240ce40a1a05650">SetUp</reimplementedby>
        <reimplementedby refid="class_common_test_1a4c7bf7889ce48a9d06530bc4a437f3f5">SetUp</reimplementedby>
        <reimplementedby refid="class_queue_test_1a91e69958f086239a523864d6b94ab174">SetUp</reimplementedby>
        <reimplementedby refid="class_predicate1_test_1a481704a09f73a37158513f9a336dbdd9">SetUp</reimplementedby>
        <reimplementedby refid="class_queue_test_1a91e69958f086239a523864d6b94ab174">SetUp</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_listener_test_1ace3dbe36b705ddf320518e6cdd919bc8">SetUp</reimplementedby>
        <reimplementedby refid="class_non_fatal_failure_in_fixture_constructor_test_1a7d951f8fbf7b2ac5046be8d8ee7b03d3">SetUp</reimplementedby>
        <reimplementedby refid="class_fatal_failure_in_fixture_constructor_test_1a006d3ac0e7a4ad3c469c3b41dc7c42c3">SetUp</reimplementedby>
        <reimplementedby refid="class_non_fatal_failure_in_set_up_test_1ae24c724bae1fcd2601f58fa9c26adca3">SetUp</reimplementedby>
        <reimplementedby refid="class_fatal_failure_in_set_up_test_1a455696f86fb5f5393624221ccb79b373">SetUp</reimplementedby>
        <reimplementedby refid="class_predicate2_test_1a9778563daf4846327d32061c1a8ccba0">SetUp</reimplementedby>
        <reimplementedby refid="class_predicate3_test_1a92aad9566e0737b6739d1db14e7912be">SetUp</reimplementedby>
        <reimplementedby refid="class_predicate4_test_1afcf9db5dc68e97291813cdfeb2aaa5d2">SetUp</reimplementedby>
        <reimplementedby refid="class_predicate5_test_1a42bf622b4f2134d0497cd42fd2e3e1df">SetUp</reimplementedby>
        <reimplementedby refid="classtesting_1_1_set_up_test_case_test_1a4b44551ccf73e66de7ec95b2ab3b2085">SetUp</reimplementedby>
        <reimplementedby refid="classtesting_1_1_init_google_test_test_1a49de9e552ea788c4b79924ec4135ca7a">SetUp</reimplementedby>
        <reimplementedby refid="class_protected_fixture_methods_test_1a5184c708ac89cfb69f0e4c742e93398a">SetUp</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="430" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2227" bodyend="2228"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a5f0ab439802cbe0ef7552f1a9f791923" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Test::TearDown</definition>
        <argsstring>()</argsstring>
        <name>TearDown</name>
        <reimplementedby refid="class_property_two_1aa4ffb2b9dddeba69f0f9baf133f06ef2">TearDown</reimplementedby>
        <reimplementedby refid="class_property_one_1a3ed895113848403d5ea27f52a1bb0545">TearDown</reimplementedby>
        <reimplementedby refid="class_object_tracker_test_1ac0d78dc8d4552910a2e4795497728977">TearDown</reimplementedby>
        <reimplementedby refid="class_quick_test_1a6b2d16cc0c69d30a16fe612db5abfc39">TearDown</reimplementedby>
        <reimplementedby refid="class_common_test_1aeae195c2cefa956c6ae5be1226e6ecd8">TearDown</reimplementedby>
        <reimplementedby refid="class_predicate1_test_1ad2974af5c6abc508847c3a9912b24a90">TearDown</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_listener_test_1ad112535025d668e3ea14e71d8741c810">TearDown</reimplementedby>
        <reimplementedby refid="class_non_fatal_failure_in_fixture_constructor_test_1ab76d79c346d9a378d625fde5739e8ad6">TearDown</reimplementedby>
        <reimplementedby refid="class_fatal_failure_in_fixture_constructor_test_1a2763026a557e1fce4e59bd16c4eced57">TearDown</reimplementedby>
        <reimplementedby refid="class_non_fatal_failure_in_set_up_test_1a36abc808b11afc6a9bfa20dac5c28c30">TearDown</reimplementedby>
        <reimplementedby refid="class_fatal_failure_in_set_up_test_1a457707161063e08f7b6600ec5db449e4">TearDown</reimplementedby>
        <reimplementedby refid="class_predicate2_test_1a7379f8f7772af6b4c76edcc90b6aaaeb">TearDown</reimplementedby>
        <reimplementedby refid="class_predicate3_test_1aa4dc395bded849b6e5175566d791aba7">TearDown</reimplementedby>
        <reimplementedby refid="class_predicate4_test_1ab61983a4cdf3657b02bc2b81b67729c4">TearDown</reimplementedby>
        <reimplementedby refid="class_predicate5_test_1ab7bc4521d96174d5ef96156edc15444d">TearDown</reimplementedby>
        <reimplementedby refid="class_protected_fixture_methods_test_1aa143dff0a99903cde207b6fd0042c03c">TearDown</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="433" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2233" bodyend="2234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtesting_1_1_test_1ab76536a462529a457429061e209a8ee7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Test::HasSameFixtureClass</definition>
        <argsstring>()</argsstring>
        <name>HasSameFixtureClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="438" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2269" bodyend="2328"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1_test_1a146a4a5d9854e676d625a0ef67409794" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void testing::Test::TestBody</definition>
        <argsstring>()=0</argsstring>
        <name>TestBody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="446" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1ab70d07cb03d17ccb1aedc2be66eaccff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::Run</definition>
        <argsstring>()</argsstring>
        <name>Run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="449" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2465" bodyend="2484"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a3116f1f98ac889b11f1e3d981b8c6ca1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::Test::DeleteSelf_</definition>
        <argsstring>()</argsstring>
        <name>DeleteSelf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="453" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="453" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a65c1626d50b7dd1a1d759dc6c3f72d4c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Setup_should_be_spelled_SetUp *</type>
        <definition>virtual Setup_should_be_spelled_SetUp* testing::Test::Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="474" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="474" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_1a5d18da7437b0d6ca32dcad90a21f9b6b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::Test::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(Test)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1_test" kindref="compound">Test</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="477" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2059">
        <label>CommonTest&lt; T &gt;</label>
        <link refid="class_common_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2073">
        <label>Predicate4Test</label>
        <link refid="class_predicate4_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2095">
        <label>testing::internal::UnitTestRecordPropertyTestHelper</label>
        <link refid="classtesting_1_1internal_1_1_unit_test_record_property_test_helper"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2072">
        <label>Predicate3Test</label>
        <link refid="class_predicate3_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2099">
        <label>TypeParamTest&lt; T &gt;</label>
        <link refid="class_type_param_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2078">
        <label>ProtectedFixtureMethodsTest</label>
        <link refid="class_protected_fixture_methods_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2074">
        <label>Predicate5Test</label>
        <link refid="class_predicate5_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2063">
        <label>foo::MixedUpTestCaseTest</label>
        <link refid="classfoo_1_1_mixed_up_test_case_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2056">
        <label>testing::Test</label>
        <link refid="classtesting_1_1_test"/>
      </node>
      <node id="2076">
        <label>PropertyOne</label>
        <link refid="class_property_one"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2085">
        <label>testing::CodeLocationForTYPEDTEST&lt; T &gt;</label>
        <link refid="classtesting_1_1_code_location_for_t_y_p_e_d_t_e_s_t"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2065">
        <label>FooTest</label>
        <link refid="class_foo_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2064">
        <label>foo::MixedUpTestCaseWithSameTestNameTest</label>
        <link refid="classfoo_1_1_mixed_up_test_case_with_same_test_name_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2069">
        <label>ObjectTrackerTest</label>
        <link refid="class_object_tracker_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2088">
        <label>testing::gmock_generated_function_mockers_test::FunctionMockerTest</label>
        <link refid="classtesting_1_1gmock__generated__function__mockers__test_1_1_function_mocker_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2067">
        <label>NonFatalFailureInFixtureConstructorTest</label>
        <link refid="class_non_fatal_failure_in_fixture_constructor_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2090">
        <label>testing::gmock_matchers_test::FloatingPointTest&lt; RawType &gt;</label>
        <link refid="classtesting_1_1gmock__matchers__test_1_1_floating_point_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2094">
        <label>testing::internal::ListenerTest</label>
        <link refid="classtesting_1_1internal_1_1_listener_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2075">
        <label>PrimeTableTest&lt; T &gt;</label>
        <link refid="class_prime_table_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2096">
        <label>testing::SetUpTestCaseTest</label>
        <link refid="classtesting_1_1_set_up_test_case_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2091">
        <label>testing::gmock_matchers_test::FloatingPointNearTest&lt; RawType &gt;</label>
        <link refid="classtesting_1_1gmock__matchers__test_1_1_floating_point_near_test"/>
        <childnode refid="2090" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2082">
        <label>TEST_before_TEST_F_in_same_test_case</label>
        <link refid="class_t_e_s_t__before___t_e_s_t___f__in__same__test__case"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2060">
        <label>ExpectFailureTest</label>
        <link refid="class_expect_failure_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2092">
        <label>testing::gmock_matchers_test::UnorderedElementsAreTest</label>
        <link refid="classtesting_1_1gmock__matchers__test_1_1_unordered_elements_are_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2087">
        <label>testing::CurrentTestInfoTest</label>
        <link refid="classtesting_1_1_current_test_info_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2057">
        <label>bar::MixedUpTestCaseTest</label>
        <link refid="classbar_1_1_mixed_up_test_case_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2089">
        <label>testing::gmock_matchers_test::BacktrackingBPMTest</label>
        <link refid="classtesting_1_1gmock__matchers__test_1_1_backtracking_b_p_m_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2071">
        <label>Predicate2Test</label>
        <link refid="class_predicate2_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2097">
        <label>testing::TestInfoTest</label>
        <link refid="classtesting_1_1_test_info_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2093">
        <label>testing::InitGoogleTestTest</label>
        <link refid="classtesting_1_1_init_google_test_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2070">
        <label>Predicate1Test</label>
        <link refid="class_predicate1_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2062">
        <label>FatalFailureInSetUpTest</label>
        <link refid="class_fatal_failure_in_set_up_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2066">
        <label>GMockOutputTest</label>
        <link refid="class_g_mock_output_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2080">
        <label>QuickTest</label>
        <link refid="class_quick_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2058">
        <label>bar::MixedUpTestCaseWithSameTestNameTest</label>
        <link refid="classbar_1_1_mixed_up_test_case_with_same_test_name_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2086">
        <label>testing::CodeLocationForTYPEDTESTP&lt; T &gt;</label>
        <link refid="classtesting_1_1_code_location_for_t_y_p_e_d_t_e_s_t_p"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2079">
        <label>QueueTest</label>
        <link refid="class_queue_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
        <childnode refid="2080" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2098">
        <label>TypedTest&lt; T &gt;</label>
        <link refid="class_typed_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2077">
        <label>PropertyTwo</label>
        <link refid="class_property_two"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2061">
        <label>FatalFailureInFixtureConstructorTest</label>
        <link refid="class_fatal_failure_in_fixture_constructor_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2068">
        <label>NonFatalFailureInSetUpTest</label>
        <link refid="class_non_fatal_failure_in_set_up_test"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2083">
        <label>TEST_F_before_TEST_in_same_test_case</label>
        <link refid="class_t_e_s_t___f__before___t_e_s_t__in__same__test__case"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2084">
        <label>testing::CodeLocationForTESTF</label>
        <link refid="classtesting_1_1_code_location_for_t_e_s_t_f"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2081">
        <label>IntegerFunctionTest</label>
        <link refid="class_integer_function_test"/>
        <childnode refid="2080" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="371" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="371" bodyend="478"/>
    <listofallmembers>
      <member refid="classtesting_1_1_test_1a3116f1f98ac889b11f1e3d981b8c6ca1" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>DeleteSelf_</name></member>
      <member refid="classtesting_1_1_test_1a5d18da7437b0d6ca32dcad90a21f9b6b" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1_test_1a132c542f6932107234988d05a9980e49" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>gtest_flag_saver_</name></member>
      <member refid="classtesting_1_1_test_1a7a00be7dd0a6bfdc8d47a1b784623613" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>HasFailure</name></member>
      <member refid="classtesting_1_1_test_1a5e83604628ef542af888d631566ff60c" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>HasFatalFailure</name></member>
      <member refid="classtesting_1_1_test_1a8c00e8cc6fe10616b480bd54d2a426cb" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>HasNonfatalFailure</name></member>
      <member refid="classtesting_1_1_test_1ab76536a462529a457429061e209a8ee7" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>HasSameFixtureClass</name></member>
      <member refid="classtesting_1_1_test_1a1559ce1c83f56993b582650c091535a7" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1_test_1a373da47b491b1e64e355d22d6ec99b5b" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1_test_1ab70d07cb03d17ccb1aedc2be66eaccff" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>Run</name></member>
      <member refid="classtesting_1_1_test_1a65c1626d50b7dd1a1d759dc6c3f72d4c" prot="private" virt="virtual"><scope>testing::Test</scope><name>Setup</name></member>
      <member refid="classtesting_1_1_test_1a190315150c303ddf801313fd1a777733" prot="protected" virt="virtual"><scope>testing::Test</scope><name>SetUp</name></member>
      <member refid="classtesting_1_1_test_1a5ccbac42fee8c5b00b0bfe89b6c49d79" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>SetUpTestCase</name></member>
      <member refid="classtesting_1_1_test_1a5f2a051d1d99c9b784c666c586186cf9" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>SetUpTestCaseFunc</name></member>
      <member refid="classtesting_1_1_test_1a5f0ab439802cbe0ef7552f1a9f791923" prot="protected" virt="virtual"><scope>testing::Test</scope><name>TearDown</name></member>
      <member refid="classtesting_1_1_test_1af374706cbaf0ffc460f4fd04e7c150f1" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>TearDownTestCase</name></member>
      <member refid="classtesting_1_1_test_1aa0f532e93b9f3500144c53f31466976c" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>TearDownTestCaseFunc</name></member>
      <member refid="classtesting_1_1_test_1a99f2bbfac6c95612322b0f10e607ebe5" prot="protected" virt="non-virtual"><scope>testing::Test</scope><name>Test</name></member>
      <member refid="classtesting_1_1_test_1a146a4a5d9854e676d625a0ef67409794" prot="private" virt="pure-virtual"><scope>testing::Test</scope><name>TestBody</name></member>
      <member refid="classtesting_1_1_test_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>TestInfo</name></member>
      <member refid="classtesting_1_1_test_1a2b0a62f1e667bbe8d8cb18d785bfa991" prot="public" virt="virtual"><scope>testing::Test</scope><name>~Test</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
