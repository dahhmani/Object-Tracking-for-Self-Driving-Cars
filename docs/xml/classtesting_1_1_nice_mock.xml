<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1_nice_mock" kind="class" language="C++" prot="public">
    <compoundname>testing::NiceMock</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MockClass</basecompoundref>
    <templateparamlist>
      <param>
        <type>class MockClass</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a10bbd6ebe779ac8ab1f9f3ae2dee9310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>()</argsstring>
        <name>NiceMock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="84" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a2d6b9cb9d929d1af4532b69c7ef19df6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="92" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a150837476e88f52772c8f85180b889a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="97" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a0b91bd74b497626bb81d07c3d4b59d22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="103" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a5ffbe1a648f16612266d4e67a2d063d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="109" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a3812c0ba0d743f9a0c3d276dfc076f4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="116" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a156d0fce85ac08abffdf4aa0c3975f81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="124" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a946d75ece1fa3a066b7d9d6ab7828c55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="132" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1ae8792aab6c024a50886856bf1093eedc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7, const A8 &amp;a8)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>const A8 &amp;</type>
          <declname>a8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="141" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a61cfc9282222928590bcdaf851a806c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
          <param>
            <type>typename A9</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7, const A8 &amp;a8, const A9 &amp;a9)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>const A8 &amp;</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>const A9 &amp;</type>
          <declname>a9</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="150" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a4baf1da52f4c892fc02f6ba10c0b8c02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
          <param>
            <type>typename A9</type>
          </param>
          <param>
            <type>typename A10</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7, const A8 &amp;a8, const A9 &amp;a9, const A10 &amp;a10)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>const A8 &amp;</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>const A9 &amp;</type>
          <declname>a9</declname>
        </param>
        <param>
          <type>const A10 &amp;</type>
          <declname>a10</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="159" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1a4aaa6bd3850de6b6baa408010909a25f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual testing::NiceMock&lt; MockClass &gt;::~NiceMock</definition>
        <argsstring>()</argsstring>
        <name>~NiceMock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="166" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="166" bodyend="169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1_nice_mock_1aee46eca734708818a8af94624eb512dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(NiceMock)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="172" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1615">
        <label>testing::NiceMock&lt; MockClass &gt;</label>
        <link refid="classtesting_1_1_nice_mock"/>
        <childnode refid="1616" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1616">
        <label>anonymous:</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1617">
        <label>testing::NiceMock&lt; MockClass &gt;</label>
        <link refid="classtesting_1_1_nice_mock"/>
        <childnode refid="1618" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1618">
        <label>anonymous:</label>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" line="80" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h" bodystart="80" bodyend="173"/>
    <listofallmembers>
      <member refid="classtesting_1_1_nice_mock_1aee46eca734708818a8af94624eb512dd" prot="private" virt="non-virtual"><scope>testing::NiceMock</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1_nice_mock_1a10bbd6ebe779ac8ab1f9f3ae2dee9310" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a2d6b9cb9d929d1af4532b69c7ef19df6" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a150837476e88f52772c8f85180b889a1" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a0b91bd74b497626bb81d07c3d4b59d22" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a5ffbe1a648f16612266d4e67a2d063d1" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a3812c0ba0d743f9a0c3d276dfc076f4c" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a156d0fce85ac08abffdf4aa0c3975f81" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a946d75ece1fa3a066b7d9d6ab7828c55" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1ae8792aab6c024a50886856bf1093eedc" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a61cfc9282222928590bcdaf851a806c6" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a4baf1da52f4c892fc02f6ba10c0b8c02" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="classtesting_1_1_nice_mock_1a4aaa6bd3850de6b6baa408010909a25f" prot="public" virt="virtual"><scope>testing::NiceMock</scope><name>~NiceMock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
