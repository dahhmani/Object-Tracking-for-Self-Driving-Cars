<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structtesting_1_1gmock__matchers__test_1_1_polymorphic_functor" kind="struct" language="C++" prot="public">
    <compoundname>testing::gmock_matchers_test::PolymorphicFunctor</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structtesting_1_1gmock__matchers__test_1_1_polymorphic_functor_1ae2b921ecae158b5eaa11a29ac6fe0cf3" prot="public" static="no">
        <type>int</type>
        <definition>typedef int testing::gmock_matchers_test::PolymorphicFunctor::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="3927" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="3927" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtesting_1_1gmock__matchers__test_1_1_polymorphic_functor_1a2fb8b012acd2ccd52788231036877c98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_matchers_test::PolymorphicFunctor::operator()</definition>
        <argsstring>(int n)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="3928" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="3928" bodyend="3928"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1gmock__matchers__test_1_1_polymorphic_functor_1aee4d200c7f85ce4d8048d1798a511002" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_matchers_test::PolymorphicFunctor::operator()</definition>
        <argsstring>(const char *s)</argsstring>
        <name>operator()</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="3929" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="3929" bodyend="3929"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/test/gmock-matchers_test.cc" line="3926" column="1" bodyfile="vendor/googletest/googlemock/test/gmock-matchers_test.cc" bodystart="3926" bodyend="3930"/>
    <listofallmembers>
      <member refid="structtesting_1_1gmock__matchers__test_1_1_polymorphic_functor_1a2fb8b012acd2ccd52788231036877c98" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::PolymorphicFunctor</scope><name>operator()</name></member>
      <member refid="structtesting_1_1gmock__matchers__test_1_1_polymorphic_functor_1aee4d200c7f85ce4d8048d1798a511002" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::PolymorphicFunctor</scope><name>operator()</name></member>
      <member refid="structtesting_1_1gmock__matchers__test_1_1_polymorphic_functor_1ae2b921ecae158b5eaa11a29ac6fe0cf3" prot="public" virt="non-virtual"><scope>testing::gmock_matchers_test::PolymorphicFunctor</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
