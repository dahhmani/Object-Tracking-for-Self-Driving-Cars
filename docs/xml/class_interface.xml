<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_interface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Interface</compoundname>
    <derivedcompoundref refid="class_mock" prot="public" virt="non-virtual">Mock</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_interface_1a67eca71a4ef8d28dc959dd495e2b2b59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Interface::~Interface</definition>
        <argsstring>()</argsstring>
        <name>~Interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="193" column="1" bodyfile="vendor/googletest/googlemock/test/gmock_link_test.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1a65d6ae604e7e9a513aec72c9c94e0b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Interface::VoidFromString</definition>
        <argsstring>(char *str)=0</argsstring>
        <name>VoidFromString</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1a756b1d22c12aa3f14a5083f90043fbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>char *</type>
        <definition>virtual char* Interface::StringFromString</definition>
        <argsstring>(char *str)=0</argsstring>
        <name>StringFromString</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1ab34c8a5fd2236a6b009f86a4e5851b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Interface::IntFromString</definition>
        <argsstring>(char *str)=0</argsstring>
        <name>IntFromString</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1ab93276de67e60c44fd775d4c139aa8e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int &amp;</type>
        <definition>virtual int&amp; Interface::IntRefFromString</definition>
        <argsstring>(char *str)=0</argsstring>
        <name>IntRefFromString</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1a7dab3c82b857a9a5f52b3ce6f7df547f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Interface::VoidFromFunc</definition>
        <argsstring>(void(*func)(char *str))=0</argsstring>
        <name>VoidFromFunc</name>
        <param>
          <type>void(*)(char *str)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1aa43fb56650a57b6b3e7743e54e50cb86" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Interface::VoidFromIntRef</definition>
        <argsstring>(int &amp;n)=0</argsstring>
        <name>VoidFromIntRef</name>
        <param>
          <type>int &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1ae2b3e9411c893a45642d3af632752c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Interface::VoidFromFloat</definition>
        <argsstring>(float n)=0</argsstring>
        <name>VoidFromFloat</name>
        <param>
          <type>float</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1aa56524017aabdbe46510648c711ab8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Interface::VoidFromDouble</definition>
        <argsstring>(double n)=0</argsstring>
        <name>VoidFromDouble</name>
        <param>
          <type>double</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_interface_1ae84fe7e53f881db2f823ad35d004927a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Interface::VoidFromVector</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;v)=0</argsstring>
        <name>VoidFromVector</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="202" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1198">
        <label>Mock</label>
        <link refid="class_mock"/>
        <childnode refid="1197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1197">
        <label>Interface</label>
        <link refid="class_interface"/>
      </node>
    </inheritancegraph>
    <location file="vendor/googletest/googlemock/test/gmock_link_test.h" line="191" column="1" bodyfile="vendor/googletest/googlemock/test/gmock_link_test.h" bodystart="191" bodyend="203"/>
    <listofallmembers>
      <member refid="class_interface_1ab34c8a5fd2236a6b009f86a4e5851b61" prot="public" virt="pure-virtual"><scope>Interface</scope><name>IntFromString</name></member>
      <member refid="class_interface_1ab93276de67e60c44fd775d4c139aa8e1" prot="public" virt="pure-virtual"><scope>Interface</scope><name>IntRefFromString</name></member>
      <member refid="class_interface_1a756b1d22c12aa3f14a5083f90043fbf0" prot="public" virt="pure-virtual"><scope>Interface</scope><name>StringFromString</name></member>
      <member refid="class_interface_1aa56524017aabdbe46510648c711ab8a8" prot="public" virt="pure-virtual"><scope>Interface</scope><name>VoidFromDouble</name></member>
      <member refid="class_interface_1ae2b3e9411c893a45642d3af632752c66" prot="public" virt="pure-virtual"><scope>Interface</scope><name>VoidFromFloat</name></member>
      <member refid="class_interface_1a7dab3c82b857a9a5f52b3ce6f7df547f" prot="public" virt="pure-virtual"><scope>Interface</scope><name>VoidFromFunc</name></member>
      <member refid="class_interface_1aa43fb56650a57b6b3e7743e54e50cb86" prot="public" virt="pure-virtual"><scope>Interface</scope><name>VoidFromIntRef</name></member>
      <member refid="class_interface_1a65d6ae604e7e9a513aec72c9c94e0b97" prot="public" virt="pure-virtual"><scope>Interface</scope><name>VoidFromString</name></member>
      <member refid="class_interface_1ae84fe7e53f881db2f823ad35d004927a" prot="public" virt="pure-virtual"><scope>Interface</scope><name>VoidFromVector</name></member>
      <member refid="class_interface_1a67eca71a4ef8d28dc959dd495e2b2b59" prot="public" virt="virtual"><scope>Interface</scope><name>~Interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
