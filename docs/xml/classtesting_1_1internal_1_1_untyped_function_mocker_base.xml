<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_untyped_function_mocker_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>testing::internal::UntypedFunctionMockerBase</compoundname>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R() &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R()&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; F &gt;</derivedcompoundref>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a29cc87ed60ad0218432aa777abba7dbb" prot="protected" static="no">
        <type>std::vector&lt; const void * &gt;</type>
        <definition>typedef std::vector&lt;const void*&gt; testing::internal::UntypedFunctionMockerBase::UntypedOnCallSpecs</definition>
        <argsstring></argsstring>
        <name>UntypedOnCallSpecs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="219" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a36480bd395e110b4eae5b0d0402de966" prot="protected" static="no">
        <type>std::vector&lt; <ref refid="classtesting_1_1internal_1_1linked__ptr" kindref="compound">internal::linked_ptr</ref>&lt; <ref refid="classtesting_1_1internal_1_1_expectation_base" kindref="compound">ExpectationBase</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;internal::linked_ptr&lt;ExpectationBase&gt; &gt; testing::internal::UntypedFunctionMockerBase::UntypedExpectations</definition>
        <argsstring></argsstring>
        <name>UntypedExpectations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="222" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1adf35c589969bb985668616031cb9ed56" prot="protected" static="no" mutable="no">
        <type>const void *</type>
        <definition>const void* testing::internal::UntypedFunctionMockerBase::mock_obj_</definition>
        <argsstring></argsstring>
        <name>mock_obj_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="231" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a2d472077b9a8d3758caaec5770259f70" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* testing::internal::UntypedFunctionMockerBase::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="235" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aed2a1913f6c03fd47c8900039556be34" prot="protected" static="no" mutable="no">
        <type>UntypedOnCallSpecs</type>
        <definition>UntypedOnCallSpecs testing::internal::UntypedFunctionMockerBase::untyped_on_call_specs_</definition>
        <argsstring></argsstring>
        <name>untyped_on_call_specs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="238" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aae4a42a4bace1fcb0cd4bdf1ddd40277" prot="protected" static="no" mutable="no">
        <type>UntypedExpectations</type>
        <definition>UntypedExpectations testing::internal::UntypedFunctionMockerBase::untyped_expectations_</definition>
        <argsstring></argsstring>
        <name>untyped_expectations_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="241" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aedfa95e65d80936e4dff040140513b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::UntypedFunctionMockerBase::UntypedFunctionMockerBase</definition>
        <argsstring>()</argsstring>
        <name>UntypedFunctionMockerBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="128" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="270" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a6badd47a3fe2a439ef98aa91bf73d721" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>testing::internal::UntypedFunctionMockerBase::~UntypedFunctionMockerBase</definition>
        <argsstring>()</argsstring>
        <name>~UntypedFunctionMockerBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="129" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a3f1d62a1662a3daa2895b3af963be269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::UntypedFunctionMockerBase::VerifyAndClearExpectationsLocked</definition>
        <argsstring>() GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex)</argsstring>
        <name>VerifyAndClearExpectationsLocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="134" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="467" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a40ddd95736946a7951033aa89a7b617f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void testing::internal::UntypedFunctionMockerBase::ClearDefaultActionsLocked</definition>
        <argsstring>() GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex)=0</argsstring>
        <name>ClearDefaultActionsLocked</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7">ClearDefaultActionsLocked</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a2cb149456cd559d5b0615f2310b235e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_untyped_action_result_holder_base" kindref="compound">UntypedActionResultHolderBase</ref> *</type>
        <definition>virtual UntypedActionResultHolderBase* testing::internal::UntypedFunctionMockerBase::UntypedPerformDefaultAction</definition>
        <argsstring>(const void *untyped_args, const string &amp;call_description) const =0</argsstring>
        <name>UntypedPerformDefaultAction</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3">UntypedPerformDefaultAction</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>untyped_args</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>call_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1ada5a72303863d0aa655b66338b8efea5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_untyped_action_result_holder_base" kindref="compound">UntypedActionResultHolderBase</ref> *</type>
        <definition>virtual UntypedActionResultHolderBase* testing::internal::UntypedFunctionMockerBase::UntypedPerformAction</definition>
        <argsstring>(const void *untyped_action, const void *untyped_args) const =0</argsstring>
        <name>UntypedPerformAction</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9">UntypedPerformAction</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>untyped_action</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>untyped_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a48a17fa75b744c2bfb19ee1f54d51759" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void testing::internal::UntypedFunctionMockerBase::UntypedDescribeUninterestingCall</definition>
        <argsstring>(const void *untyped_args, ::std::ostream *os) const GTEST_LOCK_EXCLUDED_(g_gmock_mutex)=0</argsstring>
        <name>UntypedDescribeUninterestingCall</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a9f701bc2048925f61cab0491a9aa275c">UntypedDescribeUninterestingCall</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>untyped_args</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a38714b44836c937fe95524f8d7063d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classtesting_1_1internal_1_1_expectation_base" kindref="compound">ExpectationBase</ref> *</type>
        <definition>virtual const ExpectationBase* testing::internal::UntypedFunctionMockerBase::UntypedFindMatchingExpectation</definition>
        <argsstring>(const void *untyped_args, const void **untyped_action, bool *is_excessive, ::std::ostream *what, ::std::ostream *why) GTEST_LOCK_EXCLUDED_(g_gmock_mutex)=0</argsstring>
        <name>UntypedFindMatchingExpectation</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1aa200995eb89574f8042ba6897d6cb98f">UntypedFindMatchingExpectation</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>untyped_args</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>untyped_action</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>is_excessive</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>what</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>why</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1ae8c91f05fc90e66a84df49aae8de0d41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void testing::internal::UntypedFunctionMockerBase::UntypedPrintArgs</definition>
        <argsstring>(const void *untyped_args, ::std::ostream *os) const =0</argsstring>
        <name>UntypedPrintArgs</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <reimplementedby refid="classtesting_1_1internal_1_1_function_mocker_base_1a6f77ce4fad16e1c8508fe6da71e8b930">UntypedPrintArgs</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>untyped_args</declname>
        </param>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a0cd3dd14b92c714eab690c9597f32ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::UntypedFunctionMockerBase::RegisterOwner</definition>
        <argsstring>(const void *mock_obj) GTEST_LOCK_EXCLUDED_(g_gmock_mutex)</argsstring>
        <name>RegisterOwner</name>
        <param>
          <type>const void *</type>
          <declname>mock_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="190" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="279" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a287bcacee639b7d123cec29e0614fe96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::UntypedFunctionMockerBase::SetOwnerAndName</definition>
        <argsstring>(const void *mock_obj, const char *name) GTEST_LOCK_EXCLUDED_(g_gmock_mutex)</argsstring>
        <name>SetOwnerAndName</name>
        <param>
          <type>const void *</type>
          <declname>mock_obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="196" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="291" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a71863dd67193a7082078d5b366d5ce51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * testing::internal::UntypedFunctionMockerBase::MockObject</definition>
        <argsstring>() const GTEST_LOCK_EXCLUDED_(g_gmock_mutex)</argsstring>
        <name>MockObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="202" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="303" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1ae90a5b5d48db1e99634bc6ff39ded335" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * testing::internal::UntypedFunctionMockerBase::Name</definition>
        <argsstring>() const GTEST_LOCK_EXCLUDED_(g_gmock_mutex)</argsstring>
        <name>Name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="207" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="320" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1adaec41c0ba8a07c2415f6c8efa0ca54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_untyped_action_result_holder_base" kindref="compound">UntypedActionResultHolderBase</ref> *</type>
        <definition>UntypedActionResultHolderBase * testing::internal::UntypedFunctionMockerBase::UntypedInvokeWith</definition>
        <argsstring>(const void *untyped_args) GTEST_LOCK_EXCLUDED_(g_gmock_mutex)</argsstring>
        <name>UntypedInvokeWith</name>
        <param>
          <type>const void *</type>
          <declname>untyped_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="214" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="339" bodyend="445"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a7705611c4a63df16cddb0674878c403a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1_expectation" kindref="compound">Expectation</ref></type>
        <definition>Expectation testing::internal::UntypedFunctionMockerBase::GetHandleOf</definition>
        <argsstring>(ExpectationBase *exp)</argsstring>
        <name>GetHandleOf</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1_expectation_base" kindref="compound">ExpectationBase</ref> *</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="226" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-spec-builders.cc" bodystart="449" bodyend="462"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2451">
        <label>testing::internal::FunctionMockerBase&lt; F &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2446">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2422">
        <label>testing::internal::FunctionMockerBase&lt; R(A1)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2433">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2423">
        <label>testing::internal::FunctionMocker&lt; R(A1)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_08_4"/>
        <childnode refid="2422" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2426">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="2425" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2450">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_0038b5baf41d3183579372e0e15a9db969"/>
        <childnode refid="2449" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2425">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2436">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2424">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2421">
        <label>testing::internal::FunctionMockerBase&lt; R(A1) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2418">
        <label>testing::internal::FunctionMockerBase&lt; R() &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2449">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2435">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="2434" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2443">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2448">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2431">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2442">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2447">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00d00d8722bf1ad86ca8049508f133d393"/>
        <childnode refid="2446" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2427">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2434">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2429">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="2428" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2417">
        <label>testing::internal::UntypedFunctionMockerBase</label>
        <link refid="classtesting_1_1internal_1_1_untyped_function_mocker_base"/>
      </node>
      <node id="2432">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="2431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2419">
        <label>testing::internal::FunctionMockerBase&lt; R()&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2440">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2445">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2430">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2444">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4"/>
        <childnode refid="2443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2437">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2438">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4"/>
        <childnode refid="2437" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2428">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2420">
        <label>testing::internal::FunctionMocker&lt; R()&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_08_4"/>
        <childnode refid="2419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2441">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4"/>
        <childnode refid="2440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2439">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5, A6, A7) &gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="2417" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" line="126" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h" bodystart="126" bodyend="242"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a40ddd95736946a7951033aa89a7b617f" prot="public" virt="pure-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>ClearDefaultActionsLocked</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a7705611c4a63df16cddb0674878c403a" prot="protected" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>GetHandleOf</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1adf35c589969bb985668616031cb9ed56" prot="protected" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>mock_obj_</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a71863dd67193a7082078d5b366d5ce51" prot="public" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>MockObject</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1ae90a5b5d48db1e99634bc6ff39ded335" prot="public" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>Name</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a2d472077b9a8d3758caaec5770259f70" prot="protected" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>name_</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a0cd3dd14b92c714eab690c9597f32ffd" prot="public" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>RegisterOwner</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a287bcacee639b7d123cec29e0614fe96" prot="public" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>SetOwnerAndName</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aae4a42a4bace1fcb0cd4bdf1ddd40277" prot="protected" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>untyped_expectations_</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aed2a1913f6c03fd47c8900039556be34" prot="protected" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>untyped_on_call_specs_</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a48a17fa75b744c2bfb19ee1f54d51759" prot="public" virt="pure-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedDescribeUninterestingCall</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a36480bd395e110b4eae5b0d0402de966" prot="protected" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedExpectations</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a38714b44836c937fe95524f8d7063d04" prot="public" virt="pure-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedFindMatchingExpectation</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aedfa95e65d80936e4dff040140513b36" prot="public" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedFunctionMockerBase</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1adaec41c0ba8a07c2415f6c8efa0ca54f" prot="public" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedInvokeWith</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a29cc87ed60ad0218432aa777abba7dbb" prot="protected" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedOnCallSpecs</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1ada5a72303863d0aa655b66338b8efea5" prot="public" virt="pure-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedPerformAction</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a2cb149456cd559d5b0615f2310b235e3" prot="public" virt="pure-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedPerformDefaultAction</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1ae8c91f05fc90e66a84df49aae8de0d41" prot="public" virt="pure-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>UntypedPrintArgs</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a3f1d62a1662a3daa2895b3af963be269" prot="public" virt="non-virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>VerifyAndClearExpectationsLocked</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a6badd47a3fe2a439ef98aa91bf73d721" prot="public" virt="virtual"><scope>testing::internal::UntypedFunctionMockerBase</scope><name>~UntypedFunctionMockerBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
