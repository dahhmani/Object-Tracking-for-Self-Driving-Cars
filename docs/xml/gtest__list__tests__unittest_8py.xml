<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gtest__list__tests__unittest_8py" kind="file" language="Python">
    <compoundname>gtest_list_tests_unittest.py</compoundname>
    <innerclass refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test" prot="public">gtest_list_tests_unittest::GTestListTestsUnitTest</innerclass>
    <innernamespace refid="namespacegtest__list__tests__unittest">gtest_list_tests_unittest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2006,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Unit<sp/>test<sp/>for<sp/>Google<sp/>Test&apos;s<sp/>--gtest_list_tests<sp/>flag.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">A<sp/>user<sp/>can<sp/>ask<sp/>Google<sp/>Test<sp/>to<sp/>list<sp/>all<sp/>tests<sp/>by<sp/>specifying<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">--gtest_list_tests<sp/>flag.<sp/><sp/>This<sp/>script<sp/>tests<sp/>such<sp/>functionality</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">by<sp/>invoking<sp/>gtest_list_tests_unittest_<sp/>(a<sp/>program<sp/>written<sp/>with</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">Google<sp/>Test)<sp/>the<sp/>command<sp/>line<sp/>flags.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">__author__<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;phanna@google.com<sp/>(Patrick<sp/>Hanna)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gtest_test_utils</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Constants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>command<sp/>line<sp/>flag<sp/>for<sp/>enabling/disabling<sp/>listing<sp/>all<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">LIST_TESTS_FLAG<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;gtest_list_tests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Path<sp/>to<sp/>the<sp/>gtest_list_tests_unittest_<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">EXE_PATH<sp/>=<sp/><ref refid="gtest__test__utils_8py_1a89ed3717984a80ffbb7a9c92f71b86a2" kindref="member">gtest_test_utils.GetTestExecutablePath</ref>(</highlight><highlight class="stringliteral">&apos;gtest_list_tests_unittest_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>expected<sp/>output<sp/>when<sp/>running<sp/>gtest_list_tests_unittest_<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#<sp/>--gtest_list_tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">EXPECTED_OUTPUT_NO_FILTER_RE<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&quot;&quot;&quot;FooDeathTest\.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/>Test1</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral">Foo\.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/>Bar1</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/>Bar2</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/>DISABLED_Bar3</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral">Abc\.</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/>Xyz</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/>Def</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral">FooBar\.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/>Baz</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral">FooTest\.</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/>Test1</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/>DISABLED_Test2</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/>Test3</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral">TypedTest/0\.<sp/><sp/>#<sp/>TypeParam<sp/>=<sp/>(VeryLo{245}|class<sp/>VeryLo{239})\.\.\.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/>TestA</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/>TestB</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral">TypedTest/1\.<sp/><sp/>#<sp/>TypeParam<sp/>=<sp/>int\s*\*(<sp/>__ptr64)?</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/>TestA</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/>TestB</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral">TypedTest/2\.<sp/><sp/>#<sp/>TypeParam<sp/>=<sp/>.*MyArray&lt;bool,\s*42&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/>TestA</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/>TestB</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral">My/TypeParamTest/0\.<sp/><sp/>#<sp/>TypeParam<sp/>=<sp/>(VeryLo{245}|class<sp/>VeryLo{239})\.\.\.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/>TestA</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/>TestB</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral">My/TypeParamTest/1\.<sp/><sp/>#<sp/>TypeParam<sp/>=<sp/>int\s*\*(<sp/>__ptr64)?</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/>TestA</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/>TestB</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral">My/TypeParamTest/2\.<sp/><sp/>#<sp/>TypeParam<sp/>=<sp/>.*MyArray&lt;bool,\s*42&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/>TestA</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/>TestB</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral">MyInstantiation/ValueParamTest\.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/>TestA/0<sp/><sp/>#<sp/>GetParam\(\)<sp/>=<sp/>one<sp/>line</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/>TestA/1<sp/><sp/>#<sp/>GetParam\(\)<sp/>=<sp/>two\\nlines</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/>TestA/2<sp/><sp/>#<sp/>GetParam\(\)<sp/>=<sp/>a<sp/>very\\nlo{241}\.\.\.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/>TestB/0<sp/><sp/>#<sp/>GetParam\(\)<sp/>=<sp/>one<sp/>line</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/>TestB/1<sp/><sp/>#<sp/>GetParam\(\)<sp/>=<sp/>two\\nlines</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/>TestB/2<sp/><sp/>#<sp/>GetParam\(\)<sp/>=<sp/>a<sp/>very\\nlo{241}\.\.\.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>expected<sp/>output<sp/>when<sp/>running<sp/>gtest_list_tests_unittest_<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">#<sp/>--gtest_list_tests<sp/>and<sp/>--gtest_filter=Foo*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">EXPECTED_OUTPUT_FILTER_FOO_RE<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&quot;&quot;&quot;FooDeathTest\.</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/>Test1</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral">Foo\.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/>Bar1</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/>Bar2</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/>DISABLED_Bar3</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral">FooBar\.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/>Baz</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral">FooTest\.</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/>Test1</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/>DISABLED_Test2</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/>Test3</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Utilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">Run(args):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>gtest_list_tests_unittest_<sp/>and<sp/>returns<sp/>the<sp/>list<sp/>of<sp/>tests<sp/>printed.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgtest__test__utils_1_1_subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>([EXE_PATH]<sp/>+<sp/>args,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capture_stderr=</highlight><highlight class="keyword">False</highlight><highlight class="normal">).output</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>unit<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test" kindref="compound">GTestListTestsUnitTest</ref>(<ref refid="gtest__test__utils_8py_1acb97a85206c09d233db6c7f2362e5428" kindref="member">gtest_test_utils.TestCase</ref>):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>using<sp/>the<sp/>--gtest_list_tests<sp/>flag<sp/>to<sp/>list<sp/>all<sp/>tests.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a965601cd1882fdeca94d2461bd033c40" kindref="member">RunAndVerify</ref>(self,<sp/>flag_value,<sp/>expected_output_re,<sp/>other_flag):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>gtest_list_tests_unittest_<sp/>and<sp/>verifies<sp/>that<sp/>it<sp/>prints</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>correct<sp/>tests.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>flag_value:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>of<sp/>the<sp/>--gtest_list_tests<sp/>flag;</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None<sp/>if<sp/>the<sp/>flag<sp/>should<sp/>not<sp/>be<sp/>present.</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re:<sp/>regular<sp/>expression<sp/>that<sp/>matches<sp/>the<sp/>expected</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>after<sp/>running<sp/>command;</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>other_flag:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>different<sp/>flag<sp/>to<sp/>be<sp/>passed<sp/>to<sp/>command</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>along<sp/>with<sp/>gtest_list_tests;</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None<sp/>if<sp/>the<sp/>flag<sp/>should<sp/>not<sp/>be<sp/>present.</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag_value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag_expression<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;not<sp/>set&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>flag_value<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--%s=0&apos;</highlight><highlight class="normal"><sp/>%<sp/>LIST_TESTS_FLAG</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag_expression<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>LIST_TESTS_FLAG</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag_expression<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[flag]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>other_flag<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>+=<sp/>[other_flag]</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>Run(args)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>expected_output_re:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assert_(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re.match(output),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;when<sp/>%s<sp/>is<sp/>%s,<sp/>the<sp/>output<sp/>of<sp/>&quot;%s&quot;<sp/>is<sp/>&quot;%s&quot;,\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;which<sp/>does<sp/>not<sp/>match<sp/>regex<sp/>&quot;%s&quot;&apos;</highlight><highlight class="normal"><sp/>%</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LIST_TESTS_FLAG,<sp/>flag_expression,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(args),<sp/>output,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re.pattern)))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assert_(</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>EXPECTED_OUTPUT_NO_FILTER_RE.match(output),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;when<sp/>%s<sp/>is<sp/>%s,<sp/>the<sp/>output<sp/>of<sp/>&quot;%s&quot;<sp/>is<sp/>&quot;%s&quot;&apos;</highlight><highlight class="normal">%</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LIST_TESTS_FLAG,<sp/>flag_expression,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(args),<sp/>output)))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a4168d086b7ec31f86ab548b6fd79b27e" kindref="member">testDefaultBehavior</ref>(self):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>the<sp/>behavior<sp/>of<sp/>the<sp/>default<sp/>mode.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a965601cd1882fdeca94d2461bd033c40" kindref="member">RunAndVerify</ref>(flag_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_flag=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a6d3e8738bd4b7494867cac464d342944" kindref="member">testFlag</ref>(self):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>using<sp/>the<sp/>--gtest_list_tests<sp/>flag.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a965601cd1882fdeca94d2461bd033c40" kindref="member">RunAndVerify</ref>(flag_value=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_flag=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a965601cd1882fdeca94d2461bd033c40" kindref="member">RunAndVerify</ref>(flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re=EXPECTED_OUTPUT_NO_FILTER_RE,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_flag=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1ae1ccba3f21c8e25968834607f7db2b10" kindref="member">testOverrideNonFilterFlags</ref>(self):</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>--gtest_list_tests<sp/>overrides<sp/>the<sp/>non-filter<sp/>flags.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a965601cd1882fdeca94d2461bd033c40" kindref="member">RunAndVerify</ref>(flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re=EXPECTED_OUTPUT_NO_FILTER_RE,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_flag=</highlight><highlight class="stringliteral">&apos;--gtest_break_on_failure&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1ac5bef6c9fb78b8eef84427de811fd70f" kindref="member">testWithFilterFlags</ref>(self):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>--gtest_list_tests<sp/>takes<sp/>into<sp/>account<sp/>the</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>--gtest_filter<sp/>flag.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgtest__list__tests__unittest_1_1_g_test_list_tests_unit_test_1a965601cd1882fdeca94d2461bd033c40" kindref="member">RunAndVerify</ref>(flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_output_re=EXPECTED_OUTPUT_FILTER_FOO_RE,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_flag=</highlight><highlight class="stringliteral">&apos;--gtest_filter=Foo*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="gtest__test__utils_8py_1a5361b42d9c6843b5b117ead4d1c58cc5" kindref="member">gtest_test_utils.Main</ref>()</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googletest/test/gtest_list_tests_unittest.py"/>
  </compounddef>
</doxygen>
