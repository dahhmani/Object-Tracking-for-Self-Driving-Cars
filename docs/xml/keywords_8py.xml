<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="keywords_8py" kind="file" language="Python">
    <compoundname>keywords.py</compoundname>
    <innernamespace refid="namespacecpp_1_1keywords">cpp::keywords</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2007<sp/>Neal<sp/>Norwitz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Portions<sp/>Copyright<sp/>2007<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;C++<sp/>keywords<sp/>and<sp/>helper<sp/>utilities<sp/>for<sp/>determining<sp/>keywords.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">__author__<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;nnorwitz@google.com<sp/>(Neal<sp/>Norwitz)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Python<sp/>3.x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>builtins</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Python<sp/>2.x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>__builtin__<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>builtins</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>hasattr(builtins,<sp/></highlight><highlight class="stringliteral">&apos;set&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Nominal<sp/>support<sp/>for<sp/>Python<sp/>2.3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sets<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Set<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>set</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">TYPES<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;bool<sp/>char<sp/>int<sp/>long<sp/>short<sp/>double<sp/>float<sp/>void<sp/>wchar_t<sp/>unsigned<sp/>signed&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="37"><highlight class="normal">TYPE_MODIFIERS<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;auto<sp/>register<sp/>const<sp/>inline<sp/>extern<sp/>static<sp/>virtual<sp/>volatile<sp/>mutable&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="38"><highlight class="normal">ACCESS<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;public<sp/>protected<sp/>private<sp/>friend&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">CASTS<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;static_cast<sp/>const_cast<sp/>dynamic_cast<sp/>reinterpret_cast&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">OTHERS<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;true<sp/>false<sp/>asm<sp/>class<sp/>namespace<sp/>using<sp/>explicit<sp/>this<sp/>operator<sp/>sizeof&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="43"><highlight class="normal">OTHER_TYPES<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;new<sp/>delete<sp/>typedef<sp/>struct<sp/>union<sp/>enum<sp/>typeid<sp/>typename<sp/>template&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">CONTROL<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;case<sp/>switch<sp/>default<sp/>if<sp/>else<sp/>return<sp/>goto&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="46"><highlight class="normal">EXCEPTION<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;try<sp/>catch<sp/>throw&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="47"><highlight class="normal">LOOP<sp/>=<sp/>set(</highlight><highlight class="stringliteral">&apos;while<sp/>do<sp/>for<sp/>break<sp/>continue&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">ALL<sp/>=<sp/>TYPES<sp/>|<sp/>TYPE_MODIFIERS<sp/>|<sp/>ACCESS<sp/>|<sp/>CASTS<sp/>|<sp/>OTHERS<sp/>|<sp/>OTHER_TYPES<sp/>|<sp/>CONTROL<sp/>|<sp/>EXCEPTION<sp/>|<sp/>LOOP</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">IsKeyword(token):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>token<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ALL</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">IsBuiltinType(token):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>token<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;virtual&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;inline&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>These<sp/>only<sp/>apply<sp/>to<sp/>methods,<sp/>they<sp/>can&apos;t<sp/>be<sp/>types<sp/>by<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>token<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>TYPES<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>token<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>TYPE_MODIFIERS</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py"/>
  </compounddef>
</doxygen>
