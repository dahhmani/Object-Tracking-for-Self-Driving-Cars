<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_action_helper" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::ActionHelper</compoundname>
    <templateparamlist>
      <param>
        <type>typename Result</type>
      </param>
      <param>
        <type>class Impl</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1a25176836b0a381d883d61c3a2dc60662" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt;&gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt;&gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="514" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="514" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1a08d2e199b0a3a1f9e05982cae07db3ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="522" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="522" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1a96d8d8399ff3322e77ba1de51c166f4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="530" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="530" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1ad450478d185cbcac0e1383f7517f5c36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="538" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="538" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1a2ceda08aeb7b9fd1ad6ccb0821a3ea39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2, A3 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2, A3 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="546" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="546" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1afd2d1dcea480db63416fc3b8604dec56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2, A3, A4 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2, A3, A4 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="555" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="555" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1a58e3b1699dd3a4404ed2cd652327d8ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="565" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="565" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1a457f1505b200c5125c3bb370fb7e7bb4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="575" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="575" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1a1f851f76793206daf2dd8a2f9621f43c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6, A7 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6, A7 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="585" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="585" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1afcc265631df5d3a0f8955e9aa35c57f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6, A7, A8 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6, A7, A8 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="595" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="595" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_action_helper_1adfe6c86332cc09b352ec5ccbad1d3988" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A0</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
          <param>
            <type>typename A9</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result testing::internal::ActionHelper&lt; Result, Impl &gt;::Perform</definition>
        <argsstring>(Impl *impl, const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6, A7, A8, A9 &gt; &amp;args)</argsstring>
        <name>Perform</name>
        <param>
          <type>Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const ::testing::tuple&lt; A0, A1, A2, A3, A4, A5, A6, A7, A8, A9 &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="605" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="605" bodyend="611"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="512" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="512" bodyend="612"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_action_helper_1a25176836b0a381d883d61c3a2dc60662" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1a08d2e199b0a3a1f9e05982cae07db3ec" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1a96d8d8399ff3322e77ba1de51c166f4e" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1ad450478d185cbcac0e1383f7517f5c36" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1a2ceda08aeb7b9fd1ad6ccb0821a3ea39" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1afd2d1dcea480db63416fc3b8604dec56" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1a58e3b1699dd3a4404ed2cd652327d8ca" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1a457f1505b200c5125c3bb370fb7e7bb4" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1a1f851f76793206daf2dd8a2f9621f43c" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1afcc265631df5d3a0f8955e9aa35c57f7" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
      <member refid="classtesting_1_1internal_1_1_action_helper_1adfe6c86332cc09b352ec5ccbad1d3988" prot="public" virt="non-virtual"><scope>testing::internal::ActionHelper</scope><name>Perform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
