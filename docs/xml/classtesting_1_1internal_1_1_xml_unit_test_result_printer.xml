<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_xml_unit_test_result_printer" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::XmlUnitTestResultPrinter</compoundname>
    <basecompoundref refid="classtesting_1_1_empty_test_event_listener" prot="public" virt="non-virtual">testing::EmptyTestEventListener</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aa81cc4540d16279f5eb5f7ec9f366ea7" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string testing::internal::XmlUnitTestResultPrinter::output_file_</definition>
        <argsstring></argsstring>
        <name>output_file_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3416" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3416" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1afdaf88e6764c18ce0dcc3733d7a06e31" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter</definition>
        <argsstring>(const char *output_file)</argsstring>
        <name>XmlUnitTestResultPrinter</name>
        <param>
          <type>const char *</type>
          <declname>output_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3351" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3422" bodyend="3429"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a2ae986dd2f4f2aed31cc6f3bc8c56898" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd</definition>
        <argsstring>(const UnitTest &amp;unit_test, int iteration)</argsstring>
        <name>OnTestIterationEnd</name>
        <reimplements refid="classtesting_1_1_empty_test_event_listener_1a2253e5a18b3cf7bccd349567a252209d">OnTestIterationEnd</reimplements>
        <param>
          <type>const <ref refid="classtesting_1_1_unit_test" kindref="compound">UnitTest</ref> &amp;</type>
          <declname>unit_test</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iteration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3353" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3432" bodyend="3462"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1af9d5af6e5d0c505d5c3bd50a8d2a8d76" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::XmlUnitTestResultPrinter::IsNormalizableWhitespace</definition>
        <argsstring>(char c)</argsstring>
        <name>IsNormalizableWhitespace</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3358" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3358" bodyend="3360"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a2b83a24e3ec8544efa1156f9d6e51873" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::XmlUnitTestResultPrinter::IsValidXmlCharacter</definition>
        <argsstring>(char c)</argsstring>
        <name>IsValidXmlCharacter</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3363" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3363" bodyend="3365"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1adadf42cf46ade9b26743466ce4b52f36" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml</definition>
        <argsstring>(const std::string &amp;str, bool is_attribute)</argsstring>
        <name>EscapeXml</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3371" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3476" bodyend="3517"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aa14cb72f42a346841482cbafa65e3155" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>RemoveInvalidXmlCharacters</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3374" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3522" bodyend="3531"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aad574d7bb0c24578d5acc57817b9d367" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>EscapeXmlAttribute</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3377" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3377" bodyend="3379"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a934486bda28e7013f2d07520d5098a31" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXmlText</definition>
        <argsstring>(const char *str)</argsstring>
        <name>EscapeXmlText</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3382" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3382" bodyend="3384"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aa8ca7066de948d26d171597430c75839" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute</definition>
        <argsstring>(std::ostream *stream, const std::string &amp;element_name, const std::string &amp;name, const std::string &amp;value)</argsstring>
        <name>OutputXmlAttribute</name>
        <param>
          <type>std::ostream *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>element_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3388" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3607" bodyend="3621"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a41bccd75f54932c5b3b8cce1f94dbd54" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection</definition>
        <argsstring>(::std::ostream *stream, const char *data)</argsstring>
        <name>OutputXmlCDataSection</name>
        <param>
          <type>::std::ostream *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3394" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3588" bodyend="3605"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1af642843faed4cd28c77d688f6f2820d7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo</definition>
        <argsstring>(::std::ostream *stream, const char *test_case_name, const TestInfo &amp;test_info)</argsstring>
        <name>OutputXmlTestInfo</name>
        <param>
          <type>::std::ostream *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>test_case_name</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_test_info" kindref="compound">TestInfo</ref> &amp;</type>
          <declname>test_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3397" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3625" bodyend="3672"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a7f7accabeac896d4271f36d24ca02dba" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase</definition>
        <argsstring>(::std::ostream *stream, const TestCase &amp;test_case)</argsstring>
        <name>PrintXmlTestCase</name>
        <param>
          <type>::std::ostream *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_test_case" kindref="compound">TestCase</ref> &amp;</type>
          <declname>test_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3402" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3675" bodyend="3698"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a3be1c8766241d0f34cdf59b45a52f73b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest</definition>
        <argsstring>(::std::ostream *stream, const UnitTest &amp;unit_test)</argsstring>
        <name>PrintXmlUnitTest</name>
        <param>
          <type>::std::ostream *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_unit_test" kindref="compound">UnitTest</ref> &amp;</type>
          <declname>unit_test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3406" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3701" bodyend="3737"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aaac4f1352a2cc46f6a69994d45999f0b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes</definition>
        <argsstring>(const TestResult &amp;result)</argsstring>
        <name>TestPropertiesAsXmlAttributes</name>
        <param>
          <type>const <ref refid="classtesting_1_1_test_result" kindref="compound">TestResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3413" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3741" bodyend="3750"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a2384a8c0cae7cbdf3debac145e43b323" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::XmlUnitTestResultPrinter::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(XmlUnitTestResultPrinter)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer" kindref="compound">XmlUnitTestResultPrinter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/src/gtest.cc" line="3418" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2519">
        <label>testing::EmptyTestEventListener</label>
        <link refid="classtesting_1_1_empty_test_event_listener"/>
        <childnode refid="2520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2518">
        <label>testing::internal::XmlUnitTestResultPrinter</label>
        <link refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer"/>
        <childnode refid="2519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2520">
        <label>testing::TestEventListener</label>
        <link refid="classtesting_1_1_test_event_listener"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2522">
        <label>testing::EmptyTestEventListener</label>
        <link refid="classtesting_1_1_empty_test_event_listener"/>
        <childnode refid="2523" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2521">
        <label>testing::internal::XmlUnitTestResultPrinter</label>
        <link refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer"/>
        <childnode refid="2522" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2523">
        <label>testing::TestEventListener</label>
        <link refid="classtesting_1_1_test_event_listener"/>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googletest/src/gtest.cc" line="3349" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3349" bodyend="3419"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1adadf42cf46ade9b26743466ce4b52f36" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>EscapeXml</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aad574d7bb0c24578d5acc57817b9d367" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>EscapeXmlAttribute</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a934486bda28e7013f2d07520d5098a31" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>EscapeXmlText</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a2384a8c0cae7cbdf3debac145e43b323" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1af9d5af6e5d0c505d5c3bd50a8d2a8d76" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>IsNormalizableWhitespace</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a2b83a24e3ec8544efa1156f9d6e51873" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>IsValidXmlCharacter</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1abc481c6648d15d4242245195a06f5aa0" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnEnvironmentsSetUpEnd</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1a156d1965248fbdced6aabacadfa2d63f" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnEnvironmentsSetUpStart</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1aea64c83c415b33a4c0b0239bafd1438d" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnEnvironmentsTearDownEnd</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1a00fa1a4ea5831e20746188414268e7c6" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnEnvironmentsTearDownStart</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1a6bec703158283104c4298f7d8a528515" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestCaseEnd</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1ae4707ed9cc7ace5241bc8ccc4051209b" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestCaseStart</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1afd58d21005f0d0d0399fb114627545d3" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestEnd</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a2ae986dd2f4f2aed31cc6f3bc8c56898" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestIterationEnd</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1a836f05829855dc60d13ba99ad712c0dd" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestIterationStart</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1a59e7f7d9f2e2d089a6e8c1e2577f4718" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestPartResult</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1a0abcc02bd2331a2e29ad6f4d9daf2a32" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestProgramEnd</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1aa3847c8a3c22d8d69a6006dfdd6589fc" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestProgramStart</name></member>
      <member refid="classtesting_1_1_empty_test_event_listener_1a84fa74cc9ba742f9f847ea405ca84e5e" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OnTestStart</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aa81cc4540d16279f5eb5f7ec9f366ea7" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>output_file_</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aa8ca7066de948d26d171597430c75839" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OutputXmlAttribute</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a41bccd75f54932c5b3b8cce1f94dbd54" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OutputXmlCDataSection</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1af642843faed4cd28c77d688f6f2820d7" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>OutputXmlTestInfo</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a7f7accabeac896d4271f36d24ca02dba" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>PrintXmlTestCase</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1a3be1c8766241d0f34cdf59b45a52f73b" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>PrintXmlUnitTest</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aa14cb72f42a346841482cbafa65e3155" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>RemoveInvalidXmlCharacters</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1aaac4f1352a2cc46f6a69994d45999f0b" prot="private" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>TestPropertiesAsXmlAttributes</name></member>
      <member refid="classtesting_1_1internal_1_1_xml_unit_test_result_printer_1afdaf88e6764c18ce0dcc3733d7a06e31" prot="public" virt="non-virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>XmlUnitTestResultPrinter</name></member>
      <member refid="classtesting_1_1_test_event_listener_1a4512d19e7a108ec4926239ec1ea85d63" prot="public" virt="virtual"><scope>testing::internal::XmlUnitTestResultPrinter</scope><name>~TestEventListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
