<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classcpp_1_1ast_1_1_delete" kind="class" language="Python" prot="public">
    <compoundname>cpp::ast::Delete</compoundname>
    <basecompoundref refid="classcpp_1_1ast_1_1_expr" prot="public" virt="non-virtual">cpp.ast.Expr</basecompoundref>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="387">
        <label>cpp.ast.Node</label>
        <link refid="classcpp_1_1ast_1_1_node"/>
        <childnode refid="388" relation="public-inheritance">
        </childnode>
      </node>
      <node id="386">
        <label>cpp.ast.Expr</label>
        <link refid="classcpp_1_1ast_1_1_expr"/>
        <childnode refid="387" relation="public-inheritance">
        </childnode>
      </node>
      <node id="388">
        <label>object</label>
      </node>
      <node id="385">
        <label>cpp.ast.Delete</label>
        <link refid="classcpp_1_1ast_1_1_delete"/>
        <childnode refid="386" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="391">
        <label>cpp.ast.Node</label>
        <link refid="classcpp_1_1ast_1_1_node"/>
        <childnode refid="392" relation="public-inheritance">
        </childnode>
      </node>
      <node id="390">
        <label>cpp.ast.Expr</label>
        <link refid="classcpp_1_1ast_1_1_expr"/>
        <childnode refid="391" relation="public-inheritance">
        </childnode>
      </node>
      <node id="392">
        <label>object</label>
      </node>
      <node id="389">
        <label>cpp.ast.Delete</label>
        <link refid="classcpp_1_1ast_1_1_delete"/>
        <childnode refid="390" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/scripts/generator/cpp/ast.py" line="194" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/ast.py" bodystart="194" bodyend="198"/>
    <listofallmembers>
      <member refid="classcpp_1_1ast_1_1_expr_1adc83f4b17d6e28a39781678692eb25aa" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>__init__</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1a2cbd6969346645259afc3be51faae904" prot="public" virt="non-virtual" ambiguityscope="cpp::ast::Node."><scope>cpp::ast::Delete</scope><name>__init__</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1ab89915656a60c7b7c752e5baa607c532" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>__repr__</name></member>
      <member refid="classcpp_1_1ast_1_1_expr_1a7ee1896fbfa7819adbd0b2f89d11ecec" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>__str__</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1a3c5e5246ccf619df28eca02e29d69647" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>end</name></member>
      <member refid="classcpp_1_1ast_1_1_expr_1a2f4e13fb0176f2616f8703103c806462" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>expr</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1ab3eca703a79fb65bc25dfbcb7547c79e" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>IsDeclaration</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1a684ee9a357168e7e07a24fc6812f66e6" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>IsDefinition</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1a313273874ccf578485006d4000128234" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>IsExportable</name></member>
      <member refid="classcpp_1_1ast_1_1_expr_1a9c92416eb1285068f190dcda8fd33682" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>Requires</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1a7b2aa97e6a049bb1a93aea48c48f1f44" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>start</name></member>
      <member refid="classcpp_1_1ast_1_1_node_1ab5dfeabcbcd7c1f5feb8522edffb8b4a" prot="public" virt="non-virtual"><scope>cpp::ast::Delete</scope><name>XXX__str__</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
