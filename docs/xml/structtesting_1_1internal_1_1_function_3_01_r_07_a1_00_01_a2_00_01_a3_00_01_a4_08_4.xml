<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4" kind="struct" language="C++" prot="public">
    <compoundname>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</compoundname>
    <basecompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1, A2, A3)&gt;</basecompoundref>
    <derivedcompoundref refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" prot="public" virt="non-virtual">testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename A1</type>
      </param>
      <param>
        <type>typename A2</type>
      </param>
      <param>
        <type>typename A3</type>
      </param>
      <param>
        <type>typename A4</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1ae5039423598ab0fecd4f594acbf34d85" prot="public" static="no">
        <type>A4</type>
        <definition>typedef A4 testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;::Argument4</definition>
        <argsstring></argsstring>
        <name>Argument4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="198" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1a8ad9e0ae57a766f80a9816ad45626812" prot="public" static="no">
        <type>::testing::tuple&lt; A1, A2, A3, A4 &gt;</type>
        <definition>typedef ::testing::tuple&lt;A1, A2, A3, A4&gt; testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;::ArgumentTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="199" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1a9524b18868ab632a90d4cb6917057a14" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt; ArgumentTuple &gt;::type</type>
        <definition>typedef MatcherTuple&lt;ArgumentTuple&gt;::type testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;::ArgumentMatcherTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentMatcherTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="200" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1af7462da27e87a9d580e7f9748ebc5754" prot="public" static="no">
        <type>void</type>
        <definition>typedef void testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;::MakeResultVoid(A1, A2, A3, A4)</definition>
        <argsstring>(A1, A2, A3, A4)</argsstring>
        <name>MakeResultVoid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="201" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1a6736086d1c8ba25788add1e5180207f9" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref></type>
        <definition>typedef IgnoredValue testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;::MakeResultIgnoredValue(A1, A2, A3, A4)</definition>
        <argsstring>(A1, A2, A3, A4)</argsstring>
        <name>MakeResultIgnoredValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="202" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="699">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="698">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="699" relation="public-inheritance">
        </childnode>
      </node>
      <node id="700">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
      <node id="702">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4"/>
        <childnode refid="701" relation="public-inheritance">
        </childnode>
      </node>
      <node id="696">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="705">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6dfab3ccde80824a59fc4efd5336a27c1"/>
        <childnode refid="704" relation="public-inheritance">
        </childnode>
      </node>
      <node id="703">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4"/>
        <childnode refid="702" relation="public-inheritance">
        </childnode>
      </node>
      <node id="701">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="706">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6f6ff91550f0557b7708e490e5002cd35"/>
        <childnode refid="705" relation="public-inheritance">
        </childnode>
      </node>
      <node id="697">
        <label>testing::internal::Function&lt; R(A1, A2, A3)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="698" relation="public-inheritance">
        </childnode>
      </node>
      <node id="704">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4"/>
        <childnode refid="703" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="710">
        <label>testing::internal::Function&lt; R(A1)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4"/>
        <childnode refid="711" relation="public-inheritance">
        </childnode>
      </node>
      <node id="709">
        <label>testing::internal::Function&lt; R(A1, A2)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4"/>
        <childnode refid="710" relation="public-inheritance">
        </childnode>
      </node>
      <node id="711">
        <label>testing::internal::Function&lt; R()&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4"/>
      </node>
      <node id="707">
        <label>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4"/>
        <childnode refid="708" relation="public-inheritance">
        </childnode>
      </node>
      <node id="708">
        <label>testing::internal::Function&lt; R(A1, A2, A3)&gt;</label>
        <link refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4"/>
        <childnode refid="709" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" line="197" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" bodystart="196" bodyend="203"/>
    <listofallmembers>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4_1aca36c8586218fd015cc4736dc8d4c14f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>Argument1</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4_1a025f5192252366d73aa19718bb0ea89d" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>Argument2</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4_1a2ac6eefb33feafe85c1c6742bdab509f" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>Argument3</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1ae5039423598ab0fecd4f594acbf34d85" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>Argument4</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1a9524b18868ab632a90d4cb6917057a14" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>ArgumentMatcherTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1a8ad9e0ae57a766f80a9816ad45626812" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>ArgumentTuple</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1a6736086d1c8ba25788add1e5180207f9" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>MakeResultIgnoredValue</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4_1af7462da27e87a9d580e7f9748ebc5754" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>MakeResultVoid</name></member>
      <member refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4_1a5c228a886ef598ac10988f8de5e32ca1" prot="public" virt="non-virtual"><scope>testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</scope><name>Result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
