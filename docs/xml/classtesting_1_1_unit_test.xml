<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1_unit_test" kind="class" language="C++" prot="public">
    <compoundname>testing::UnitTest</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1a5b78b1c2e1fa07ffed92da365593eaa4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Test</definition>
        <argsstring></argsstring>
        <name>Test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1292" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1a183151aa061362c87572e743fe233db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::AssertHelper</definition>
        <argsstring></argsstring>
        <name>internal::AssertHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1293" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1afa3927576c08d7b1e197ba16b2b3dcb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::ScopedTrace</definition>
        <argsstring></argsstring>
        <name>internal::ScopedTrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1294" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1adc037d188dab349a94868991955c9cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::StreamingListenerTest</definition>
        <argsstring></argsstring>
        <name>internal::StreamingListenerTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1295" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1ae970f89a9f477a349fe5778be85ef42e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::UnitTestRecordPropertyTestHelper</definition>
        <argsstring></argsstring>
        <name>internal::UnitTestRecordPropertyTestHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1296" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1a5ec26e4c31220ff8e769cc09689a4d6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classtesting_1_1_environment" kindref="compound">Environment</ref> *</type>
        <definition>Environment* AddGlobalTestEnvironment</definition>
        <argsstring>(Environment *env)</argsstring>
        <name>AddGlobalTestEnvironment</name>
        <param>
          <type><ref refid="classtesting_1_1_environment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1297" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1350" bodyend="1352"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1a56e56be7066957d612e53b5c60f6ac08" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classtesting_1_1internal_1_1_unit_test_impl" kindref="compound">internal::UnitTestImpl</ref> *</type>
        <definition>internal::UnitTestImpl* internal::GetUnitTestImpl</definition>
        <argsstring>()</argsstring>
        <name>internal::GetUnitTestImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1298" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_unit_test_1a73f5a158c13793b90c80d854c9a75120" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void internal::ReportFailureInUnknownLocation</definition>
        <argsstring>(TestPartResult::Type result_type, const std::string &amp;message)</argsstring>
        <name>internal::ReportFailureInUnknownLocation</name>
        <param>
          <type>TestPartResult::Type</type>
          <declname>result_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1299" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1_unit_test_1abb94ef45cf0ab43be81ac6d5b1364132" prot="private" static="no" mutable="yes">
        <type><ref refid="classtesting_1_1internal_1_1_mutex" kindref="compound">internal::Mutex</ref></type>
        <definition>internal::Mutex testing::UnitTest::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1320" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1_unit_test_1a834685f92009d21b21a7307f4cbfb6e5" prot="private" static="no" mutable="no">
        <type><ref refid="classtesting_1_1internal_1_1_unit_test_impl" kindref="compound">internal::UnitTestImpl</ref> *</type>
        <definition>internal::UnitTestImpl* testing::UnitTest::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1326" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a24192400b70b3b946746954e9574fb8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1_unit_test" kindref="compound">UnitTest</ref> *</type>
        <definition>UnitTest * testing::UnitTest::GetInstance</definition>
        <argsstring>()</argsstring>
        <name>GetInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1156" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3972" bodyend="3991"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a2febc800536b44500565f4c423f359d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::Run</definition>
        <argsstring>() GTEST_MUST_USE_RESULT_</argsstring>
        <name>Run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1164" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4185" bodyend="4261"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1af6809b7747785c80f7a2f31f6b39b152" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * testing::UnitTest::original_working_dir</definition>
        <argsstring>() const</argsstring>
        <name>original_working_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1168" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4265" bodyend="4267"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a2bf61896036ae03edbd7bceed14f9e18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1_test_case" kindref="compound">TestCase</ref> *</type>
        <definition>const TestCase * testing::UnitTest::current_test_case</definition>
        <argsstring>() const GTEST_LOCK_EXCLUDED_(mutex_)</argsstring>
        <name>current_test_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1172" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4271" bodyend="4275"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a088eaf814a33085ace3d881d22e6bdea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1_test_info" kindref="compound">TestInfo</ref> *</type>
        <definition>const TestInfo * testing::UnitTest::current_test_info</definition>
        <argsstring>() const GTEST_LOCK_EXCLUDED_(mutex_)</argsstring>
        <name>current_test_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1177" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4279" bodyend="4283"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1adddc090a06f2d3a0e68f3762ee262688" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::random_seed</definition>
        <argsstring>() const</argsstring>
        <name>random_seed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1181" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4286" bodyend="4286"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1acaa2ab71f53c25ffe0242a91c14e173f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::successful_test_case_count</definition>
        <argsstring>() const</argsstring>
        <name>successful_test_case_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1193" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3994" bodyend="3996"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1abc0fa297a4103f7cdd9627ae27d9d0ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::failed_test_case_count</definition>
        <argsstring>() const</argsstring>
        <name>failed_test_case_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1196" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="3999" bodyend="4001"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a93fc8f4eebc3212d06468ad216830ced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::total_test_case_count</definition>
        <argsstring>() const</argsstring>
        <name>total_test_case_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1199" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4004" bodyend="4006"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a965248fbe72f9fede5de921b6666943b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::test_case_to_run_count</definition>
        <argsstring>() const</argsstring>
        <name>test_case_to_run_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1203" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4010" bodyend="4012"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a49ee8056e357ad497e67399447dd5a40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::successful_test_count</definition>
        <argsstring>() const</argsstring>
        <name>successful_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1206" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4015" bodyend="4017"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1ace1c860482b4ae5c341df5a9665e5c08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::failed_test_count</definition>
        <argsstring>() const</argsstring>
        <name>failed_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1209" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4020" bodyend="4020"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a2a2835db178d5c8569507db9f0a3d54f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::reportable_disabled_test_count</definition>
        <argsstring>() const</argsstring>
        <name>reportable_disabled_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1212" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4023" bodyend="4025"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1ad69ccf3d4a9bc7333badeafbde3bc76b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::disabled_test_count</definition>
        <argsstring>() const</argsstring>
        <name>disabled_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1215" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4028" bodyend="4030"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a449d0e0350ef146040cd37679c005248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::reportable_test_count</definition>
        <argsstring>() const</argsstring>
        <name>reportable_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1218" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4033" bodyend="4035"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1af6e02fcf76fd7247687f4e8af6e7ef41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::total_test_count</definition>
        <argsstring>() const</argsstring>
        <name>total_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1221" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4038" bodyend="4038"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a461f46b2976f135d2a65e8d3def746e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::UnitTest::test_to_run_count</definition>
        <argsstring>() const</argsstring>
        <name>test_to_run_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1224" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4041" bodyend="4041"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a3d83fe1cc5570a1c34f9754b0f56d65f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TimeInMillis</type>
        <definition>internal::TimeInMillis testing::UnitTest::start_timestamp</definition>
        <argsstring>() const</argsstring>
        <name>start_timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1228" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4045" bodyend="4047"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1acf608411a17cb3b40a1e9d724f262b3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TimeInMillis</type>
        <definition>internal::TimeInMillis testing::UnitTest::elapsed_time</definition>
        <argsstring>() const</argsstring>
        <name>elapsed_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1231" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4050" bodyend="4052"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a7c9b327bc14cb8a282c789dc6513a55b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::UnitTest::Passed</definition>
        <argsstring>() const</argsstring>
        <name>Passed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1234" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4055" bodyend="4055"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a706f29e765916616b11a271a65948727" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::UnitTest::Failed</definition>
        <argsstring>() const</argsstring>
        <name>Failed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1238" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4059" bodyend="4059"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a724d4c8be4481e0c1523a22b72dc7dac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1_test_case" kindref="compound">TestCase</ref> *</type>
        <definition>const TestCase * testing::UnitTest::GetTestCase</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetTestCase</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1242" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4063" bodyend="4065"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1aa59dde4c3dc43a920ed142a27670686c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1_test_result" kindref="compound">TestResult</ref> &amp;</type>
        <definition>const TestResult &amp; testing::UnitTest::ad_hoc_test_result</definition>
        <argsstring>() const</argsstring>
        <name>ad_hoc_test_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1246" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4069" bodyend="4071"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1aac10085cf7c0d1751306db10cdd953cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1_test_event_listeners" kindref="compound">TestEventListeners</ref> &amp;</type>
        <definition>TestEventListeners &amp; testing::UnitTest::listeners</definition>
        <argsstring>()</argsstring>
        <name>listeners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1250" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4081" bodyend="4083"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a1eb8e999b8696889bf1c64b4f0161203" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1_environment" kindref="compound">Environment</ref> *</type>
        <definition>Environment * testing::UnitTest::AddEnvironment</definition>
        <argsstring>(Environment *env)</argsstring>
        <name>AddEnvironment</name>
        <param>
          <type><ref refid="classtesting_1_1_environment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1262" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4095" bodyend="4102"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a1d157d2e9a5c1d3405333410c6b13932" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::UnitTest::AddTestPartResult</definition>
        <argsstring>(TestPartResult::Type result_type, const char *file_name, int line_number, const std::string &amp;message, const std::string &amp;os_stack_trace) GTEST_LOCK_EXCLUDED_(mutex_)</argsstring>
        <name>AddTestPartResult</name>
        <param>
          <type>TestPartResult::Type</type>
          <declname>result_type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_number</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>os_stack_trace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1268" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4108" bodyend="4168"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a2c96a4a02c34095e07c6999e7686367f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::UnitTest::RecordProperty</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>RecordProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1280" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4175" bodyend="4178"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1ad741830280b12c07874b2d37a6ee5c02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1_test_case" kindref="compound">TestCase</ref> *</type>
        <definition>TestCase * testing::UnitTest::GetMutableTestCase</definition>
        <argsstring>(int i)</argsstring>
        <name>GetMutableTestCase</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1284" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4075" bodyend="4077"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a4df5d11a58affb337d7fa62eaa07690e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_unit_test_impl" kindref="compound">internal::UnitTestImpl</ref> *</type>
        <definition>internal::UnitTestImpl* testing::UnitTest::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1287" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1287" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a266a9f49070d1959c1c9d649423879b4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1internal_1_1_unit_test_impl" kindref="compound">internal::UnitTestImpl</ref> *</type>
        <definition>const internal::UnitTestImpl* testing::UnitTest::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1288" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1288" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a5e646d37f980429c310af696c8775f5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::UnitTest::UnitTest</definition>
        <argsstring>()</argsstring>
        <name>UnitTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1304" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4299" bodyend="4301"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a8b66a9332e29673a6a389ea1731ee6b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>testing::UnitTest::~UnitTest</definition>
        <argsstring>()</argsstring>
        <name>~UnitTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1307" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4304" bodyend="4306"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1af455b953108ff09b3b6e41011653e78a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::UnitTest::PushGTestTrace</definition>
        <argsstring>(const internal::TraceInfo &amp;trace) GTEST_LOCK_EXCLUDED_(mutex_)</argsstring>
        <name>PushGTestTrace</name>
        <param>
          <type>const <ref refid="structtesting_1_1internal_1_1_trace_info" kindref="compound">internal::TraceInfo</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1311" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4310" bodyend="4314"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a70b3e3282778bc9a36520fe0a8be3c57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::UnitTest::PopGTestTrace</definition>
        <argsstring>() GTEST_LOCK_EXCLUDED_(mutex_)</argsstring>
        <name>PopGTestTrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1315" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="4317" bodyend="4321"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_unit_test_1a1e04cfb4f837cea288a98f2a64c43bba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::UnitTest::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(UnitTest)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1_unit_test" kindref="compound">UnitTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1329" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="1151" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="1151" bodyend="1330"/>
    <listofallmembers>
      <member refid="classtesting_1_1_unit_test_1aa59dde4c3dc43a920ed142a27670686c" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>ad_hoc_test_result</name></member>
      <member refid="classtesting_1_1_unit_test_1a1eb8e999b8696889bf1c64b4f0161203" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>AddEnvironment</name></member>
      <member refid="classtesting_1_1_unit_test_1a5ec26e4c31220ff8e769cc09689a4d6d" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>AddGlobalTestEnvironment</name></member>
      <member refid="classtesting_1_1_unit_test_1a1d157d2e9a5c1d3405333410c6b13932" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>AddTestPartResult</name></member>
      <member refid="classtesting_1_1_unit_test_1a2bf61896036ae03edbd7bceed14f9e18" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>current_test_case</name></member>
      <member refid="classtesting_1_1_unit_test_1a088eaf814a33085ace3d881d22e6bdea" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>current_test_info</name></member>
      <member refid="classtesting_1_1_unit_test_1ad69ccf3d4a9bc7333badeafbde3bc76b" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>disabled_test_count</name></member>
      <member refid="classtesting_1_1_unit_test_1acf608411a17cb3b40a1e9d724f262b3b" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>elapsed_time</name></member>
      <member refid="classtesting_1_1_unit_test_1a706f29e765916616b11a271a65948727" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>Failed</name></member>
      <member refid="classtesting_1_1_unit_test_1abc0fa297a4103f7cdd9627ae27d9d0ef" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>failed_test_case_count</name></member>
      <member refid="classtesting_1_1_unit_test_1ace1c860482b4ae5c341df5a9665e5c08" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>failed_test_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a24192400b70b3b946746954e9574fb8e" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>GetInstance</name></member>
      <member refid="classtesting_1_1_unit_test_1ad741830280b12c07874b2d37a6ee5c02" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>GetMutableTestCase</name></member>
      <member refid="classtesting_1_1_unit_test_1a724d4c8be4481e0c1523a22b72dc7dac" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>GetTestCase</name></member>
      <member refid="classtesting_1_1_unit_test_1a1e04cfb4f837cea288a98f2a64c43bba" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1_unit_test_1a4df5d11a58affb337d7fa62eaa07690e" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>impl</name></member>
      <member refid="classtesting_1_1_unit_test_1a266a9f49070d1959c1c9d649423879b4" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>impl</name></member>
      <member refid="classtesting_1_1_unit_test_1a834685f92009d21b21a7307f4cbfb6e5" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>impl_</name></member>
      <member refid="classtesting_1_1_unit_test_1a183151aa061362c87572e743fe233db1" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>internal::AssertHelper</name></member>
      <member refid="classtesting_1_1_unit_test_1a56e56be7066957d612e53b5c60f6ac08" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>internal::GetUnitTestImpl</name></member>
      <member refid="classtesting_1_1_unit_test_1a73f5a158c13793b90c80d854c9a75120" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>internal::ReportFailureInUnknownLocation</name></member>
      <member refid="classtesting_1_1_unit_test_1afa3927576c08d7b1e197ba16b2b3dcb7" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>internal::ScopedTrace</name></member>
      <member refid="classtesting_1_1_unit_test_1adc037d188dab349a94868991955c9cd4" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>internal::StreamingListenerTest</name></member>
      <member refid="classtesting_1_1_unit_test_1ae970f89a9f477a349fe5778be85ef42e" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>internal::UnitTestRecordPropertyTestHelper</name></member>
      <member refid="classtesting_1_1_unit_test_1aac10085cf7c0d1751306db10cdd953cb" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>listeners</name></member>
      <member refid="classtesting_1_1_unit_test_1abb94ef45cf0ab43be81ac6d5b1364132" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>mutex_</name></member>
      <member refid="classtesting_1_1_unit_test_1af6809b7747785c80f7a2f31f6b39b152" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>original_working_dir</name></member>
      <member refid="classtesting_1_1_unit_test_1a7c9b327bc14cb8a282c789dc6513a55b" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>Passed</name></member>
      <member refid="classtesting_1_1_unit_test_1a70b3e3282778bc9a36520fe0a8be3c57" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>PopGTestTrace</name></member>
      <member refid="classtesting_1_1_unit_test_1af455b953108ff09b3b6e41011653e78a" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>PushGTestTrace</name></member>
      <member refid="classtesting_1_1_unit_test_1adddc090a06f2d3a0e68f3762ee262688" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>random_seed</name></member>
      <member refid="classtesting_1_1_unit_test_1a2c96a4a02c34095e07c6999e7686367f" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1_unit_test_1a2a2835db178d5c8569507db9f0a3d54f" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>reportable_disabled_test_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a449d0e0350ef146040cd37679c005248" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>reportable_test_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a2febc800536b44500565f4c423f359d3" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>Run</name></member>
      <member refid="classtesting_1_1_unit_test_1a3d83fe1cc5570a1c34f9754b0f56d65f" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>start_timestamp</name></member>
      <member refid="classtesting_1_1_unit_test_1acaa2ab71f53c25ffe0242a91c14e173f" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>successful_test_case_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a49ee8056e357ad497e67399447dd5a40" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>successful_test_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a5b78b1c2e1fa07ffed92da365593eaa4" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>Test</name></member>
      <member refid="classtesting_1_1_unit_test_1a965248fbe72f9fede5de921b6666943b" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>test_case_to_run_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a461f46b2976f135d2a65e8d3def746e9" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>test_to_run_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a93fc8f4eebc3212d06468ad216830ced" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>total_test_case_count</name></member>
      <member refid="classtesting_1_1_unit_test_1af6e02fcf76fd7247687f4e8af6e7ef41" prot="public" virt="non-virtual"><scope>testing::UnitTest</scope><name>total_test_count</name></member>
      <member refid="classtesting_1_1_unit_test_1a5e646d37f980429c310af696c8775f5c" prot="private" virt="non-virtual"><scope>testing::UnitTest</scope><name>UnitTest</name></member>
      <member refid="classtesting_1_1_unit_test_1a8b66a9332e29673a6a389ea1731ee6b2" prot="private" virt="virtual"><scope>testing::UnitTest</scope><name>~UnitTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
