<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacegtest__output__test" kind="namespace" language="Python">
    <compoundname>gtest_output_test</compoundname>
    <innerclass refid="classgtest__output__test_1_1_g_test_output_test" prot="public">gtest_output_test::GTestOutputTest</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gtest__output__test_8py_1a9549d664d25c13351c08bfe88072f5cf" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.__author__</definition>
        <argsstring></argsstring>
        <name>__author__</name>
        <initializer>=  &apos;wan@google.com (Zhanyong Wan)&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="41" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a25addad68fc28461f31e7f473bb7643f" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.GENGOLDEN_FLAG</definition>
        <argsstring></argsstring>
        <name>GENGOLDEN_FLAG</name>
        <initializer>=  &apos;--gengolden&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="51" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a3b2d61497a354f214b5a086dcff420ee" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.CATCH_EXCEPTIONS_ENV_VAR_NAME</definition>
        <argsstring></argsstring>
        <name>CATCH_EXCEPTIONS_ENV_VAR_NAME</name>
        <initializer>=  &apos;GTEST_CATCH_EXCEPTIONS&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="52" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a76e823e0e56e3c25aa8b0aab4431f763" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.IS_WINDOWS</definition>
        <argsstring></argsstring>
        <name>IS_WINDOWS</name>
        <initializer>=  &apos;nt&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="54" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a317ece7d11d9103a7bdbf0320b64a981" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.GOLDEN_NAME</definition>
        <argsstring></argsstring>
        <name>GOLDEN_NAME</name>
        <initializer>=  &apos;gtest_output_test_golden_lin.txt&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="57" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a92a4b0bd0a29b350050d03bccb125f60" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gtest_output_test.PROGRAM_PATH</definition>
        <argsstring></argsstring>
        <name>PROGRAM_PATH</name>
        <initializer>=  gtest_test_utils.GetTestExecutablePath(&apos;gtest_output_test_&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="59" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1ad57de209fb07e1002c8a929dd8a15dc9" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple gtest_output_test.COMMAND_LIST_TESTS</definition>
        <argsstring></argsstring>
        <name>COMMAND_LIST_TESTS</name>
        <initializer>=  ({}, [PROGRAM_PATH, &apos;--gtest_list_tests&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="63" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1adbeb34904b377333d8168d1b54584b53" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple gtest_output_test.COMMAND_WITH_COLOR</definition>
        <argsstring></argsstring>
        <name>COMMAND_WITH_COLOR</name>
        <initializer>=  ({}, [PROGRAM_PATH, &apos;--gtest_color=yes&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="64" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a1c27d93a57990d21461436f2d5ff3064" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple gtest_output_test.COMMAND_WITH_TIME</definition>
        <argsstring></argsstring>
        <name>COMMAND_WITH_TIME</name>
        <initializer>=  ({}, [PROGRAM_PATH,
                          &apos;--gtest_print_time&apos;,
                          &apos;internal_skip_environment_and_ad_hoc_tests&apos;,
                          &apos;--gtest_filter=FatalFailureTest.*:LoggingTest.*&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="65" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a0ef963a39dc8e53616ba2dab9f128def" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple gtest_output_test.COMMAND_WITH_DISABLED</definition>
        <argsstring></argsstring>
        <name>COMMAND_WITH_DISABLED</name>
        <initializer>=  (
    {}, [PROGRAM_PATH,
         &apos;--gtest_also_run_disabled_tests&apos;,
         &apos;internal_skip_environment_and_ad_hoc_tests&apos;,
         &apos;--gtest_filter=*DISABLED_*&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="69" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a462eef2a00782001d491b7a38a847bec" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple gtest_output_test.COMMAND_WITH_SHARDING</definition>
        <argsstring></argsstring>
        <name>COMMAND_WITH_SHARDING</name>
        <initializer>=  (
    {&apos;GTEST_SHARD_INDEX&apos;: &apos;1&apos;, &apos;GTEST_TOTAL_SHARDS&apos;: &apos;2&apos;},
    [PROGRAM_PATH,
     &apos;internal_skip_environment_and_ad_hoc_tests&apos;,
     &apos;--gtest_filter=PassingTest.*&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="74" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1aa592d897eeba0ac7e1a3c7d84f182c11" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gtest_output_test.GOLDEN_PATH</definition>
        <argsstring></argsstring>
        <name>GOLDEN_PATH</name>
        <initializer>=  os.path.join(gtest_test_utils.GetSourceDir(), GOLDEN_NAME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="80" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a1e17eb07fcc42eefeed11a5f87b2d3ae" prot="public" static="no" mutable="no">
        <type>def</type>
        <definition>def gtest_output_test.test_list</definition>
        <argsstring></argsstring>
        <name>test_list</name>
        <initializer>=  GetShellCommandOutput(COMMAND_LIST_TESTS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="248" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a401e837dae10d6c728bd74684884a77f" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.SUPPORTS_DEATH_TESTS</definition>
        <argsstring></argsstring>
        <name>SUPPORTS_DEATH_TESTS</name>
        <initializer>=  &apos;DeathTest&apos; in test_list</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="249" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1aa762abdf62ac6efe1aa2405b3f506380" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.SUPPORTS_TYPED_TESTS</definition>
        <argsstring></argsstring>
        <name>SUPPORTS_TYPED_TESTS</name>
        <initializer>=  &apos;<ref refid="class_typed_test" kindref="compound">TypedTest</ref>&apos; in test_list</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="250" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a9c611ee196914defbb5d32a47c606640" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string gtest_output_test.SUPPORTS_THREADS</definition>
        <argsstring></argsstring>
        <name>SUPPORTS_THREADS</name>
        <initializer>=  &apos;ExpectFailureWithThreadsTest&apos; in test_list</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="251" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a1e8e722c50268029e33d6fde753cff54" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gtest_output_test.SUPPORTS_STACK_TRACES</definition>
        <argsstring></argsstring>
        <name>SUPPORTS_STACK_TRACES</name>
        <initializer>=  False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="252" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1aa370a0da630f54a564d79507df196854" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple gtest_output_test.CAN_GENERATE_GOLDEN_FILE</definition>
        <argsstring></argsstring>
        <name>CAN_GENERATE_GOLDEN_FILE</name>
        <initializer>=  (SUPPORTS_DEATH_TESTS and
                            SUPPORTS_TYPED_TESTS and
                            SUPPORTS_THREADS and
                            not IS_WINDOWS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="254" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1ab2bb62f6e360282592cb10d76c25750c" prot="public" static="no" mutable="no">
        <type>def</type>
        <definition>def gtest_output_test.output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <initializer>=  GetOutputOfAllCommands()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="326" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1a0a02ae5e249d93c376bbce6fb87f9405" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gtest_output_test.golden_file</definition>
        <argsstring></argsstring>
        <name>golden_file</name>
        <initializer>=  open(GOLDEN_PATH, &apos;wb&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="327" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gtest__output__test_8py_1ac696d0798ad7d08cb2e61070824750e2" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple gtest_output_test.message</definition>
        <argsstring></argsstring>
        <name>message</name>
        <initializer>=  (
          )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="331" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gtest__output__test_8py_1aa9ee981e855b986a7fc513a4ab68dd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.ToUnixLineEnding</definition>
        <argsstring>(s)</argsstring>
        <name>ToUnixLineEnding</name>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Changes all Windows/Mac line endings in s to UNIX line endings.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="83" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1ad5ff97e572c5ef7aaf1a414eb52282cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.RemoveLocations</definition>
        <argsstring>(test_output)</argsstring>
        <name>RemoveLocations</name>
        <param>
          <type>test_output</type>
          <defname>test_output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes all file location info from a Google Test program&apos;s output.

Args:
     test_output:  the output of a Google Test program.

Returns:
     output with all file location info (in the form of
     &apos;DIRECTORY/FILE_NAME:LINE_NUMBER: &apos;or
     &apos;DIRECTORY\\FILE_NAME(LINE_NUMBER): &apos;) replaced by
     &apos;FILE_NAME:#: &apos;.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="89" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="89" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a15bbf618beea12685dc5c9630ec18120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.RemoveStackTraceDetails</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveStackTraceDetails</name>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes all stack traces from a Google Test program&apos;s output.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="105" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="105" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a5fa2201583a11780279aa720dea5dd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.RemoveStackTraces</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveStackTraces</name>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes all traces of stack traces from a Google Test program&apos;s output.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="113" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a2f40fbdd1c9f47da27109abb3fd2d80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.RemoveTime</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveTime</name>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes all time information from a Google Test program&apos;s output.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="120" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1addbdacea2fbdaacb3a0328425b3218c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.RemoveTypeInfoDetails</definition>
        <argsstring>(test_output)</argsstring>
        <name>RemoveTypeInfoDetails</name>
        <param>
          <type>test_output</type>
          <defname>test_output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes compiler-specific type info from Google Test program&apos;s output.

Args:
     test_output:  the output of a Google Test program.

Returns:
     output with type information normalized to canonical form.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="126" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="126" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a597325056856f8805a518c2952a3233e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.NormalizeToCurrentPlatform</definition>
        <argsstring>(test_output)</argsstring>
        <name>NormalizeToCurrentPlatform</name>
        <param>
          <type>test_output</type>
          <defname>test_output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Normalizes platform specific output details for easier comparison.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="140" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="140" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a74ae74aaa09cc2651aabbec468a878d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.RemoveTestCounts</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveTestCounts</name>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes test counts from a Google Test program&apos;s output.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="154" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="154" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1ad1c5969bc410dc44be069ab453ce8840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.RemoveMatchingTests</definition>
        <argsstring>(test_output, pattern)</argsstring>
        <name>RemoveMatchingTests</name>
        <param>
          <type>test_output</type>
          <defname>test_output</defname>
        </param>
        <param>
          <type>pattern</type>
          <defname>pattern</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes output of specified tests from a Google Test program&apos;s output.

This function strips not only the beginning and the end of a test but also
all output in between.

Args:
  test_output:       A string containing the test output.
  pattern:           A regex string that matches names of test cases or
                     tests to remove.

Returns:
  Contents of test_output with tests whose names match pattern removed.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="168" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="168" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a457700303177f330388e249a23b0c63a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.NormalizeOutput</definition>
        <argsstring>(output)</argsstring>
        <name>NormalizeOutput</name>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Normalizes output (the output of gtest_output_test_.exe).</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="191" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="191" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a0dbdd37611259249a58ab13ed60d8172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.GetShellCommandOutput</definition>
        <argsstring>(env_cmd)</argsstring>
        <name>GetShellCommandOutput</name>
        <param>
          <type>env_cmd</type>
          <defname>env_cmd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Runs a command in a sub-process, and returns its output in a string.

Args:
  env_cmd: The shell command. A 2-tuple where element 0 is a dict of extra
           environment variables to set, and element 1 is a string with
           the command and any flags.

Returns:
  A string with the command&apos;s combined standard and diagnostic output.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="201" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="201" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a953ec555d073485fbc7d9a092e8f1dea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.GetCommandOutput</definition>
        <argsstring>(env_cmd)</argsstring>
        <name>GetCommandOutput</name>
        <param>
          <type>env_cmd</type>
          <defname>env_cmd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Runs a command and returns its output with all file location
info stripped off.

Args:
  env_cmd:  The shell command. A 2-tuple where element 0 is a dict of extra
            environment variables to set, and element 1 is a string with
            the command and any flags.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="222" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="222" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="gtest__output__test_8py_1a9d88a4a9a91b97a369abac2170a23ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gtest_output_test.GetOutputOfAllCommands</definition>
        <argsstring>()</argsstring>
        <name>GetOutputOfAllCommands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns concatenated output from several representative commands.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="239" column="1" bodyfile="vendor/googletest/googletest/test/gtest_output_test.py" bodystart="239" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googletest/test/gtest_output_test.py" line="1" column="1"/>
  </compounddef>
</doxygen>
