<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_max_bipartite_match_state" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::MaxBipartiteMatchState</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1a628d16d346432c1556097b94fad27e42" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t testing::internal::MaxBipartiteMatchState::kUnused</definition>
        <argsstring></argsstring>
        <name>kUnused</name>
        <initializer>= static_cast&lt;size_t&gt;(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="241" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1aba20adc38680caf7db98321cfde24dec" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtesting_1_1internal_1_1_match_matrix" kindref="compound">MatchMatrix</ref> *</type>
        <definition>const MatchMatrix* testing::internal::MaxBipartiteMatchState::graph_</definition>
        <argsstring></argsstring>
        <name>graph_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="287" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1af63f4d7546e914a13b43f30e63f27b6f" prot="private" static="no" mutable="no">
        <type>::std::vector&lt; size_t &gt;</type>
        <definition>::std::vector&lt;size_t&gt; testing::internal::MaxBipartiteMatchState::left_</definition>
        <argsstring></argsstring>
        <name>left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="299" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1a85c29e270fd44f16458cf48cdc06d19a" prot="private" static="no" mutable="no">
        <type>::std::vector&lt; size_t &gt;</type>
        <definition>::std::vector&lt;size_t&gt; testing::internal::MaxBipartiteMatchState::right_</definition>
        <argsstring></argsstring>
        <name>right_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="300" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="300" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1a9d0166d5cc7afd1b741f6c312df72b54" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::MaxBipartiteMatchState::MaxBipartiteMatchState</definition>
        <argsstring>(const MatchMatrix &amp;graph)</argsstring>
        <name>MaxBipartiteMatchState</name>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1_match_matrix" kindref="compound">MatchMatrix</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="200" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="200" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1af6efab664ee390925b24d023f1368192" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ElementMatcherPairs</type>
        <definition>ElementMatcherPairs testing::internal::MaxBipartiteMatchState::Compute</definition>
        <argsstring>()</argsstring>
        <name>Compute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="207" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="207" bodyend="238"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1a8aa8dc82be659772a1dd68eb00d7a858" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::MaxBipartiteMatchState::TryAugment</definition>
        <argsstring>(size_t ilhs, ::std::vector&lt; char &gt; *seen)</argsstring>
        <name>TryAugment</name>
        <param>
          <type>size_t</type>
          <declname>ilhs</declname>
        </param>
        <param>
          <type>::std::vector&lt; char &gt; *</type>
          <declname>seen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="259" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="259" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_max_bipartite_match_state_1a633fb7cfb6634dbbb1b62637efc540f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::MaxBipartiteMatchState::GTEST_DISALLOW_ASSIGN_</definition>
        <argsstring>(MaxBipartiteMatchState)</argsstring>
        <name>GTEST_DISALLOW_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1_max_bipartite_match_state" kindref="compound">MaxBipartiteMatchState</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="302" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/src/gmock-matchers.cc" line="198" column="1" bodyfile="vendor/googletest/googlemock/src/gmock-matchers.cc" bodystart="198" bodyend="303"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1af6efab664ee390925b24d023f1368192" prot="public" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>Compute</name></member>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1aba20adc38680caf7db98321cfde24dec" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>graph_</name></member>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1a633fb7cfb6634dbbb1b62637efc540f8" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>GTEST_DISALLOW_ASSIGN_</name></member>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1a628d16d346432c1556097b94fad27e42" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>kUnused</name></member>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1af63f4d7546e914a13b43f30e63f27b6f" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>left_</name></member>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1a9d0166d5cc7afd1b741f6c312df72b54" prot="public" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>MaxBipartiteMatchState</name></member>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1a85c29e270fd44f16458cf48cdc06d19a" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>right_</name></member>
      <member refid="classtesting_1_1internal_1_1_max_bipartite_match_state_1a8aa8dc82be659772a1dd68eb00d7a858" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>TryAugment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
