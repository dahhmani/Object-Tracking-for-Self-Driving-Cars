<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sample8__unittest_8cc" kind="file" language="C++">
    <compoundname>sample8_unittest.cc</compoundname>
    <includes refid="prime__tables_8h" local="yes">prime_tables.h</includes>
    <includes refid="gtest_8h" local="yes">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="4591">
        <label>sys/stat.h</label>
      </node>
      <node id="4610">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4604">
        <label>iomanip</label>
      </node>
      <node id="4580">
        <label>limits</label>
      </node>
      <node id="4617">
        <label>assert.h</label>
      </node>
      <node id="4596">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="4615">
        <label>iterator</label>
      </node>
      <node id="4603">
        <label>float.h</label>
      </node>
      <node id="4621">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="4577">
        <label>prime_tables.h</label>
        <link refid="prime__tables_8h_source"/>
        <childnode refid="4578" relation="include">
        </childnode>
      </node>
      <node id="4587">
        <label>stdlib.h</label>
      </node>
      <node id="4608">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="4589" relation="include">
        </childnode>
        <childnode refid="4594" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4622">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="4623" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4608" relation="include">
        </childnode>
      </node>
      <node id="4594">
        <label>string</label>
      </node>
      <node id="4605">
        <label>map</label>
      </node>
      <node id="4620">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4586">
        <label>stddef.h</label>
      </node>
      <node id="4625">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="4581">
        <label>ostream</label>
      </node>
      <node id="4597">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="4611">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="4612" relation="include">
        </childnode>
      </node>
      <node id="4590">
        <label>sys/types.h</label>
      </node>
      <node id="4589">
        <label>string.h</label>
      </node>
      <node id="4601">
        <label>typeinfo</label>
      </node>
      <node id="4598">
        <label>unistd.h</label>
      </node>
      <node id="4582">
        <label>vector</label>
      </node>
      <node id="4619">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="4607">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4595">
        <label>utility</label>
      </node>
      <node id="4593">
        <label>sstream</label>
      </node>
      <node id="4616">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="4587" relation="include">
        </childnode>
        <childnode refid="4617" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4623">
        <label>iosfwd</label>
      </node>
      <node id="4609">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="4608" relation="include">
        </childnode>
      </node>
      <node id="4592">
        <label>iostream</label>
      </node>
      <node id="4602">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="4595" relation="include">
        </childnode>
      </node>
      <node id="4579">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4581" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4608" relation="include">
        </childnode>
        <childnode refid="4611" relation="include">
        </childnode>
        <childnode refid="4607" relation="include">
        </childnode>
        <childnode refid="4613" relation="include">
        </childnode>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4621" relation="include">
        </childnode>
        <childnode refid="4622" relation="include">
        </childnode>
        <childnode refid="4624" relation="include">
        </childnode>
        <childnode refid="4625" relation="include">
        </childnode>
      </node>
      <node id="4599">
        <label>strings.h</label>
      </node>
      <node id="4585">
        <label>ctype.h</label>
      </node>
      <node id="4624">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="4584" relation="include">
        </childnode>
        <childnode refid="4610" relation="include">
        </childnode>
      </node>
      <node id="4584">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="4585" relation="include">
        </childnode>
        <childnode refid="4586" relation="include">
        </childnode>
        <childnode refid="4587" relation="include">
        </childnode>
        <childnode refid="4588" relation="include">
        </childnode>
        <childnode refid="4589" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
        <childnode refid="4591" relation="include">
        </childnode>
        <childnode refid="4578" relation="include">
        </childnode>
        <childnode refid="4592" relation="include">
        </childnode>
        <childnode refid="4593" relation="include">
        </childnode>
        <childnode refid="4594" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4596" relation="include">
        </childnode>
        <childnode refid="4597" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
        <childnode refid="4599" relation="include">
        </childnode>
        <childnode refid="4600" relation="include">
        </childnode>
        <childnode refid="4601" relation="include">
        </childnode>
        <childnode refid="4602" relation="include">
        </childnode>
      </node>
      <node id="4583">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="4584" relation="include">
        </childnode>
        <childnode refid="4585" relation="include">
        </childnode>
        <childnode refid="4603" relation="include">
        </childnode>
        <childnode refid="4589" relation="include">
        </childnode>
        <childnode refid="4604" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4605" relation="include">
        </childnode>
        <childnode refid="4606" relation="include">
        </childnode>
        <childnode refid="4594" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4607" relation="include">
        </childnode>
        <childnode refid="4608" relation="include">
        </childnode>
        <childnode refid="4609" relation="include">
        </childnode>
        <childnode refid="4610" relation="include">
        </childnode>
      </node>
      <node id="4614">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="4585" relation="include">
        </childnode>
        <childnode refid="4615" relation="include">
        </childnode>
        <childnode refid="4606" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4616" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
        <childnode refid="4618" relation="include">
        </childnode>
      </node>
      <node id="4606">
        <label>set</label>
      </node>
      <node id="4613">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="4584" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4620" relation="include">
        </childnode>
      </node>
      <node id="4578">
        <label>algorithm</label>
      </node>
      <node id="4600">
        <label>regex.h</label>
      </node>
      <node id="4588">
        <label>stdio.h</label>
      </node>
      <node id="4612">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4588" relation="include">
        </childnode>
      </node>
      <node id="4576">
        <label>vendor/googletest/googletest/samples/sample8_unittest.cc</label>
        <link refid="sample8__unittest_8cc"/>
        <childnode refid="4577" relation="include">
        </childnode>
        <childnode refid="4579" relation="include">
        </childnode>
      </node>
      <node id="4618">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="4581" relation="include">
        </childnode>
        <childnode refid="4593" relation="include">
        </childnode>
        <childnode refid="4594" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sample8__unittest_8cc_1a1c3968ab4f0c56dc04e43cb10607c0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(DummyTest, CombineIsNotSupportedOnThisPlatform)</argsstring>
        <name>TEST</name>
        <param>
          <type>DummyTest</type>
        </param>
        <param>
          <type>CombineIsNotSupportedOnThisPlatform</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/samples/sample8_unittest.cc" line="171" column="1" bodyfile="vendor/googletest/googletest/samples/sample8_unittest.cc" bodystart="171" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>vladl@google.com<sp/>(Vlad<sp/>Losev)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>sample<sp/>shows<sp/>how<sp/>to<sp/>test<sp/>code<sp/>relying<sp/>on<sp/>some<sp/>global<sp/>flag<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Combine()<sp/>helps<sp/>with<sp/>generating<sp/>all<sp/>possible<sp/>combinations<sp/>of<sp/>such<sp/>flags,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>each<sp/>test<sp/>is<sp/>given<sp/>one<sp/>combination<sp/>as<sp/>a<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>class<sp/>definitions<sp/>to<sp/>test<sp/>from<sp/>this<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;prime_tables.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_COMBINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Suppose<sp/>we<sp/>want<sp/>to<sp/>introduce<sp/>a<sp/>new,<sp/>improved<sp/>implementation<sp/>of<sp/>PrimeTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>combines<sp/>speed<sp/>of<sp/>PrecalcPrimeTable<sp/>and<sp/>versatility<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OnTheFlyPrimeTable<sp/>(see<sp/>prime_tables.h).<sp/>Inside<sp/>it<sp/>instantiates<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PrecalcPrimeTable<sp/>and<sp/>OnTheFlyPrimeTable<sp/>and<sp/>uses<sp/>the<sp/>one<sp/>that<sp/>is<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appropriate<sp/>under<sp/>the<sp/>circumstances.<sp/>But<sp/>in<sp/>low<sp/>memory<sp/>conditions,<sp/>it<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>told<sp/>to<sp/>instantiate<sp/>without<sp/>PrecalcPrimeTable<sp/>instance<sp/>at<sp/>all<sp/>and<sp/>use<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OnTheFlyPrimeTable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HybridPrimeTable<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_prime_table" kindref="compound">PrimeTable</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>HybridPrimeTable(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_on_the_fly,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_precalculated)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>on_the_fly_impl_(new<sp/><ref refid="class_on_the_fly_prime_table" kindref="compound">OnTheFlyPrimeTable</ref>),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precalc_impl_(force_on_the_fly<sp/>?<sp/>NULL<sp/>:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/><ref refid="class_pre_calculated_prime_table" kindref="compound">PreCalculatedPrimeTable</ref>(max_precalculated)),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_precalculated_(max_precalculated)<sp/>{}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~HybridPrimeTable()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>on_the_fly_impl_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>precalc_impl_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPrime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(precalc_impl_<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>max_precalculated_)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>precalc_impl_-&gt;IsPrime(n);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>on_the_fly_impl_-&gt;IsPrime(n);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetNextPrime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_prime<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(precalc_impl_<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>max_precalculated_)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_prime<sp/>=<sp/>precalc_impl_-&gt;GetNextPrime(p);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_prime<sp/>!=<sp/>-1<sp/>?<sp/>next_prime<sp/>:<sp/>on_the_fly_impl_-&gt;GetNextPrime(p);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="class_on_the_fly_prime_table" kindref="compound">OnTheFlyPrimeTable</ref>*<sp/>on_the_fly_impl_;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="class_pre_calculated_prime_table" kindref="compound">PreCalculatedPrimeTable</ref>*<sp/>precalc_impl_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_precalculated_;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">using<sp/>::testing::TestWithParam;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">using<sp/>::testing::Bool;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">using<sp/>::testing::Values;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">using<sp/>::testing::Combine;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>test<sp/>all<sp/>code<sp/>paths<sp/>for<sp/>HybridPrimeTable<sp/>we<sp/>must<sp/>test<sp/>it<sp/>with<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>both<sp/>within<sp/>and<sp/>outside<sp/>PreCalculatedPrimeTable&apos;s<sp/>capacity<sp/>and<sp/>also<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PreCalculatedPrimeTable<sp/>disabled.<sp/>We<sp/>do<sp/>this<sp/>by<sp/>defining<sp/>fixture<sp/>which<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>accept<sp/>different<sp/>combinations<sp/>of<sp/>parameters<sp/>for<sp/>instantiating<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HybridPrimeTable<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_prime_table_test" kindref="compound">PrimeTableTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TestWithParam&lt;<sp/>::testing::tuple&lt;bool,<sp/>int&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUp()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>be<sp/>written<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>force_on_the_fly;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>max_precalculated;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tie(force_on_the_fly,<sp/>max_precalculated)<sp/>=<sp/>GetParam();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>once<sp/>the<sp/>Google<sp/>C++<sp/>Style<sp/>Guide<sp/>allows<sp/>use<sp/>of<sp/>::std::tr1::tie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_on_the_fly<sp/>=<sp/>::testing::get&lt;0&gt;(GetParam());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_precalculated<sp/>=<sp/>::testing::get&lt;1&gt;(GetParam());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>table_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HybridPrimeTable(force_on_the_fly,<sp/>max_precalculated);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TearDown()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>table_;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>table_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>HybridPrimeTable*<sp/>table_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">TEST_P(<ref refid="class_prime_table_test" kindref="compound">PrimeTableTest</ref>,<sp/>ReturnsFalseForNonPrimes)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Inside<sp/>the<sp/>test<sp/>body,<sp/>you<sp/>can<sp/>refer<sp/>to<sp/>the<sp/>test<sp/>parameter<sp/>by<sp/>GetParam().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>test<sp/>parameter<sp/>is<sp/>a<sp/>PrimeTable<sp/>interface<sp/>pointer<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>use<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Please<sp/>note<sp/>that<sp/>you<sp/>can<sp/>also<sp/>save<sp/>it<sp/>in<sp/>the<sp/>fixture&apos;s<sp/>SetUp()<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>constructor<sp/>and<sp/>use<sp/>saved<sp/>copy<sp/>in<sp/>the<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(table_-&gt;IsPrime(-5));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(table_-&gt;IsPrime(0));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(table_-&gt;IsPrime(1));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(table_-&gt;IsPrime(4));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(table_-&gt;IsPrime(6));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(table_-&gt;IsPrime(100));</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">TEST_P(<ref refid="class_prime_table_test" kindref="compound">PrimeTableTest</ref>,<sp/>ReturnsTrueForPrimes)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(table_-&gt;IsPrime(2));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(table_-&gt;IsPrime(3));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(table_-&gt;IsPrime(5));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(table_-&gt;IsPrime(7));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(table_-&gt;IsPrime(11));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(table_-&gt;IsPrime(131));</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">TEST_P(<ref refid="class_prime_table_test" kindref="compound">PrimeTableTest</ref>,<sp/>CanGetNextPrime)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>EXPECT_EQ(2,<sp/>table_-&gt;GetNextPrime(0));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>EXPECT_EQ(3,<sp/>table_-&gt;GetNextPrime(2));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>EXPECT_EQ(5,<sp/>table_-&gt;GetNextPrime(3));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>EXPECT_EQ(7,<sp/>table_-&gt;GetNextPrime(5));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>EXPECT_EQ(11,<sp/>table_-&gt;GetNextPrime(7));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>EXPECT_EQ(131,<sp/>table_-&gt;GetNextPrime(128));</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>run<sp/>value-parameterized<sp/>tests,<sp/>you<sp/>need<sp/>to<sp/>instantiate<sp/>them,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>bind<sp/>them<sp/>to<sp/>a<sp/>list<sp/>of<sp/>values<sp/>which<sp/>will<sp/>be<sp/>used<sp/>as<sp/>test<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>instantiate<sp/>them<sp/>in<sp/>a<sp/>different<sp/>translation<sp/>module,<sp/>or<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instantiate<sp/>them<sp/>several<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Here,<sp/>we<sp/>instantiate<sp/>our<sp/>tests<sp/>with<sp/>a<sp/>list<sp/>of<sp/>parameters.<sp/>We<sp/>must<sp/>combine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>variations<sp/>of<sp/>the<sp/>boolean<sp/>flag<sp/>suppressing<sp/>PrecalcPrimeTable<sp/>and<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>meaningful<sp/>values<sp/>for<sp/>tests.<sp/>We<sp/>choose<sp/>a<sp/>small<sp/>value<sp/>(1),<sp/>and<sp/>a<sp/>value<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>put<sp/>some<sp/>of<sp/>the<sp/>tested<sp/>numbers<sp/>beyond<sp/>the<sp/>capability<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PrecalcPrimeTable<sp/>instance<sp/>and<sp/>some<sp/>inside<sp/>it<sp/>(10).<sp/>Combine<sp/>will<sp/>produce<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>possible<sp/>combinations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">INSTANTIATE_TEST_CASE_P(MeaningfulTestParameters,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_prime_table_test" kindref="compound">PrimeTableTest</ref>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Combine(<ref refid="struct_bool" kindref="compound">Bool</ref>(),<sp/>Values(1,<sp/>10)));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Test<sp/>may<sp/>not<sp/>support<sp/>Combine()<sp/>with<sp/>some<sp/>compilers.<sp/>If<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>conditional<sp/>compilation<sp/>to<sp/>compile<sp/>out<sp/>all<sp/>code<sp/>referring<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>gtest_main<sp/>library,<sp/>MSVC<sp/>linker<sp/>will<sp/>not<sp/>link<sp/>that<sp/>library<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>and<sp/>consequently<sp/>complain<sp/>about<sp/>missing<sp/>entry<sp/>point<sp/>defined<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>library<sp/>(fatal<sp/>error<sp/>LNK1561:<sp/>entry<sp/>point<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined).<sp/>This<sp/>dummy<sp/>test<sp/>keeps<sp/>gtest_main<sp/>linked<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">TEST(DummyTest,<sp/>CombineIsNotSupportedOnThisPlatform)<sp/>{}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_COMBINE</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googletest/samples/sample8_unittest.cc"/>
  </compounddef>
</doxygen>
