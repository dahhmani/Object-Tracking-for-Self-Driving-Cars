<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="md_vendor_googletest_googletest_docs__samples" kind="page">
    <compoundname>md_vendor_googletest_googletest_docs_Samples</compoundname>
    <title>Samples</title>
    <detaileddescription>
<para>If you&apos;re like us, you&apos;d like to look at some Google Test sample code. The <ulink url="../samples">samples folder</ulink> has a number of well-commented samples showing how to use a variety of Google Test features.</para><para><itemizedlist>
<listitem><para><ulink url="../samples/sample1_unittest.cc">Sample #1</ulink> shows the basic steps of using Google Test to test C++ functions.</para></listitem><listitem><para><ulink url="../samples/sample2_unittest.cc">Sample #2</ulink> shows a more complex unit test for a class with multiple member functions.</para></listitem><listitem><para><ulink url="../samples/sample3_unittest.cc">Sample #3</ulink> uses a test fixture.</para></listitem><listitem><para><ulink url="../samples/sample4_unittest.cc">Sample #4</ulink> is another basic example of using Google Test.</para></listitem><listitem><para><ulink url="../samples/sample5_unittest.cc">Sample #5</ulink> teaches how to reuse a test fixture in multiple test cases by deriving sub-fixtures from it.</para></listitem><listitem><para><ulink url="../samples/sample6_unittest.cc">Sample #6</ulink> demonstrates type-parameterized tests.</para></listitem><listitem><para><ulink url="../samples/sample7_unittest.cc">Sample #7</ulink> teaches the basics of value-parameterized tests.</para></listitem><listitem><para><ulink url="../samples/sample8_unittest.cc">Sample #8</ulink> shows using <computeroutput>Combine()</computeroutput> in value-parameterized tests.</para></listitem><listitem><para><ulink url="../samples/sample9_unittest.cc">Sample #9</ulink> shows use of the listener API to modify Google Test&apos;s console output and the use of its reflection API to inspect test results.</para></listitem><listitem><para><ulink url="../samples/sample10_unittest.cc">Sample #10</ulink> shows use of the listener API to implement a primitive memory leak checker. </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
