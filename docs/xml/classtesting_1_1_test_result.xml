<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1_test_result" kind="class" language="C++" prot="public">
    <compoundname>testing::TestResult</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1_test_result_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestInfo</definition>
        <argsstring></argsstring>
        <name>TestInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="564" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_test_result_1aff779e55b06adfa7c0088bd10253f0f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestCase</definition>
        <argsstring></argsstring>
        <name>TestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="565" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_test_result_1a832b4d233efee1a32feb0f4190b30d39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UnitTest</definition>
        <argsstring></argsstring>
        <name>UnitTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="566" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_test_result_1abae39633da9932847b41cb80efd62115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::DefaultGlobalTestPartResultReporter</definition>
        <argsstring></argsstring>
        <name>internal::DefaultGlobalTestPartResultReporter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="567" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_test_result_1adf5553cae6aea6f8648d47e299237e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::ExecDeathTest</definition>
        <argsstring></argsstring>
        <name>internal::ExecDeathTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="568" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_test_result_1ae762da04e74a0d3b0daded3c5bd4a8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::TestResultAccessor</definition>
        <argsstring></argsstring>
        <name>internal::TestResultAccessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="569" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_test_result_1acc0a5e7573fd6ae7ad1878613bb86853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::UnitTestImpl</definition>
        <argsstring></argsstring>
        <name>internal::UnitTestImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="570" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1_test_result_1a6aeedc04a0590fcc1b3c5f687dbb0f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class internal::WindowsDeathTest</definition>
        <argsstring></argsstring>
        <name>internal::WindowsDeathTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="571" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1_test_result_1a58d7d97bd16a04b932e2863153c13dff" prot="private" static="no" mutable="no">
        <type><ref refid="classtesting_1_1internal_1_1_mutex" kindref="compound">internal::Mutex</ref></type>
        <definition>internal::Mutex testing::TestResult::test_properites_mutex_</definition>
        <argsstring></argsstring>
        <name>test_properites_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="618" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1_test_result_1af17c00fae1435d344b318eb6bbb56cff" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtesting_1_1_test_part_result" kindref="compound">TestPartResult</ref> &gt;</type>
        <definition>std::vector&lt;TestPartResult&gt; testing::TestResult::test_part_results_</definition>
        <argsstring></argsstring>
        <name>test_part_results_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="621" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1_test_result_1a29cde491988faff4ef2d9f9b6c13d9fa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &gt;</type>
        <definition>std::vector&lt;TestProperty&gt; testing::TestResult::test_properties_</definition>
        <argsstring></argsstring>
        <name>test_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="623" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1_test_result_1a3810b34e68f5dca9ad1237a5bde7fa21" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int testing::TestResult::death_test_count_</definition>
        <argsstring></argsstring>
        <name>death_test_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="625" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1_test_result_1a739a8ca54db4be004ba748b11e82b056" prot="private" static="no" mutable="no">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::elapsed_time_</definition>
        <argsstring></argsstring>
        <name>elapsed_time_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="627" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_test_result_1a5cf5dd6f416b7334ea601aab21a2fda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::TestResult</definition>
        <argsstring>()</argsstring>
        <name>TestResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="526" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2017" bodyend="2020"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a41f407680b725b75d7eadc3230bc3315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::~TestResult</definition>
        <argsstring>()</argsstring>
        <name>~TestResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="529" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2023" bodyend="2024"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a6174aa4019dcda7c34d776b5741c9032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::total_part_count</definition>
        <argsstring>() const</argsstring>
        <name>total_part_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="533" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2200" bodyend="2202"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1afe4523257bbea8bc63b0950b702790be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::test_property_count</definition>
        <argsstring>() const</argsstring>
        <name>test_property_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="536" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2205" bodyend="2207"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1acf7e6e72f05a0545c48ea48e7f8851df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::Passed</definition>
        <argsstring>() const</argsstring>
        <name>Passed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="539" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="539" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1afacc37e8b43c8574e4101bc61723c769" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::Failed</definition>
        <argsstring>() const</argsstring>
        <name>Failed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="542" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2170" bodyend="2176"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a30e00d4076ae07fb5ad7b623d9dc1fe4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::HasFatalFailure</definition>
        <argsstring>() const</argsstring>
        <name>HasFatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="545" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2184" bodyend="2186"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a510564fa67b485ed4589a259f2a032d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::HasNonfatalFailure</definition>
        <argsstring>() const</argsstring>
        <name>HasNonfatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="548" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2194" bodyend="2196"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a717e05e00d4af5cb809433e343ab63af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::elapsed_time</definition>
        <argsstring>() const</argsstring>
        <name>elapsed_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="551" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="551" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a765c1e734ac08115757b343d57226bba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1_test_part_result" kindref="compound">TestPartResult</ref> &amp;</type>
        <definition>const TestPartResult &amp; testing::TestResult::GetTestPartResult</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetTestPartResult</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="556" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2029" bodyend="2033"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a6c2f478dbce36b57d18bedded46d70af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &amp;</type>
        <definition>const TestProperty &amp; testing::TestResult::GetTestProperty</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetTestProperty</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="561" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2038" bodyend="2042"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1_test_result_1a2964c3a12ef6ef9bcb47599374514432" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classtesting_1_1_test_part_result" kindref="compound">TestPartResult</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;TestPartResult&gt;&amp; testing::TestResult::test_part_results</definition>
        <argsstring>() const</argsstring>
        <name>test_part_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="574" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="574" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a8c94e8e89c616abe5d33024a6b54f218" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;TestProperty&gt;&amp; testing::TestResult::test_properties</definition>
        <argsstring>() const</argsstring>
        <name>test_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="579" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="579" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1aa345325e5dea41609d17d7c614bf2b18" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::set_elapsed_time</definition>
        <argsstring>(TimeInMillis elapsed)</argsstring>
        <name>set_elapsed_time</name>
        <param>
          <type>TimeInMillis</type>
          <declname>elapsed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="584" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="584" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1ac253b0fd7ea70f457e9517e415eac32d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::RecordProperty</definition>
        <argsstring>(const std::string &amp;xml_element, const TestProperty &amp;test_property)</argsstring>
        <name>RecordProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml_element</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &amp;</type>
          <declname>test_property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="592" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2057" bodyend="2071"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1ac28e9821ad3e9314c4fe41b119c5b44d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::AddTestPartResult</definition>
        <argsstring>(const TestPartResult &amp;test_part_result)</argsstring>
        <name>AddTestPartResult</name>
        <param>
          <type>const <ref refid="classtesting_1_1_test_part_result" kindref="compound">TestPartResult</ref> &amp;</type>
          <declname>test_part_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="602" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2050" bodyend="2052"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a827cb78135ac375d81d89ffedc3eca52" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::death_test_count</definition>
        <argsstring>() const</argsstring>
        <name>death_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="605" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="605" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a07faaa1d16a991f34222d02e10c75dc2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::increment_death_test_count</definition>
        <argsstring>()</argsstring>
        <name>increment_death_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="608" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="608" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1aa11ed718e0a76a39e6380e5ddce7cae2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::ClearTestPartResults</definition>
        <argsstring>()</argsstring>
        <name>ClearTestPartResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="611" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2045" bodyend="2047"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1a5371bc2e69435b4cb1fdad9ca81759a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="614" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2162" bodyend="2167"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_test_result_1ad04e1d5d9eb623ba1d9fc82cdff43af4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(TestResult)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1_test_result" kindref="compound">TestResult</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="630" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtesting_1_1_test_result_1a818c06cd2bfc00d6c81b0cebca044cb1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::ValidateTestProperty</definition>
        <argsstring>(const std::string &amp;xml_element, const TestProperty &amp;test_property)</argsstring>
        <name>ValidateTestProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml_element</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_test_property" kindref="compound">TestProperty</ref> &amp;</type>
          <declname>test_property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="598" column="1" bodyfile="vendor/googletest/googletest/src/gtest.cc" bodystart="2155" bodyend="2159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googletest/include/gtest/gtest.h" line="523" column="1" bodyfile="vendor/googletest/googletest/include/gtest/gtest.h" bodystart="523" bodyend="631"/>
    <listofallmembers>
      <member refid="classtesting_1_1_test_result_1ac28e9821ad3e9314c4fe41b119c5b44d" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>AddTestPartResult</name></member>
      <member refid="classtesting_1_1_test_result_1a5371bc2e69435b4cb1fdad9ca81759a6" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>Clear</name></member>
      <member refid="classtesting_1_1_test_result_1aa11ed718e0a76a39e6380e5ddce7cae2" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>ClearTestPartResults</name></member>
      <member refid="classtesting_1_1_test_result_1a827cb78135ac375d81d89ffedc3eca52" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>death_test_count</name></member>
      <member refid="classtesting_1_1_test_result_1a3810b34e68f5dca9ad1237a5bde7fa21" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>death_test_count_</name></member>
      <member refid="classtesting_1_1_test_result_1a717e05e00d4af5cb809433e343ab63af" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>elapsed_time</name></member>
      <member refid="classtesting_1_1_test_result_1a739a8ca54db4be004ba748b11e82b056" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>elapsed_time_</name></member>
      <member refid="classtesting_1_1_test_result_1afacc37e8b43c8574e4101bc61723c769" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>Failed</name></member>
      <member refid="classtesting_1_1_test_result_1a765c1e734ac08115757b343d57226bba" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>GetTestPartResult</name></member>
      <member refid="classtesting_1_1_test_result_1a6c2f478dbce36b57d18bedded46d70af" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>GetTestProperty</name></member>
      <member refid="classtesting_1_1_test_result_1ad04e1d5d9eb623ba1d9fc82cdff43af4" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1_test_result_1a30e00d4076ae07fb5ad7b623d9dc1fe4" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>HasFatalFailure</name></member>
      <member refid="classtesting_1_1_test_result_1a510564fa67b485ed4589a259f2a032d6" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>HasNonfatalFailure</name></member>
      <member refid="classtesting_1_1_test_result_1a07faaa1d16a991f34222d02e10c75dc2" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>increment_death_test_count</name></member>
      <member refid="classtesting_1_1_test_result_1abae39633da9932847b41cb80efd62115" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::DefaultGlobalTestPartResultReporter</name></member>
      <member refid="classtesting_1_1_test_result_1adf5553cae6aea6f8648d47e299237e34" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::ExecDeathTest</name></member>
      <member refid="classtesting_1_1_test_result_1ae762da04e74a0d3b0daded3c5bd4a8e8" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::TestResultAccessor</name></member>
      <member refid="classtesting_1_1_test_result_1acc0a5e7573fd6ae7ad1878613bb86853" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::UnitTestImpl</name></member>
      <member refid="classtesting_1_1_test_result_1a6aeedc04a0590fcc1b3c5f687dbb0f9f" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::WindowsDeathTest</name></member>
      <member refid="classtesting_1_1_test_result_1acf7e6e72f05a0545c48ea48e7f8851df" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>Passed</name></member>
      <member refid="classtesting_1_1_test_result_1ac253b0fd7ea70f457e9517e415eac32d" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1_test_result_1aa345325e5dea41609d17d7c614bf2b18" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>set_elapsed_time</name></member>
      <member refid="classtesting_1_1_test_result_1a2964c3a12ef6ef9bcb47599374514432" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_part_results</name></member>
      <member refid="classtesting_1_1_test_result_1af17c00fae1435d344b318eb6bbb56cff" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_part_results_</name></member>
      <member refid="classtesting_1_1_test_result_1a58d7d97bd16a04b932e2863153c13dff" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_properites_mutex_</name></member>
      <member refid="classtesting_1_1_test_result_1a8c94e8e89c616abe5d33024a6b54f218" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_properties</name></member>
      <member refid="classtesting_1_1_test_result_1a29cde491988faff4ef2d9f9b6c13d9fa" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_properties_</name></member>
      <member refid="classtesting_1_1_test_result_1afe4523257bbea8bc63b0950b702790be" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>test_property_count</name></member>
      <member refid="classtesting_1_1_test_result_1aff779e55b06adfa7c0088bd10253f0f0" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>TestCase</name></member>
      <member refid="classtesting_1_1_test_result_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>TestInfo</name></member>
      <member refid="classtesting_1_1_test_result_1a5cf5dd6f416b7334ea601aab21a2fda5" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>TestResult</name></member>
      <member refid="classtesting_1_1_test_result_1a6174aa4019dcda7c34d776b5741c9032" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>total_part_count</name></member>
      <member refid="classtesting_1_1_test_result_1a832b4d233efee1a32feb0f4190b30d39" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>UnitTest</name></member>
      <member refid="classtesting_1_1_test_result_1a818c06cd2bfc00d6c81b0cebca044cb1" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>ValidateTestProperty</name></member>
      <member refid="classtesting_1_1_test_result_1a41f407680b725b75d7eadc3230bc3315" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>~TestResult</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
