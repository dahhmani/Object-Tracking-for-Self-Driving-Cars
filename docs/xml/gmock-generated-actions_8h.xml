<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmock-generated-actions_8h" kind="file" language="C++">
    <compoundname>gmock-generated-actions.h</compoundname>
    <includes refid="gmock-actions_8h" local="yes">gmock/gmock-actions.h</includes>
    <includes refid="gmock-port_8h" local="yes">gmock/internal/gmock-port.h</includes>
    <includes refid="internal_2custom_2gmock-generated-actions_8h" local="yes">gmock/internal/custom/gmock-generated-actions.h</includes>
    <includedby refid="gmock-more-actions_8h" local="yes">vendor/googletest/googlemock/include/gmock/gmock-more-actions.h</includedby>
    <includedby refid="gmock_8h" local="yes">vendor/googletest/googlemock/include/gmock/gmock.h</includedby>
    <includedby refid="gmock-generated-actions__test_8cc" local="yes">vendor/googletest/googlemock/test/gmock-generated-actions_test.cc</includedby>
    <incdepgraph>
      <node id="370">
        <label>sys/stat.h</label>
      </node>
      <node id="392">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>iomanip</label>
      </node>
      <node id="383">
        <label>limits</label>
      </node>
      <node id="374">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="361">
        <label>assert.h</label>
      </node>
      <node id="397">
        <label>iterator</label>
      </node>
      <node id="385">
        <label>float.h</label>
      </node>
      <node id="356">
        <label>gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="401">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="362">
        <label>stdlib.h</label>
      </node>
      <node id="390">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="402">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="353">
        <label>errno.h</label>
      </node>
      <node id="355">
        <label>string</label>
      </node>
      <node id="387">
        <label>map</label>
      </node>
      <node id="381">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="400">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="367">
        <label>stddef.h</label>
      </node>
      <node id="405">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="358">
        <label>ostream</label>
      </node>
      <node id="375">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="351">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h</label>
        <link refid="gmock-generated-actions_8h"/>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
      <node id="393">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="394" relation="include">
        </childnode>
      </node>
      <node id="369">
        <label>sys/types.h</label>
      </node>
      <node id="368">
        <label>string.h</label>
      </node>
      <node id="352">
        <label>gmock/gmock-actions.h</label>
        <link refid="gmock-actions_8h_source"/>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
      </node>
      <node id="379">
        <label>typeinfo</label>
      </node>
      <node id="360">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
      </node>
      <node id="376">
        <label>unistd.h</label>
      </node>
      <node id="373">
        <label>vector</label>
      </node>
      <node id="399">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="389">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="372">
        <label>utility</label>
      </node>
      <node id="371">
        <label>sstream</label>
      </node>
      <node id="364">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="403">
        <label>iosfwd</label>
      </node>
      <node id="391">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="363">
        <label>iostream</label>
      </node>
      <node id="382">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="377">
        <label>strings.h</label>
      </node>
      <node id="366">
        <label>ctype.h</label>
      </node>
      <node id="404">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="365">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
      </node>
      <node id="384">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="406">
        <label>gmock/internal/custom/gmock-generated-actions.h</label>
        <link refid="internal_2custom_2gmock-generated-actions_8h_source"/>
      </node>
      <node id="396">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
      </node>
      <node id="359">
        <label>gmock/internal/gmock-generated-internal-utils.h</label>
        <link refid="gmock-generated-internal-utils_8h_source"/>
        <childnode refid="360" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>set</label>
      </node>
      <node id="395">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
      </node>
      <node id="354">
        <label>algorithm</label>
      </node>
      <node id="378">
        <label>regex.h</label>
      </node>
      <node id="357">
        <label>stdio.h</label>
      </node>
      <node id="394">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
      </node>
      <node id="398">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="408">
        <label>vendor/googletest/googlemock/include/gmock/gmock-more-actions.h</label>
        <link refid="gmock-more-actions_8h_source"/>
        <childnode refid="409" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>vendor/googletest/googlemock/include/gmock/gmock.h</label>
        <link refid="gmock_8h_source"/>
        <childnode refid="410" relation="include">
        </childnode>
      </node>
      <node id="407">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h</label>
        <link refid="gmock-generated-actions_8h"/>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
      </node>
      <node id="410">
        <label>vendor/googletest/googlemock/test/gmock_link_test.h</label>
        <link refid="gmock__link__test_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper" prot="public">testing::internal::InvokeHelper</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_4_01_4" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt;&gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_01_4_01_4" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_01_4_01_4" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_01_4_01_4" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_00_01_a4_01_4_01_4" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3, A4 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_5dd6c0827e45a39a81d93a14211e2a19" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3, A4, A5 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_5653fefa261cff106ebaaf9c78f6ee42" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3, A4, A5, A6 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_9169216bddd5005837acd145af38ec6f" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_c90976166c933075c49792215d8203bb" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7, A8 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_cb3e0694d0722fcc616ae618dc383e5b" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7, A8, A9 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_d7025e877e4f690a17d0a7f1e26fac53" prot="public">testing::internal::InvokeHelper&lt; R, ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7, A8, A9, A10 &gt; &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args" prot="public">testing::internal::SelectArgs</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01-1_00_01-1_00_01-99299a766a33bd3110e39f51f43b194a" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01-1_00_01-33116bd77067572e384b90e7c70b03c4" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, -1, -1, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01-03e4fb75e6504ae34fdb48d64bb6de95" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, -1, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k43121451b69bc30ee1dad887e67d8807" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, k3, -1, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k7cadbb88f40ff7408f8c070bb61c70db" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, k3, k4, -1, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k6061407a5fa2cad2c495e8e16ee67874" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, k3, k4, k5, -1, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k203aa538560773abfacd746d313c06ae" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, k3, k4, k5, k6, -1, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01kf4b89906ed32c76471b80b75f77e1355" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, k3, k4, k5, k6, k7, -1, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01ke29a32f440a8fcb098d8685a265f9f40" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, k3, k4, k5, k6, k7, k8, -1, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k6840fe77dccd76bc2d4e4ee1c75cd6f1" prot="public">testing::internal::SelectArgs&lt; Result, ArgumentTuple, k1, k2, k3, k4, k5, k6, k7, k8, k9, -1 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_with_args_action" prot="public">testing::internal::WithArgsAction</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_with_args_action_1_1_impl" prot="private">testing::internal::WithArgsAction::Impl</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_excessive_arg" prot="public">testing::internal::ExcessiveArg</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_action_helper" prot="public">testing::internal::ActionHelper</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" prot="public">testing::internal::invoke_argument::AdlTag</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal">testing::internal</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal_1_1invoke__argument">testing::internal::invoke_argument</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="gmock-generated-actions_8h_1a6eb3ce92b0613603057a20ec9e593317" prot="public" static="no">
        <name>GMOCK_FIELD_</name>
        <param><defname>Tuple</defname></param>
        <param><defname>N</defname></param>
        <initializer>typename ::testing::tuple_element&lt;N, Tuple&gt;::type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="272" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a069f37fdbe36aabe65da6eb6221b9b19" prot="public" static="no">
        <name>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_</name>
        <initializer>const args_type&amp; args GTEST_ATTRIBUTE_UNUSED_, \
    arg0_type arg0 GTEST_ATTRIBUTE_UNUSED_, \
    arg1_type arg1 GTEST_ATTRIBUTE_UNUSED_, \
    arg2_type arg2 GTEST_ATTRIBUTE_UNUSED_, \
    arg3_type arg3 GTEST_ATTRIBUTE_UNUSED_, \
    arg4_type arg4 GTEST_ATTRIBUTE_UNUSED_, \
    arg5_type arg5 GTEST_ATTRIBUTE_UNUSED_, \
    arg6_type arg6 GTEST_ATTRIBUTE_UNUSED_, \
    arg7_type arg7 GTEST_ATTRIBUTE_UNUSED_, \
    arg8_type arg8 GTEST_ATTRIBUTE_UNUSED_, \
    arg9_type arg9 GTEST_ATTRIBUTE_UNUSED_</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="881" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a8b8b1a43495f82aefe40c410bc1ce392" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <initializer>kind0 name0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="976" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aa238172d277a7ba189a5d481356a6c66" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <initializer>kind0 name0, kind1 name1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="978" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="977" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ae776d1f23c7b8defac49269c69e64baa" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <initializer>kind0 name0, kind1 name1, kind2 name2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="980" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a19b48575600b1a046c3f77d5dfc124ba" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <initializer>kind0 name0, kind1 name1, kind2 name2, \
    kind3 name3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="982" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aef0f11711d63f65561ce5a4d032673f8" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <initializer>kind0 name0, kind1 name1, \
    kind2 name2, kind3 name3, kind4 name4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="985" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a4c90362350df0faa6e866642f44708fe" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <initializer>kind0 name0, \
    kind1 name1, kind2 name2, kind3 name3, kind4 name4, kind5 name5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="988" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aaafa5e8b1a116aa8e7f88653415e60cd" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <initializer>kind0 name0, kind1 name1, kind2 name2, kind3 name3, kind4 name4, \
    kind5 name5, kind6 name6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="992" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a8d8ec2523daa6fc6c5b8f6a45898e0b1" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <param><defname>kind7</defname></param>
        <param><defname>name7</defname></param>
        <initializer>kind0 name0, kind1 name1, kind2 name2, kind3 name3, \
    kind4 name4, kind5 name5, kind6 name6, kind7 name7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="996" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="994" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ae6dd478ff5757fa4e66ef2dcf6e22325" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <param><defname>kind7</defname></param>
        <param><defname>name7</defname></param>
        <param><defname>kind8</defname></param>
        <param><defname>name8</defname></param>
        <initializer>kind0 name0, kind1 name1, kind2 name2, \
    kind3 name3, kind4 name4, kind5 name5, kind6 name6, kind7 name7, \
    kind8 name8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1000" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="998" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aa3db5758c68ca3a45a795d91fea7bb42" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <param><defname>kind7</defname></param>
        <param><defname>name7</defname></param>
        <param><defname>kind8</defname></param>
        <param><defname>name8</defname></param>
        <param><defname>kind9</defname></param>
        <param><defname>name9</defname></param>
        <initializer>kind0 name0, \
    kind1 name1, kind2 name2, kind3 name3, kind4 name4, kind5 name5, \
    kind6 name6, kind7 name7, kind8 name8, kind9 name9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1005" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a900f637cda387230021133903f5e078b" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <initializer>name0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1010" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab89cb2aad7a5ededf9397ffd58fb8a9a" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <initializer>name0, name1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1012" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a1f3bd0693e586000f0b8a5324183b47f" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <initializer>name0, name1, name2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1014" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a6b509ec43356784c0bb70056dcd2c5a2" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <initializer>name0, name1, name2, name3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1016" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ad9010efd4cfd9c4874d18fef3aee7676" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <initializer>name0, name1, name2, name3, \
    name4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1018" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1017" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ae9d4c983c2aba6b0fa5725118bb11cbd" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <initializer>name0, name1, \
    name2, name3, name4, name5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1021" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ad76d91a49b437e52790b3d7efeb6f289" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <initializer>name0, name1, name2, name3, name4, name5, name6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1025" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1023" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a1080c34f9f1d183b54b4b710b5a6e98d" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <param><defname>kind7</defname></param>
        <param><defname>name7</defname></param>
        <initializer>name0, name1, name2, name3, name4, name5, name6, name7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1028" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1026" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a2492e9cf6abea9975cc7703e24fb4409" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <param><defname>kind7</defname></param>
        <param><defname>name7</defname></param>
        <param><defname>kind8</defname></param>
        <param><defname>name8</defname></param>
        <initializer>name0, name1, name2, name3, name4, name5, \
    name6, name7, name8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1031" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab216ed7cf202e5c97e4a4e4115c416d2" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS</name>
        <param><defname>kind0</defname></param>
        <param><defname>name0</defname></param>
        <param><defname>kind1</defname></param>
        <param><defname>name1</defname></param>
        <param><defname>kind2</defname></param>
        <param><defname>name2</defname></param>
        <param><defname>kind3</defname></param>
        <param><defname>name3</defname></param>
        <param><defname>kind4</defname></param>
        <param><defname>name4</defname></param>
        <param><defname>kind5</defname></param>
        <param><defname>name5</defname></param>
        <param><defname>kind6</defname></param>
        <param><defname>name6</defname></param>
        <param><defname>kind7</defname></param>
        <param><defname>name7</defname></param>
        <param><defname>kind8</defname></param>
        <param><defname>name8</defname></param>
        <param><defname>kind9</defname></param>
        <param><defname>name9</defname></param>
        <initializer>name0, name1, name2, \
    name3, name4, name5, name6, name7, name8, name9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1035" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1033" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a9eda3221eac423c7026d63fc486d1296" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1039" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1039" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a462396713d8024e37a66fb12abd87a00" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <initializer>, typename p0##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1040" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1040" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a8de8a9ba55313f4f4ba936c28ffe0d93" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <initializer>, \
    typename p0##_type, typename p1##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1041" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1041" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a2def1ab63696280e9b8c20ed176d0c92" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <initializer>, \
    typename p0##_type, typename p1##_type, typename p2##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1043" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aff64ba07ea8171eb7bacb655127120f7" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <initializer>, \
    typename p0##_type, typename p1##_type, typename p2##_type, \
    typename p3##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1045" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1045" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a1f0b43fe98dabf52fa9dbffa0966d7f3" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <initializer>, \
    typename p0##_type, typename p1##_type, typename p2##_type, \
    typename p3##_type, typename p4##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1048" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1048" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1abffe20cc195c1f2a1682878bb7f7a35d" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <initializer>, \
    typename p0##_type, typename p1##_type, typename p2##_type, \
    typename p3##_type, typename p4##_type, typename p5##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1051" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1051" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1acb3b2a137310a0ac944d3695a0911a64" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <initializer>, typename p0##_type, typename p1##_type, typename p2##_type, \
    typename p3##_type, typename p4##_type, typename p5##_type, \
    typename p6##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1055" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1054" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1af6338728a5c12281280830ec7c5f685a" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <initializer>, typename p0##_type, typename p1##_type, typename p2##_type, \
    typename p3##_type, typename p4##_type, typename p5##_type, \
    typename p6##_type, typename p7##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1059" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1058" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a27e84307ea95be9e2e4526cd6b34a151" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <initializer>, typename p0##_type, typename p1##_type, typename p2##_type, \
    typename p3##_type, typename p4##_type, typename p5##_type, \
    typename p6##_type, typename p7##_type, typename p8##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1063" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1062" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a791e16a318652e43abb3c1aeba969d4d" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <initializer>, typename p0##_type, typename p1##_type, \
    typename p2##_type, typename p3##_type, typename p4##_type, \
    typename p5##_type, typename p6##_type, typename p7##_type, \
    typename p8##_type, typename p9##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1067" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1066" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aea5ee581daf40874ee7777e3c2b6d4ff" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS</name>
        <param></param>
        <initializer>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1073" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1073" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ad9d6ae16782bf5b8ffa096356f20b5ef" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <initializer>(p0##_type gmock_p0) : p0(gmock_p0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1075" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1075" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1af8fc781d28282b09de4b5bda9563cded" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1) : p0(gmock_p0), p1(gmock_p1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1077" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1077" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab452cc97981b64f68df83aedc023a201" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, \
        p2##_type gmock_p2) : p0(gmock_p0), p1(gmock_p1), p2(gmock_p2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1079" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1079" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a9749c8366b3617ee3d14f4f4e9ae18ae" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, p2##_type gmock_p2, \
        p3##_type gmock_p3) : p0(gmock_p0), p1(gmock_p1), p2(gmock_p2), \
        p3(gmock_p3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1082" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1082" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab3c77cabbb94ae2e3a4f9fdbda784731" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, p2##_type gmock_p2, \
        p3##_type gmock_p3, p4##_type gmock_p4) : p0(gmock_p0), p1(gmock_p1), \
        p2(gmock_p2), p3(gmock_p3), p4(gmock_p4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1086" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aef68add35463c75130872b22d07c43ff" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, p2##_type gmock_p2, \
        p3##_type gmock_p3, p4##_type gmock_p4, \
        p5##_type gmock_p5) : p0(gmock_p0), p1(gmock_p1), p2(gmock_p2), \
        p3(gmock_p3), p4(gmock_p4), p5(gmock_p5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1090" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aa1ba027eec9b36d5e710bfe9da99d443" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, p2##_type gmock_p2, \
        p3##_type gmock_p3, p4##_type gmock_p4, p5##_type gmock_p5, \
        p6##_type gmock_p6) : p0(gmock_p0), p1(gmock_p1), p2(gmock_p2), \
        p3(gmock_p3), p4(gmock_p4), p5(gmock_p5), p6(gmock_p6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1095" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1095" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a12a0e970438c008214093b98b8eefa68" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, p2##_type gmock_p2, \
        p3##_type gmock_p3, p4##_type gmock_p4, p5##_type gmock_p5, \
        p6##_type gmock_p6, p7##_type gmock_p7) : p0(gmock_p0), p1(gmock_p1), \
        p2(gmock_p2), p3(gmock_p3), p4(gmock_p4), p5(gmock_p5), p6(gmock_p6), \
        p7(gmock_p7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1100" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aa69890581b384540649239847bd7dcbf" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, p2##_type gmock_p2, \
        p3##_type gmock_p3, p4##_type gmock_p4, p5##_type gmock_p5, \
        p6##_type gmock_p6, p7##_type gmock_p7, \
        p8##_type gmock_p8) : p0(gmock_p0), p1(gmock_p1), p2(gmock_p2), \
        p3(gmock_p3), p4(gmock_p4), p5(gmock_p5), p6(gmock_p6), p7(gmock_p7), \
        p8(gmock_p8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1107" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aeed917d405a99878e11d53b8eca2b744" prot="public" static="no">
        <name>GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <initializer>(p0##_type gmock_p0, p1##_type gmock_p1, p2##_type gmock_p2, \
        p3##_type gmock_p3, p4##_type gmock_p4, p5##_type gmock_p5, \
        p6##_type gmock_p6, p7##_type gmock_p7, p8##_type gmock_p8, \
        p9##_type gmock_p9) : p0(gmock_p0), p1(gmock_p1), p2(gmock_p2), \
        p3(gmock_p3), p4(gmock_p4), p5(gmock_p5), p6(gmock_p6), p7(gmock_p7), \
        p8(gmock_p8), p9(gmock_p9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1115" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a3fef729577c726683358d924c3d31c18" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1124" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a9a2a07e6eff8e4ca6d45b8f7ea11cf3b" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <initializer>p0##_type p0;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1125" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a16aa4a04e77951b00534396170438deb" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <initializer>p0##_type p0; \
    p1##_type p1;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1126" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a584f78b5777db084208f151d7e4d51b7" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <initializer>p0##_type p0; \
    p1##_type p1; p2##_type p2;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1128" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a1c04daeff7ae92839f33727e264f227f" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <initializer>p0##_type p0; \
    p1##_type p1; p2##_type p2; p3##_type p3;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1130" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ae8e67227205c5f57cbe9c885271d8f82" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <initializer>p0##_type p0; p1##_type p1; p2##_type p2; p3##_type p3; p4##_type p4;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1133" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a4ba5920542abfa689a6517d21eb8860a" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <initializer>p0##_type p0; p1##_type p1; p2##_type p2; p3##_type p3; p4##_type p4; \
    p5##_type p5;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1135" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aa0f3292bceb484af4271eb50de9d5ead" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <initializer>p0##_type p0; p1##_type p1; p2##_type p2; p3##_type p3; p4##_type p4; \
    p5##_type p5; p6##_type p6;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1138" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a028ed15e5ba3301a85b859792e9fb7c9" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <initializer>p0##_type p0; p1##_type p1; p2##_type p2; p3##_type p3; p4##_type p4; \
    p5##_type p5; p6##_type p6; p7##_type p7;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1141" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a9565bbd3c2624487ccb71f325fd96596" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <initializer>p0##_type p0; p1##_type p1; p2##_type p2; p3##_type p3; \
    p4##_type p4; p5##_type p5; p6##_type p6; p7##_type p7; p8##_type p8;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1144" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aea3f6f518db8ecc3b63341f38a7c4eaf" prot="public" static="no">
        <name>GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <initializer>p0##_type p0; p1##_type p1; p2##_type p2; p3##_type p3; \
    p4##_type p4; p5##_type p5; p6##_type p6; p7##_type p7; p8##_type p8; \
    p9##_type p9;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1147" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a2dbeccb9f6d632f5e7e2c1421cd549aa" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1152" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a12895511e72c47c78850542b68fe83d4" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <initializer>p0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1153" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ac0efec20319ea66c5508b6e5ad42c357" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <initializer>p0, p1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1154" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a10f92233f148b19f341e1a17267107d3" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <initializer>p0, p1, p2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1155" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a8df889711a5f99ed76736a2bc5030cf2" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <initializer>p0, p1, p2, p3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1156" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a4bfd52ebc75b6da1a84e5a59e12995fe" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <initializer>p0, p1, \
    p2, p3, p4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1157" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a553114b6d5e3f751a9f122fb71a3abdb" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <initializer>p0, \
    p1, p2, p3, p4, p5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1159" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a6a66c76963794fca308b7e2852188e06" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <initializer>p0, p1, p2, p3, p4, p5, p6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1162" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1af9a5e8a55b02e7afac317a2613bd29ec" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <initializer>p0, p1, p2, p3, p4, p5, p6, p7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1164" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a3e91ec053856b1b3c011b71810fb0992" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <initializer>p0, p1, p2, p3, p4, p5, p6, p7, p8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1166" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a4dbbb45245e68e2f0eaf65d273c8822c" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <initializer>p0, p1, p2, p3, p4, p5, p6, p7, p8, p9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1168" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a76ec2981c2b6c52e3c6cdd1eba7f37ac" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1171" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aa6b8f71158f750363cbf016eb92e0865" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <initializer>, p0##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1172" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a0cc50d9b0c031e712a38a3266b03af48" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <initializer>, p0##_type, \
    p1##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1173" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a5654c0d7f59fc85880c24738b6cb5976" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <initializer>, p0##_type, \
    p1##_type, p2##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1175" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ad00ece06c41ce47e499fef47d0ee9459" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <initializer>, \
    p0##_type, p1##_type, p2##_type, p3##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1177" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a48e2764f7132a1840c2a4afe8d43556b" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <initializer>, \
    p0##_type, p1##_type, p2##_type, p3##_type, p4##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1179" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab2f48b9bf3f455e081eac982aee31740" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <initializer>, \
    p0##_type, p1##_type, p2##_type, p3##_type, p4##_type, p5##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1181" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aa090e804a45b4373d38e6a0aa35e5997" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <initializer>, p0##_type, p1##_type, p2##_type, p3##_type, p4##_type, p5##_type, \
    p6##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1184" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ac46093455522025b3461ed0dfd326836" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <initializer>, p0##_type, p1##_type, p2##_type, p3##_type, p4##_type, \
    p5##_type, p6##_type, p7##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1187" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a3f7dd2bdf5feb78d9cd6a538366fed46" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <initializer>, p0##_type, p1##_type, p2##_type, p3##_type, p4##_type, \
    p5##_type, p6##_type, p7##_type, p8##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1190" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a646b96a3f316fa629cf7faaf509de76e" prot="public" static="no">
        <name>GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <initializer>, p0##_type, p1##_type, p2##_type, p3##_type, p4##_type, \
    p5##_type, p6##_type, p7##_type, p8##_type, p9##_type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1193" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1afbcc498768661d32cb658a8eb28535a9" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1197" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a4440fd8222dde30e41f05209f06a2d00" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <initializer>p0##_type p0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1198" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab11df3777b85b01132aa4057017b22ca" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <initializer>p0##_type p0, \
    p1##_type p1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1199" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a81147c9dca4694a07acccd9324990585" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <initializer>p0##_type p0, \
    p1##_type p1, p2##_type p2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1201" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a0580c33b8405f1820a382f9b9471f157" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <initializer>p0##_type p0, \
    p1##_type p1, p2##_type p2, p3##_type p3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1203" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a0fd289b917553899d908b0f406f8f75d" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <initializer>p0##_type p0, p1##_type p1, p2##_type p2, p3##_type p3, p4##_type p4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1206" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a80b3221bf467d72d15120045c9f52a6e" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <initializer>p0##_type p0, p1##_type p1, p2##_type p2, p3##_type p3, p4##_type p4, \
    p5##_type p5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1208" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1af762ce6b60357100fd2c8176ef2f4102" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <initializer>p0##_type p0, p1##_type p1, p2##_type p2, p3##_type p3, p4##_type p4, \
    p5##_type p5, p6##_type p6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1211" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a3ce778c4907edf2818c948a78a94760a" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <initializer>p0##_type p0, p1##_type p1, p2##_type p2, p3##_type p3, p4##_type p4, \
    p5##_type p5, p6##_type p6, p7##_type p7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1214" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a94ebf056f6c78d158bf16eec04583dd0" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <initializer>p0##_type p0, p1##_type p1, p2##_type p2, p3##_type p3, \
    p4##_type p4, p5##_type p5, p6##_type p6, p7##_type p7, p8##_type p8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1217" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a125c9b0d293f0e900ff37ce42b8ed217" prot="public" static="no">
        <name>GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <initializer>p0##_type p0, p1##_type p1, p2##_type p2, p3##_type p3, \
    p4##_type p4, p5##_type p5, p6##_type p6, p7##_type p7, p8##_type p8, \
    p9##_type p9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1220" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a4876365f0389f3cd8021f650d095be55" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1225" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a372a4dbbfeba17c2af89aa1027cb7f67" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <initializer>P</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1226" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a58ef57d40fec061e17fdcbf020b77e20" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <initializer>P2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1227" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a43c845e4e60b3e17c4e312bbc5a8bb66" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <initializer>P3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1228" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aeb588496af9fc2b8e3c4702dac7e966e" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <initializer>P4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1229" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a29d90b8cedec75d4acbf2df27ef0e3b5" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <initializer>P5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1230" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab79feaedfcef7df29e87695b82e9b65d" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <initializer>P6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1231" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab4b49f0cdb482c0d7a6249607ac44f24" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <initializer>P7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1232" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a461b026c9cc310c199ab1f0b59111e5a" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <initializer>P8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1234" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a425b81bf1cdf7cd14d1e0184df9f204f" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <initializer>P9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1236" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1abfe1adfe26341b5270a8d3385035c464" prot="public" static="no">
        <name>GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS</name>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <initializer>P10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1238" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1af1442d2b3f80b5d04b409bca938fdcc5" prot="public" static="no">
        <name>GMOCK_ACTION_CLASS_</name>
        <param><defname>name</defname></param>
        <param><defname>value_params</defname></param>
        <initializer>GTEST_CONCAT_TOKEN_(name##Action, GMOCK_INTERNAL_COUNT_##value_params)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1241" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ad04fa741f313f0c23924d61fcfb1536d" prot="public" static="no">
        <name>ACTION_TEMPLATE</name>
        <param><defname>name</defname></param>
        <param><defname>template_params</defname></param>
        <param><defname>value_params</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1244" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a7af7137aa4871df4235881af377205fe" prot="public" static="no">
        <name>ACTION</name>
        <param><defname>name</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1308" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a8ee9766f611f068271ca37a90c0e5960" prot="public" static="no">
        <name>ACTION_P</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1353" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a69fbf9ae696cc4cf779e22cb0960a067" prot="public" static="no">
        <name>ACTION_P2</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1403" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ab038de3f66ae709773473c18b6a43b29" prot="public" static="no">
        <name>ACTION_P3</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1458" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1af416cf9b0288fce8b2c4b71e4df6cfc0" prot="public" static="no">
        <name>ACTION_P4</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1516" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1ad0bb4c20795e7efe55b9b76f334554b2" prot="public" static="no">
        <name>ACTION_P5</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1583" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a3a8af72f23167873fcd5fc7476a4fabc" prot="public" static="no">
        <name>ACTION_P6</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1653" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a82d96846bae4fee8432385fd24b0a7ee" prot="public" static="no">
        <name>ACTION_P7</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1726" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a150147ecae8b84107be8575e4b2560cc" prot="public" static="no">
        <name>ACTION_P8</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1807" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1807" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1a6a38804f2dce3fa758335676b4c26cda" prot="public" static="no">
        <name>ACTION_P9</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1894" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-actions_8h_1aff3ff3b23965dd03539aa4cbc5181002" prot="public" static="no">
        <name>ACTION_P10</name>
        <param><defname>name</defname></param>
        <param><defname>p0</defname></param>
        <param><defname>p1</defname></param>
        <param><defname>p2</defname></param>
        <param><defname>p3</defname></param>
        <param><defname>p4</defname></param>
        <param><defname>p5</defname></param>
        <param><defname>p6</defname></param>
        <param><defname>p7</defname></param>
        <param><defname>p8</defname></param>
        <param><defname>p9</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" line="1985" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h" bodystart="1985" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>was<sp/>GENERATED<sp/>by<sp/>a<sp/>script.<sp/><sp/>DO<sp/>NOT<sp/>EDIT<sp/>BY<sp/>HAND!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Mock<sp/>-<sp/>a<sp/>framework<sp/>for<sp/>writing<sp/>C++<sp/>mock<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>implements<sp/>some<sp/>commonly<sp/>used<sp/>variadic<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_ACTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_ACTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/gmock-actions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>InvokeHelper&lt;F&gt;<sp/>knows<sp/>how<sp/>to<sp/>unpack<sp/>an<sp/>N-tuple<sp/>and<sp/>invoke<sp/>an<sp/>N-ary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>or<sp/>method<sp/>with<sp/>the<sp/>unpacked<sp/>values,<sp/>where<sp/>F<sp/>is<sp/>a<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>type<sp/>that<sp/>takes<sp/>N<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple&gt;</highlight></codeline>
<codeline lineno="51" refid="classtesting_1_1internal_1_1_invoke_helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="54" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;&gt;&amp;)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;&gt;&amp;)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="70" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="86" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="102" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="119" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_00_01_a4_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A4&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;3&gt;(args));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="139" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_5dd6c0827e45a39a81d93a14211e2a19" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A5&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="159" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_5653fefa261cff106ebaaf9c78f6ee42" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A6&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="179" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_9169216bddd5005837acd145af38ec6f" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A6,<sp/>A7&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A7&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;6&gt;(args));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="201" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_c90976166c933075c49792215d8203bb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A6,<sp/>A7,<sp/>A8&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;7&gt;(args));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A8&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;6&gt;(args),<sp/>get&lt;7&gt;(args));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="224" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_cb3e0694d0722fcc616ae618dc383e5b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;7&gt;(args),<sp/>get&lt;8&gt;(args));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A9&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;6&gt;(args),<sp/>get&lt;7&gt;(args),<sp/>get&lt;8&gt;(args));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="248" refid="classtesting_1_1internal_1_1_invoke_helper_3_01_r_00_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_d7025e877e4f690a17d0a7f1e26fac53" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_invoke_helper" kindref="compound">InvokeHelper</ref>&lt;R,<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>A10&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>Invoke(<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,<sp/>A10&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;7&gt;(args),<sp/>get&lt;8&gt;(args),<sp/>get&lt;9&gt;(args));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MethodPtr&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>R<sp/>InvokeMethod(Class*<sp/>obj_ptr,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MethodPtr<sp/>method_ptr,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A9,<sp/>A10&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj_ptr-&gt;*method_ptr)(get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;6&gt;(args),<sp/>get&lt;7&gt;(args),<sp/>get&lt;8&gt;(args),<sp/>get&lt;9&gt;(args));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>INTERNAL<sp/>macro<sp/>for<sp/>extracting<sp/>the<sp/>type<sp/>of<sp/>a<sp/>tuple<sp/>field.<sp/><sp/>It&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>subject<sp/>to<sp/>change<sp/>without<sp/>notice<sp/>-<sp/>DO<sp/>NOT<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_FIELD_(Tuple,<sp/>N)<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>::testing::tuple_element&lt;N,<sp/>Tuple&gt;::type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SelectArgs&lt;Result,<sp/>ArgumentTuple,<sp/>k1,<sp/>k2,<sp/>...,<sp/>k_n&gt;::type<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>type<sp/>of<sp/>an<sp/>n-ary<sp/>function<sp/>whose<sp/>i-th<sp/>(1-based)<sp/>argument<sp/>type<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>k{i}-th<sp/>(0-based)<sp/>field<sp/>of<sp/>ArgumentTuple,<sp/>which<sp/>must<sp/>be<sp/>a<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>type,<sp/>and<sp/>whose<sp/>return<sp/>type<sp/>is<sp/>Result.<sp/><sp/>For<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>SelectArgs&lt;int,<sp/>::testing::tuple&lt;bool,<sp/>char,<sp/>double,<sp/>long&gt;,<sp/>0,<sp/>3&gt;::type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>int(bool,<sp/>long).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SelectArgs&lt;Result,<sp/>ArgumentTuple,<sp/>k1,<sp/>k2,<sp/>...,<sp/>k_n&gt;::Select(args)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>selected<sp/>fields<sp/>(k1,<sp/>k2,<sp/>...,<sp/>k_n)<sp/>of<sp/>args<sp/>as<sp/>a<sp/>tuple.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>SelectArgs&lt;int,<sp/>tuple&lt;bool,<sp/>char,<sp/>double&gt;,<sp/>2,<sp/>0&gt;::Select(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::make_tuple(true,<sp/>&apos;a&apos;,<sp/>2.5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>tuple<sp/>(2.5,<sp/>true).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>numbers<sp/>in<sp/>list<sp/>k1,<sp/>k2,<sp/>...,<sp/>k_n<sp/>must<sp/>be<sp/>&gt;=<sp/>0,<sp/>where<sp/>n<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>10].<sp/><sp/>Duplicates<sp/>are<sp/>allowed<sp/>and<sp/>they<sp/>don&apos;t<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>in<sp/>an<sp/>ascending<sp/>or<sp/>descending<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k10&gt;</highlight></codeline>
<codeline lineno="295" refid="classtesting_1_1internal_1_1_select_args" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k4),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k5),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k6),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k7),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k8),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k9),</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k10));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args),</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k4&gt;(args),<sp/>get&lt;k5&gt;(args),<sp/>get&lt;k6&gt;(args),<sp/>get&lt;k7&gt;(args),</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k8&gt;(args),<sp/>get&lt;k9&gt;(args),<sp/>get&lt;k10&gt;(args));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal">};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple&gt;</highlight></codeline>
<codeline lineno="312" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01-1_00_01-1_00_01-99299a766a33bd3110e39f51f43b194a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/></highlight><highlight class="comment">/*<sp/>args<sp/>*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal">};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1&gt;</highlight></codeline>
<codeline lineno="323" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01-1_00_01-33116bd77067572e384b90e7c70b03c4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal">};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2&gt;</highlight></codeline>
<codeline lineno="334" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01-03e4fb75e6504ae34fdb48d64bb6de95" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal">};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3&gt;</highlight></codeline>
<codeline lineno="346" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k43121451b69bc30ee1dad887e67d8807" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4&gt;</highlight></codeline>
<codeline lineno="359" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k7cadbb88f40ff7408f8c070bb61c70db" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k4));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args),</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k4&gt;(args));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5&gt;</highlight></codeline>
<codeline lineno="374" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k6061407a5fa2cad2c495e8e16ee67874" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k4),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k5));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args),</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k4&gt;(args),<sp/>get&lt;k5&gt;(args));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal">};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6&gt;</highlight></codeline>
<codeline lineno="389" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k203aa538560773abfacd746d313c06ae" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3),</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k4),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k5),</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k6));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args),</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k4&gt;(args),<sp/>get&lt;k5&gt;(args),<sp/>get&lt;k6&gt;(args));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal">};</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7&gt;</highlight></codeline>
<codeline lineno="405" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01kf4b89906ed32c76471b80b75f77e1355" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>-1,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3),</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k4),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k5),</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k6),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k7));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args),</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k4&gt;(args),<sp/>get&lt;k5&gt;(args),<sp/>get&lt;k6&gt;(args),<sp/>get&lt;k7&gt;(args));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal">};</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8&gt;</highlight></codeline>
<codeline lineno="421" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01ke29a32f440a8fcb098d8685a265f9f40" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,<sp/>-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3),</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k4),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k5),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k6),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k7),</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k8));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k4&gt;(args),<sp/>get&lt;k5&gt;(args),<sp/>get&lt;k6&gt;(args),<sp/>get&lt;k7&gt;(args),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k8&gt;(args));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal">};</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentTuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9&gt;</highlight></codeline>
<codeline lineno="439" refid="classtesting_1_1internal_1_1_select_args_3_01_result_00_01_argument_tuple_00_01k1_00_01k2_00_01k6840fe77dccd76bc2d4e4ee1c75cd6f1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,<sp/>k9,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Result<sp/>type(GMOCK_FIELD_(ArgumentTuple,<sp/>k1),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k2),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k3),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k4),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k5),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k6),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k7),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k8),<sp/>GMOCK_FIELD_(ArgumentTuple,<sp/>k9));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;type&gt;::ArgumentTuple</ref><sp/>SelectedArgs;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SelectedArgs<sp/>Select(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SelectedArgs(get&lt;k1&gt;(args),<sp/>get&lt;k2&gt;(args),<sp/>get&lt;k3&gt;(args),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k4&gt;(args),<sp/>get&lt;k5&gt;(args),<sp/>get&lt;k6&gt;(args),<sp/>get&lt;k7&gt;(args),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;k8&gt;(args),<sp/>get&lt;k9&gt;(args));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>GMOCK_FIELD_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implements<sp/>the<sp/>WithArgs<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k10<sp/>=<sp/>-1&gt;</highlight></codeline>
<codeline lineno="461" refid="classtesting_1_1internal_1_1_with_args_action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">WithArgsAction</ref><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">WithArgsAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>:<sp/>action_(action)<sp/>{}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_action" kindref="compound">Action&lt;F&gt;</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MakeAction(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Impl&lt;F&gt;(action_));<sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Impl<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_action_interface" kindref="compound">ActionInterface</ref>&lt;F&gt;<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;F&gt;::Result</ref><sp/>Result;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Impl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>:<sp/>action_(action)<sp/>{}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Result<sp/>Perform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArgumentTuple&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action_.Perform(<ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,<sp/>k9,<sp/>k10&gt;::Select(args));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_select_args" kindref="compound">SelectArgs</ref>&lt;Result,<sp/>ArgumentTuple,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,<sp/>k9,<sp/>k10&gt;::type<sp/>InnerFunctionType;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_action" kindref="compound">Action&lt;InnerFunctionType&gt;</ref><sp/>action_;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction<sp/>action_;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_ASSIGN_(<ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">WithArgsAction</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal">};</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>macro<sp/>from<sp/>the<sp/>ACTION*<sp/>family<sp/>(defined<sp/>later<sp/>in<sp/>this<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defines<sp/>an<sp/>action<sp/>that<sp/>can<sp/>be<sp/>used<sp/>in<sp/>a<sp/>mock<sp/>function.<sp/><sp/>Typically,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>actions<sp/>only<sp/>care<sp/>about<sp/>a<sp/>subset<sp/>of<sp/>the<sp/>arguments<sp/>of<sp/>the<sp/>mock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function.<sp/><sp/>For<sp/>example,<sp/>if<sp/>such<sp/>an<sp/>action<sp/>only<sp/>uses<sp/>the<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>argument,<sp/>it<sp/>can<sp/>be<sp/>used<sp/>in<sp/>any<sp/>mock<sp/>function<sp/>that<sp/>takes<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>where<sp/>the<sp/>type<sp/>of<sp/>the<sp/>second<sp/>argument<sp/>is<sp/>compatible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Therefore,<sp/>the<sp/>action<sp/>implementation<sp/>must<sp/>be<sp/>prepared<sp/>to<sp/>take<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>than<sp/>it<sp/>needs.<sp/><sp/>The<sp/>ExcessiveArg<sp/>type<sp/>is<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/>represent<sp/>those<sp/>excessive<sp/>arguments.<sp/><sp/>In<sp/>order<sp/>to<sp/>keep<sp/>the<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>error<sp/>messages<sp/>tractable,<sp/>we<sp/>define<sp/>it<sp/>in<sp/>the<sp/>testing<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>testing::internal.<sp/><sp/>However,<sp/>this<sp/>is<sp/>an<sp/>INTERNAL<sp/>TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>subject<sp/>to<sp/>change<sp/>without<sp/>notice,<sp/>so<sp/>a<sp/>user<sp/>MUST<sp/>NOT<sp/>USE<sp/>THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TYPE<sp/>DIRECTLY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="structtesting_1_1internal_1_1_excessive_arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref><sp/>{};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>class<sp/>needed<sp/>for<sp/>implementing<sp/>the<sp/>ACTION*<sp/>macros.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Impl&gt;</highlight></codeline>
<codeline lineno="512" refid="classtesting_1_1internal_1_1_action_helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_action_helper" kindref="compound">ActionHelper</ref><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;&gt;(args,<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0&gt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0&gt;(args,<sp/>get&lt;0&gt;(args),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1&gt;(args,<sp/>get&lt;0&gt;(args),</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;1&gt;(args),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2&gt;(args,<sp/>get&lt;0&gt;(args),</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A3&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3&gt;(args,<sp/>get&lt;0&gt;(args),</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A4&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;(args,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A5&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5&gt;(args,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;5&gt;(args),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A5,<sp/>A6&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6&gt;(args,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),<sp/>get&lt;4&gt;(args),</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A5,<sp/>A6,<sp/>A7&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A7&gt;(args,<sp/>get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args),<sp/>get&lt;7&gt;(args),<sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>(),</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A8&gt;(args,<sp/>get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args),<sp/>get&lt;7&gt;(args),<sp/>get&lt;8&gt;(args),</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1_excessive_arg" kindref="compound">ExcessiveArg</ref>());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Result<sp/>Perform(Impl*<sp/>impl,<sp/>const<sp/>::testing::tuple&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl-&gt;template<sp/>gmock_PerformImpl&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A9&gt;(args,<sp/>get&lt;0&gt;(args),<sp/>get&lt;1&gt;(args),<sp/>get&lt;2&gt;(args),<sp/>get&lt;3&gt;(args),</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;4&gt;(args),<sp/>get&lt;5&gt;(args),<sp/>get&lt;6&gt;(args),<sp/>get&lt;7&gt;(args),<sp/>get&lt;8&gt;(args),</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get&lt;9&gt;(args));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal">};</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Various<sp/>overloads<sp/>for<sp/>Invoke().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WithArgs&lt;N1,<sp/>N2,<sp/>...,<sp/>Nk&gt;(an_action)<sp/>creates<sp/>an<sp/>action<sp/>that<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>selected<sp/>arguments<sp/>of<sp/>the<sp/>mock<sp/>function<sp/>to<sp/>an_action<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>performs<sp/>it.<sp/><sp/>It<sp/>serves<sp/>as<sp/>an<sp/>adaptor<sp/>between<sp/>actions<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/>different<sp/>argument<sp/>lists.<sp/><sp/>C++<sp/>doesn&apos;t<sp/>support<sp/>default<sp/>arguments<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>templates,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>overload<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1&gt;</ref></highlight></codeline>
<codeline lineno="625"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1&gt;</ref>(action);</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2&gt;</ref></highlight></codeline>
<codeline lineno="631"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2&gt;</ref>(action);</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3&gt;</ref></highlight></codeline>
<codeline lineno="637"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3&gt;</ref>(action);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4&gt;</ref></highlight></codeline>
<codeline lineno="643"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4&gt;</ref>(action);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4, k5&gt;</ref></highlight></codeline>
<codeline lineno="649"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4, k5&gt;</ref>(action);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4, k5, k6&gt;</ref></highlight></codeline>
<codeline lineno="655"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4, k5, k6&gt;</ref>(action);</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4, k5, k6, k7&gt;</ref></highlight></codeline>
<codeline lineno="662"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction</ref>&lt;InnerAction,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k7&gt;(action);</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4, k5, k6, k7, k8&gt;</ref></highlight></codeline>
<codeline lineno="670"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction</ref>&lt;InnerAction,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k8&gt;(action);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction&lt;InnerAction, k1, k2, k3, k4, k5, k6, k7, k8, k9&gt;</ref></highlight></codeline>
<codeline lineno="678"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction</ref>&lt;InnerAction,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k9&gt;(action);</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k8,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k9,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InnerAction&gt;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction</ref>&lt;InnerAction,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>k9,<sp/>k10&gt;</highlight></codeline>
<codeline lineno="687"><highlight class="normal">WithArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InnerAction&amp;<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_with_args_action" kindref="compound">internal::WithArgsAction</ref>&lt;InnerAction,<sp/>k1,<sp/>k2,<sp/>k3,<sp/>k4,<sp/>k5,<sp/>k6,<sp/>k7,<sp/>k8,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k9,<sp/>k10&gt;(action);</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>an<sp/>action<sp/>that<sp/>does<sp/>actions<sp/>a1,<sp/>a2,<sp/>...,<sp/>sequentially<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">//<sp/>each<sp/>invocation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2&gt;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction&lt;Action1, Action2&gt;</ref></highlight></codeline>
<codeline lineno="696"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction&lt;Action1, Action2&gt;</ref>(a1,<sp/>a2);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3&gt;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>Action3&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="703"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3));</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action4&gt;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction&lt;Action3, Action4&gt;</ref><sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3,<sp/>Action4<sp/>a4)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3,<sp/>a4));</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action5&gt;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action3,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action4,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>Action5&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3,<sp/>Action4<sp/>a4,<sp/>Action5<sp/>a5)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3,<sp/>a4,<sp/>a5));</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action6&gt;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action3,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action4,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction&lt;Action5, Action6&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="729"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3,<sp/>Action4<sp/>a4,<sp/>Action5<sp/>a5,<sp/>Action6<sp/>a6)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6));</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action7&gt;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action3,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action4,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action5,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action6,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>Action7&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="739"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3,<sp/>Action4<sp/>a4,<sp/>Action5<sp/>a5,<sp/>Action6<sp/>a6,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>Action7<sp/>a7)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7));</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action7,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action8&gt;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action3,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action4,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action5,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action6,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction&lt;Action7, Action8&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="751"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3,<sp/>Action4<sp/>a4,<sp/>Action5<sp/>a5,<sp/>Action6<sp/>a6,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>Action7<sp/>a7,<sp/>Action8<sp/>a8)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8));</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action7,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action9&gt;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action3,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action4,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action5,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action6,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action7,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action8,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>Action9&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3,<sp/>Action4<sp/>a4,<sp/>Action5<sp/>a5,<sp/>Action6<sp/>a6,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>Action7<sp/>a7,<sp/>Action8<sp/>a8,<sp/>Action9<sp/>a9)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9));</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action3,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action7,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action10&gt;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action1,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action2,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action3,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action4,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action5,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action6,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action7,<sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction</ref>&lt;Action8,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_do_both_action" kindref="compound">internal::DoBothAction&lt;Action9, Action10&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">DoAll(Action1<sp/>a1,<sp/>Action2<sp/>a2,<sp/>Action3<sp/>a3,<sp/>Action4<sp/>a4,<sp/>Action5<sp/>a5,<sp/>Action6<sp/>a6,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>Action7<sp/>a7,<sp/>Action8<sp/>a8,<sp/>Action9<sp/>a9,<sp/>Action10<sp/>a10)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DoAll(a1,<sp/>DoAll(a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9,<sp/>a10));</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ACTION*<sp/>family<sp/>of<sp/>macros<sp/>can<sp/>be<sp/>used<sp/>in<sp/>a<sp/>namespace<sp/>scope<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>custom<sp/>actions<sp/>easily.<sp/><sp/>The<sp/>syntax:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION(name)<sp/>{<sp/>statements;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>define<sp/>an<sp/>action<sp/>with<sp/>the<sp/>given<sp/>name<sp/>that<sp/>executes<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">//<sp/>statements.<sp/><sp/>The<sp/>value<sp/>returned<sp/>by<sp/>the<sp/>statements<sp/>will<sp/>be<sp/>used<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>return<sp/>value<sp/>of<sp/>the<sp/>action.<sp/><sp/>Inside<sp/>the<sp/>statements,<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="comment">//<sp/>refer<sp/>to<sp/>the<sp/>K-th<sp/>(0-based)<sp/>argument<sp/>of<sp/>the<sp/>mock<sp/>function<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;argK&apos;,<sp/>and<sp/>refer<sp/>to<sp/>its<sp/>type<sp/>by<sp/>&apos;argK_type&apos;.<sp/><sp/>For<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION(IncrementArg1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>temp<sp/>=<sp/>arg1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>++(*temp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allows<sp/>you<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...WillOnce(IncrementArg1());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>also<sp/>refer<sp/>to<sp/>the<sp/>entire<sp/>argument<sp/>tuple<sp/>and<sp/>its<sp/>type<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;args&apos;<sp/>and<sp/>&apos;args_type&apos;,<sp/>and<sp/>refer<sp/>to<sp/>the<sp/>mock<sp/>function<sp/>type<sp/>and<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>type<sp/>by<sp/>&apos;function_type&apos;<sp/>and<sp/>&apos;return_type&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>you<sp/>don&apos;t<sp/>need<sp/>to<sp/>specify<sp/>the<sp/>types<sp/>of<sp/>the<sp/>mock<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments.<sp/><sp/>However<sp/>rest<sp/>assured<sp/>that<sp/>your<sp/>code<sp/>is<sp/>still<sp/>type-safe:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you&apos;ll<sp/>get<sp/>a<sp/>compiler<sp/>error<sp/>if<sp/>*arg1<sp/>doesn&apos;t<sp/>support<sp/>the<sp/>++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator,<sp/>or<sp/>if<sp/>the<sp/>type<sp/>of<sp/>++(*arg1)<sp/>isn&apos;t<sp/>compatible<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mock<sp/>function&apos;s<sp/>return<sp/>type,<sp/>for<sp/>example.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sometimes<sp/>you&apos;ll<sp/>want<sp/>to<sp/>parameterize<sp/>the<sp/>action.<sp/><sp/><sp/>For<sp/>that<sp/>you<sp/>can<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="comment">//<sp/>another<sp/>macro:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION_P(name,<sp/>param_name)<sp/>{<sp/>statements;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION_P(Add,<sp/>n)<sp/>{<sp/>return<sp/>arg0<sp/>+<sp/>n;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>allow<sp/>you<sp/>to<sp/>write:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...WillOnce(Add(5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>you<sp/>don&apos;t<sp/>need<sp/>to<sp/>provide<sp/>the<sp/>type<sp/>of<sp/>the<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>either.<sp/><sp/>If<sp/>you<sp/>need<sp/>to<sp/>reference<sp/>the<sp/>type<sp/>of<sp/>a<sp/>parameter<sp/>named</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;foo&apos;,<sp/>you<sp/>can<sp/>write<sp/>&apos;foo_type&apos;.<sp/><sp/>For<sp/>example,<sp/>in<sp/>the<sp/>body<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ACTION_P(Add,<sp/>n)<sp/>above,<sp/>you<sp/>can<sp/>write<sp/>&apos;n_type&apos;<sp/>to<sp/>refer<sp/>to<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>&apos;n&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>also<sp/>provide<sp/>ACTION_P2,<sp/>ACTION_P3,<sp/>...,<sp/>up<sp/>to<sp/>ACTION_P10<sp/>to<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multi-parameter<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>purpose<sp/>of<sp/>typing,<sp/>you<sp/>can<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION_Pk(Foo,<sp/>p1,<sp/>...,<sp/>pk)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>shorthand<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>template<sp/>&lt;typename<sp/>p1_type,<sp/>...,<sp/>typename<sp/>pk_type&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>FooActionPk&lt;p1_type,<sp/>...,<sp/>pk_type&gt;<sp/>Foo(p1_type<sp/>p1,<sp/>...,<sp/>pk_type<sp/>pk)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>particular,<sp/>you<sp/>can<sp/>provide<sp/>the<sp/>template<sp/>type<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>explicitly<sp/>when<sp/>invoking<sp/>Foo(),<sp/>as<sp/>in<sp/>Foo&lt;long,<sp/>bool&gt;(5,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>although<sp/>usually<sp/>you<sp/>can<sp/>rely<sp/>on<sp/>the<sp/>compiler<sp/>to<sp/>infer<sp/>the<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>you<sp/>automatically.<sp/><sp/>You<sp/>can<sp/>assign<sp/>the<sp/>result<sp/>of<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Foo(p1,<sp/>...,<sp/>pk)<sp/>to<sp/>a<sp/>variable<sp/>of<sp/>type<sp/>FooActionPk&lt;p1_type,<sp/>...,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pk_type&gt;.<sp/><sp/>This<sp/>can<sp/>be<sp/>useful<sp/>when<sp/>composing<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>also<sp/>overload<sp/>actions<sp/>with<sp/>different<sp/>numbers<sp/>of<sp/>parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION_P(Plus,<sp/>a)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION_P2(Plus,<sp/>a,<sp/>b)<sp/>{<sp/>...<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>While<sp/>it&apos;s<sp/>tempting<sp/>to<sp/>always<sp/>use<sp/>the<sp/>ACTION*<sp/>macros<sp/>when<sp/>defining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>new<sp/>action,<sp/>you<sp/>should<sp/>also<sp/>consider<sp/>implementing<sp/>ActionInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>using<sp/>MakePolymorphicAction()<sp/>instead,<sp/>especially<sp/>if<sp/>you<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>action<sp/>a<sp/>lot.<sp/><sp/>While<sp/>these<sp/>approaches<sp/>require<sp/>more<sp/>work,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">//<sp/>they<sp/>give<sp/>you<sp/>more<sp/>control<sp/>on<sp/>the<sp/>types<sp/>of<sp/>the<sp/>mock<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>and<sp/>the<sp/>action<sp/>parameters,<sp/>which<sp/>in<sp/>general<sp/>leads<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">//<sp/>better<sp/>compiler<sp/>error<sp/>messages<sp/>that<sp/>pay<sp/>off<sp/>in<sp/>the<sp/>long<sp/>run.<sp/><sp/>They</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>allow<sp/>overloading<sp/>actions<sp/>based<sp/>on<sp/>parameter<sp/>types<sp/>(as<sp/>opposed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>just<sp/>based<sp/>on<sp/>the<sp/>number<sp/>of<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CAVEAT:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ACTION*()<sp/>can<sp/>only<sp/>be<sp/>used<sp/>in<sp/>a<sp/>namespace<sp/>scope.<sp/><sp/>The<sp/>reason<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>C++<sp/>doesn&apos;t<sp/>yet<sp/>allow<sp/>function-local<sp/>types<sp/>to<sp/>be<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instantiate<sp/>templates.<sp/><sp/>The<sp/>up-coming<sp/>C++0x<sp/>standard<sp/>will<sp/>fix<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Once<sp/>that&apos;s<sp/>done,<sp/>we&apos;ll<sp/>consider<sp/>supporting<sp/>using<sp/>ACTION*()<sp/>inside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MORE<sp/>INFORMATION:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>learn<sp/>more<sp/>about<sp/>using<sp/>these<sp/>macros,<sp/>please<sp/>search<sp/>for<sp/>&apos;ACTION&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>http://code.google.com/p/googlemock/wiki/CookBook.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>internal<sp/>macro<sp/>needed<sp/>for<sp/>implementing<sp/>ACTION*().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_\</highlight></codeline>
<codeline lineno="882"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>args_type&amp;<sp/>args<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="883"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg0_type<sp/>arg0<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="884"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="885"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg2_type<sp/>arg2<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="886"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg3_type<sp/>arg3<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="887"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg4_type<sp/>arg4<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="888"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="889"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg6_type<sp/>arg6<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg7_type<sp/>arg7<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="891"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg8_type<sp/>arg8<sp/>GTEST_ATTRIBUTE_UNUSED_,<sp/>\</highlight></codeline>
<codeline lineno="892"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9<sp/>GTEST_ATTRIBUTE_UNUSED_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sometimes<sp/>you<sp/>want<sp/>to<sp/>give<sp/>an<sp/>action<sp/>explicit<sp/>template<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>cannot<sp/>be<sp/>inferred<sp/>from<sp/>its<sp/>value<sp/>parameters.<sp/><sp/>ACTION()<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ACTION_P*()<sp/>don&apos;t<sp/>support<sp/>that.<sp/><sp/>ACTION_TEMPLATE()<sp/>remedies<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>can<sp/>be<sp/>viewed<sp/>as<sp/>an<sp/>extension<sp/>to<sp/>ACTION()<sp/>and<sp/>ACTION_P*().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>syntax:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION_TEMPLATE(ActionName,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_m_TEMPLATE_PARAMS(kind1,<sp/>name1,<sp/>...,<sp/>kind_m,<sp/>name_m),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_n_VALUE_PARAMS(p1,<sp/>...,<sp/>p_n))<sp/>{<sp/>statements;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defines<sp/>an<sp/>action<sp/>template<sp/>that<sp/>takes<sp/>m<sp/>explicit<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameters<sp/>and<sp/>n<sp/>value<sp/>parameters.<sp/><sp/>name_i<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>i-th</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>parameter,<sp/>and<sp/>kind_i<sp/>specifies<sp/>whether<sp/>it&apos;s<sp/>a<sp/>typename,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>integral<sp/>constant,<sp/>or<sp/>a<sp/>template.<sp/><sp/>p_i<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>i-th</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>value<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>DuplicateArg&lt;k,<sp/>T&gt;(output)<sp/>converts<sp/>the<sp/>k-th<sp/>argument<sp/>of<sp/>the<sp/>mock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>function<sp/>to<sp/>type<sp/>T<sp/>and<sp/>copies<sp/>it<sp/>to<sp/>*output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ACTION_TEMPLATE(DuplicateArg,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_2_TEMPLATE_PARAMS(int,<sp/>k,<sp/>typename,<sp/>T),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_1_VALUE_PARAMS(output))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*output<sp/>=<sp/>T(::testing::get&lt;k&gt;(args));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>n;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>EXPECT_CALL(mock,<sp/>Foo(_,<sp/>_))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.WillOnce(DuplicateArg&lt;1,<sp/>unsigned<sp/>char&gt;(&amp;n));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>create<sp/>an<sp/>instance<sp/>of<sp/>an<sp/>action<sp/>template,<sp/>write:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ActionName&lt;t1,<sp/>...,<sp/>t_m&gt;(v1,<sp/>...,<sp/>v_n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>the<sp/>ts<sp/>are<sp/>the<sp/>template<sp/>arguments<sp/>and<sp/>the<sp/>vs<sp/>are<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments.<sp/><sp/>The<sp/>value<sp/>argument<sp/>types<sp/>are<sp/>inferred<sp/>by<sp/>the<sp/>compiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>want<sp/>to<sp/>explicitly<sp/>specify<sp/>the<sp/>value<sp/>argument<sp/>types,<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provide<sp/>additional<sp/>template<sp/>arguments:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ActionName&lt;t1,<sp/>...,<sp/>t_m,<sp/>u1,<sp/>...,<sp/>u_k&gt;(v1,<sp/>...,<sp/>v_n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>u_i<sp/>is<sp/>the<sp/>desired<sp/>type<sp/>of<sp/>v_i.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ACTION_TEMPLATE<sp/>and<sp/>ACTION/ACTION_P*<sp/>can<sp/>be<sp/>overloaded<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>value<sp/>parameters,<sp/>but<sp/>not<sp/>on<sp/>the<sp/>number<sp/>of<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameters.<sp/><sp/>Without<sp/>the<sp/>restriction,<sp/>the<sp/>meaning<sp/>of<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>unclear:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>OverloadedAction&lt;int,<sp/>bool&gt;(x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Are<sp/>we<sp/>using<sp/>a<sp/>single-template-parameter<sp/>action<sp/>where<sp/>&apos;bool&apos;<sp/>refers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>type<sp/>of<sp/>x,<sp/>or<sp/>are<sp/>we<sp/>using<sp/>a<sp/>two-template-parameter<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>the<sp/>compiler<sp/>is<sp/>asked<sp/>to<sp/>infer<sp/>the<sp/>type<sp/>of<sp/>x?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>notes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GMOCK_INTERNAL_*_HAS_m_TEMPLATE_PARAMS<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GMOCK_INTERNAL_*_AND_n_VALUE_PARAMS<sp/>are<sp/>internal<sp/>macros<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementing<sp/>ACTION_TEMPLATE.<sp/><sp/>The<sp/>main<sp/>trick<sp/>we<sp/>use<sp/>is<sp/>to<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment">//<sp/>new<sp/>macro<sp/>invocations<sp/>when<sp/>expanding<sp/>a<sp/>macro.<sp/><sp/>For<sp/>example,<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>#define<sp/>ACTION_TEMPLATE(name,<sp/>template_params,<sp/>value_params)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>GMOCK_INTERNAL_DECL_##template_params<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>causes<sp/>ACTION_TEMPLATE(...,<sp/>HAS_1_TEMPLATE_PARAMS(typename,<sp/>T),<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>expand<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS(typename,<sp/>T)<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS<sp/>is<sp/>a<sp/>macro,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">//<sp/>preprocessor<sp/>will<sp/>continue<sp/>to<sp/>expand<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>typename<sp/>T<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>technique<sp/>conforms<sp/>to<sp/>the<sp/>C++<sp/>standard<sp/>and<sp/>is<sp/>portable.<sp/><sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allows<sp/>us<sp/>to<sp/>implement<sp/>action<sp/>templates<sp/>using<sp/>O(N)<sp/>code,<sp/>where<sp/>N<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>template/value<sp/>parameters<sp/>supported.<sp/><sp/>Without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>it,<sp/>we&apos;d<sp/>have<sp/>to<sp/>devote<sp/>O(N^2)<sp/>amount<sp/>of<sp/>code<sp/>to<sp/>implement<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">//<sp/>combinations<sp/>of<sp/>m<sp/>and<sp/>n.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declares<sp/>the<sp/>template<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS(kind0,<sp/>name0)<sp/>kind0<sp/>name0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>\</highlight></codeline>
<codeline lineno="978"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name1)<sp/>kind0<sp/>name0,<sp/>kind1<sp/>name1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="980"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2)<sp/>kind0<sp/>name0,<sp/>kind1<sp/>name1,<sp/>kind2<sp/>name2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="982"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3)<sp/>kind0<sp/>name0,<sp/>kind1<sp/>name1,<sp/>kind2<sp/>name2,<sp/>\</highlight></codeline>
<codeline lineno="983"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind3<sp/>name3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="985"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4)<sp/>kind0<sp/>name0,<sp/>kind1<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="986"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2<sp/>name2,<sp/>kind3<sp/>name3,<sp/>kind4<sp/>name4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="988"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5)<sp/>kind0<sp/>name0,<sp/>\</highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind1<sp/>name1,<sp/>kind2<sp/>name2,<sp/>kind3<sp/>name3,<sp/>kind4<sp/>name4,<sp/>kind5<sp/>name5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="991"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>\</highlight></codeline>
<codeline lineno="992"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name6)<sp/>kind0<sp/>name0,<sp/>kind1<sp/>name1,<sp/>kind2<sp/>name2,<sp/>kind3<sp/>name3,<sp/>kind4<sp/>name4,<sp/>\</highlight></codeline>
<codeline lineno="993"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind5<sp/>name5,<sp/>kind6<sp/>name6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="995"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>name6,<sp/>\</highlight></codeline>
<codeline lineno="996"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind7,<sp/>name7)<sp/>kind0<sp/>name0,<sp/>kind1<sp/>name1,<sp/>kind2<sp/>name2,<sp/>kind3<sp/>name3,<sp/>\</highlight></codeline>
<codeline lineno="997"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind4<sp/>name4,<sp/>kind5<sp/>name5,<sp/>kind6<sp/>name6,<sp/>kind7<sp/>name7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="999"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>name6,<sp/>\</highlight></codeline>
<codeline lineno="1000"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind7,<sp/>name7,<sp/>kind8,<sp/>name8)<sp/>kind0<sp/>name0,<sp/>kind1<sp/>name1,<sp/>kind2<sp/>name2,<sp/>\</highlight></codeline>
<codeline lineno="1001"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind3<sp/>name3,<sp/>kind4<sp/>name4,<sp/>kind5<sp/>name5,<sp/>kind6<sp/>name6,<sp/>kind7<sp/>name7,<sp/>\</highlight></codeline>
<codeline lineno="1002"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind8<sp/>name8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>\</highlight></codeline>
<codeline lineno="1004"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name1,<sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>\</highlight></codeline>
<codeline lineno="1005"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name6,<sp/>kind7,<sp/>name7,<sp/>kind8,<sp/>name8,<sp/>kind9,<sp/>name9)<sp/>kind0<sp/>name0,<sp/>\</highlight></codeline>
<codeline lineno="1006"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind1<sp/>name1,<sp/>kind2<sp/>name2,<sp/>kind3<sp/>name3,<sp/>kind4<sp/>name4,<sp/>kind5<sp/>name5,<sp/>\</highlight></codeline>
<codeline lineno="1007"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind6<sp/>name6,<sp/>kind7<sp/>name7,<sp/>kind8<sp/>name8,<sp/>kind9<sp/>name9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>the<sp/>template<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS(kind0,<sp/>name0)<sp/>name0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>\</highlight></codeline>
<codeline lineno="1012"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name1)<sp/>name0,<sp/>name1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1014"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2)<sp/>name0,<sp/>name1,<sp/>name2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1016"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3)<sp/>name0,<sp/>name1,<sp/>name2,<sp/>name3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1018"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4)<sp/>name0,<sp/>name1,<sp/>name2,<sp/>name3,<sp/>\</highlight></codeline>
<codeline lineno="1019"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1021"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5)<sp/>name0,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1022"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name2,<sp/>name3,<sp/>name4,<sp/>name5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1024"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>\</highlight></codeline>
<codeline lineno="1025"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name6)<sp/>name0,<sp/>name1,<sp/>name2,<sp/>name3,<sp/>name4,<sp/>name5,<sp/>name6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1027"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>name6,<sp/>\</highlight></codeline>
<codeline lineno="1028"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind7,<sp/>name7)<sp/>name0,<sp/>name1,<sp/>name2,<sp/>name3,<sp/>name4,<sp/>name5,<sp/>name6,<sp/>name7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>name1,<sp/>\</highlight></codeline>
<codeline lineno="1030"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>name6,<sp/>\</highlight></codeline>
<codeline lineno="1031"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>kind7,<sp/>name7,<sp/>kind8,<sp/>name8)<sp/>name0,<sp/>name1,<sp/>name2,<sp/>name3,<sp/>name4,<sp/>name5,<sp/>\</highlight></codeline>
<codeline lineno="1032"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name6,<sp/>name7,<sp/>name8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS(kind0,<sp/>name0,<sp/>kind1,<sp/>\</highlight></codeline>
<codeline lineno="1034"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name1,<sp/>kind2,<sp/>name2,<sp/>kind3,<sp/>name3,<sp/>kind4,<sp/>name4,<sp/>kind5,<sp/>name5,<sp/>kind6,<sp/>\</highlight></codeline>
<codeline lineno="1035"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name6,<sp/>kind7,<sp/>name7,<sp/>kind8,<sp/>name8,<sp/>kind9,<sp/>name9)<sp/>name0,<sp/>name1,<sp/>name2,<sp/>\</highlight></codeline>
<codeline lineno="1036"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name3,<sp/>name4,<sp/>name5,<sp/>name6,<sp/>name7,<sp/>name8,<sp/>name9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declares<sp/>the<sp/>types<sp/>of<sp/>value<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS(p0)<sp/>,<sp/>typename<sp/>p0##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS(p0,<sp/>p1)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1042"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1044"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1046"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1047"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p3##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1049"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1050"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1052"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1053"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1055"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6)<sp/>,<sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1056"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1057"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p6##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1059"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6,<sp/>p7)<sp/>,<sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1060"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1061"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1063"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6,<sp/>p7,<sp/>p8)<sp/>,<sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1064"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1065"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1067"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9)<sp/>,<sp/>typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>\</highlight></codeline>
<codeline lineno="1068"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p2##_type,<sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1069"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p5##_type,<sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>\</highlight></codeline>
<codeline lineno="1070"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>p8##_type,<sp/>typename<sp/>p9##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initializes<sp/>the<sp/>value<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS()\</highlight></codeline>
<codeline lineno="1074"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS(p0)\</highlight></codeline>
<codeline lineno="1076"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0)<sp/>:<sp/>p0(gmock_p0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS(p0,<sp/>p1)\</highlight></codeline>
<codeline lineno="1078"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2)\</highlight></codeline>
<codeline lineno="1080"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1081"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3)\</highlight></codeline>
<codeline lineno="1083"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1084"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1085"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4)\</highlight></codeline>
<codeline lineno="1087"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1088"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="1089"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5)\</highlight></codeline>
<codeline lineno="1091"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1092"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1093"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1094"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6)\</highlight></codeline>
<codeline lineno="1096"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1097"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1098"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1099"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7)\</highlight></codeline>
<codeline lineno="1101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="1104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>\</highlight></codeline>
<codeline lineno="1105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7(gmock_p7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8)\</highlight></codeline>
<codeline lineno="1108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>\</highlight></codeline>
<codeline lineno="1111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>gmock_p8)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7),<sp/>\</highlight></codeline>
<codeline lineno="1113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8(gmock_p8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8,<sp/>p9)\</highlight></codeline>
<codeline lineno="1116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>p8##_type<sp/>gmock_p8,<sp/>\</highlight></codeline>
<codeline lineno="1119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type<sp/>gmock_p9)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7),<sp/>\</highlight></codeline>
<codeline lineno="1121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8(gmock_p8),<sp/>p9(gmock_p9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declares<sp/>the<sp/>fields<sp/>for<sp/>storing<sp/>the<sp/>value<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS(p0)<sp/>p0##_type<sp/>p0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS(p0,<sp/>p1)<sp/>p0##_type<sp/>p0;<sp/>\</highlight></codeline>
<codeline lineno="1127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2)<sp/>p0##_type<sp/>p0;<sp/>\</highlight></codeline>
<codeline lineno="1129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3)<sp/>p0##_type<sp/>p0;<sp/>\</highlight></codeline>
<codeline lineno="1131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;<sp/>p3##_type<sp/>p3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="1133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4)<sp/>p0##_type<sp/>p0;<sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;<sp/>p3##_type<sp/>p3;<sp/>p4##_type<sp/>p4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>\</highlight></codeline>
<codeline lineno="1135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5)<sp/>p0##_type<sp/>p0;<sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;<sp/>p3##_type<sp/>p3;<sp/>p4##_type<sp/>p4;<sp/>\</highlight></codeline>
<codeline lineno="1136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6)<sp/>p0##_type<sp/>p0;<sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;<sp/>p3##_type<sp/>p3;<sp/>p4##_type<sp/>p4;<sp/>\</highlight></codeline>
<codeline lineno="1139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;<sp/>p6##_type<sp/>p6;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7)<sp/>p0##_type<sp/>p0;<sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;<sp/>p3##_type<sp/>p3;<sp/>p4##_type<sp/>p4;<sp/>\</highlight></codeline>
<codeline lineno="1142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;<sp/>p6##_type<sp/>p6;<sp/>p7##_type<sp/>p7;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8)<sp/>p0##_type<sp/>p0;<sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;<sp/>p3##_type<sp/>p3;<sp/>\</highlight></codeline>
<codeline lineno="1145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;<sp/>p5##_type<sp/>p5;<sp/>p6##_type<sp/>p6;<sp/>p7##_type<sp/>p7;<sp/>p8##_type<sp/>p8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8,<sp/>p9)<sp/>p0##_type<sp/>p0;<sp/>p1##_type<sp/>p1;<sp/>p2##_type<sp/>p2;<sp/>p3##_type<sp/>p3;<sp/>\</highlight></codeline>
<codeline lineno="1148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;<sp/>p5##_type<sp/>p5;<sp/>p6##_type<sp/>p6;<sp/>p7##_type<sp/>p7;<sp/>p8##_type<sp/>p8;<sp/>\</highlight></codeline>
<codeline lineno="1149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p9##_type<sp/>p9;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>the<sp/>value<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS(p0)<sp/>p0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS(p0,<sp/>p1)<sp/>p0,<sp/>p1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2)<sp/>p0,<sp/>p1,<sp/>p2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3)<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4)<sp/>p0,<sp/>p1,<sp/>\</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2,<sp/>p3,<sp/>p4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5)<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6)<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7)<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8)<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8,<sp/>p9)<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>the<sp/>value<sp/>parameter<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS(p0)<sp/>,<sp/>p0##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS(p0,<sp/>p1)<sp/>,<sp/>p0##_type,<sp/>\</highlight></codeline>
<codeline lineno="1174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2)<sp/>,<sp/>p0##_type,<sp/>\</highlight></codeline>
<codeline lineno="1176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type,<sp/>p2##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5)<sp/>,<sp/>\</highlight></codeline>
<codeline lineno="1182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>p5##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6)<sp/>,<sp/>p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6,<sp/>p7)<sp/>,<sp/>p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6,<sp/>p7,<sp/>p8)<sp/>,<sp/>p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9)<sp/>,<sp/>p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>p9##_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declares<sp/>the<sp/>value<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS(p0)<sp/>p0##_type<sp/>p0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS(p0,<sp/>p1)<sp/>p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2)<sp/>p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3)<sp/>p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="1206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4)<sp/>p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>\</highlight></codeline>
<codeline lineno="1208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5)<sp/>p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>\</highlight></codeline>
<codeline lineno="1209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6)<sp/>p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>\</highlight></codeline>
<codeline lineno="1212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7)<sp/>p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>\</highlight></codeline>
<codeline lineno="1215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8)<sp/>p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7,<sp/>p8##_type<sp/>p8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8,<sp/>p9)<sp/>p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="1221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7,<sp/>p8##_type<sp/>p8,<sp/>\</highlight></codeline>
<codeline lineno="1222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p9##_type<sp/>p9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>suffix<sp/>of<sp/>the<sp/>class<sp/>template<sp/>implementing<sp/>the<sp/>action<sp/>template.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS(p0)<sp/>P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS(p0,<sp/>p1)<sp/>P2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2)<sp/>P3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3)<sp/>P4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4)<sp/>P5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5)<sp/>P6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6)<sp/>P7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7)<sp/>P8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8)<sp/>P9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>\</highlight></codeline>
<codeline lineno="1238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7,<sp/>p8,<sp/>p9)<sp/>P10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>name<sp/>of<sp/>the<sp/>class<sp/>template<sp/>implementing<sp/>the<sp/>action<sp/>template.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_ACTION_CLASS_(name,<sp/>value_params)\</highlight></codeline>
<codeline lineno="1242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_CONCAT_TOKEN_(name##Action,<sp/>GMOCK_INTERNAL_COUNT_##value_params)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_TEMPLATE(name,<sp/>template_params,<sp/>value_params)\</highlight></codeline>
<codeline lineno="1245"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;GMOCK_INTERNAL_DECL_##template_params\</highlight></codeline>
<codeline lineno="1246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_DECL_TYPE_##value_params&gt;\</highlight></codeline>
<codeline lineno="1247"><highlight class="preprocessor"><sp/><sp/>class<sp/>GMOCK_ACTION_CLASS_(name,<sp/>value_params)<sp/>{\</highlight></codeline>
<codeline lineno="1248"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>explicit<sp/>GMOCK_ACTION_CLASS_(name,<sp/>value_params)\</highlight></codeline>
<codeline lineno="1250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_INIT_##value_params<sp/>{}\</highlight></codeline>
<codeline lineno="1251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>explicit<sp/>gmock_Impl<sp/>GMOCK_INTERNAL_INIT_##value_params<sp/>{}\</highlight></codeline>
<codeline lineno="1259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_DEFN_##value_params\</highlight></codeline>
<codeline lineno="1272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(\</highlight></codeline>
<codeline lineno="1277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>gmock_Impl&lt;F&gt;(GMOCK_INTERNAL_LIST_##value_params));\</highlight></codeline>
<codeline lineno="1278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_DEFN_##value_params\</highlight></codeline>
<codeline lineno="1280"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(GMOCK_ACTION_CLASS_(name,<sp/>value_params));\</highlight></codeline>
<codeline lineno="1282"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1283"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;GMOCK_INTERNAL_DECL_##template_params\</highlight></codeline>
<codeline lineno="1284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_DECL_TYPE_##value_params&gt;\</highlight></codeline>
<codeline lineno="1285"><highlight class="preprocessor"><sp/><sp/>inline<sp/>GMOCK_ACTION_CLASS_(name,<sp/>value_params)&lt;\</highlight></codeline>
<codeline lineno="1286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_LIST_##template_params\</highlight></codeline>
<codeline lineno="1287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_LIST_TYPE_##value_params&gt;<sp/>name(\</highlight></codeline>
<codeline lineno="1288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_DECL_##value_params)<sp/>{\</highlight></codeline>
<codeline lineno="1289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_ACTION_CLASS_(name,<sp/>value_params)&lt;\</highlight></codeline>
<codeline lineno="1290"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_LIST_##template_params\</highlight></codeline>
<codeline lineno="1291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_LIST_TYPE_##value_params&gt;(\</highlight></codeline>
<codeline lineno="1292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_LIST_##value_params);\</highlight></codeline>
<codeline lineno="1293"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1294"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;GMOCK_INTERNAL_DECL_##template_params\</highlight></codeline>
<codeline lineno="1295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_DECL_TYPE_##value_params&gt;\</highlight></codeline>
<codeline lineno="1296"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1297"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1301"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_CLASS_(name,<sp/>value_params)&lt;\</highlight></codeline>
<codeline lineno="1303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_LIST_##template_params\</highlight></codeline>
<codeline lineno="1304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_LIST_TYPE_##value_params&gt;::gmock_Impl&lt;F&gt;::\</highlight></codeline>
<codeline lineno="1305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION(name)\</highlight></codeline>
<codeline lineno="1309"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##Action<sp/>{\</highlight></codeline>
<codeline lineno="1310"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##Action()<sp/>{}\</highlight></codeline>
<codeline lineno="1312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl()<sp/>{}\</highlight></codeline>
<codeline lineno="1320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;());\</highlight></codeline>
<codeline lineno="1337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1338"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##Action);\</highlight></codeline>
<codeline lineno="1340"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1341"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##Action<sp/>name()<sp/>{\</highlight></codeline>
<codeline lineno="1342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##Action();\</highlight></codeline>
<codeline lineno="1343"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1344"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1345"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1349"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##Action::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P(name,<sp/>p0)\</highlight></codeline>
<codeline lineno="1354"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type&gt;\</highlight></codeline>
<codeline lineno="1355"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP<sp/>{\</highlight></codeline>
<codeline lineno="1356"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>explicit<sp/>name##ActionP(p0##_type<sp/>gmock_p0)<sp/>:<sp/>p0(gmock_p0)<sp/>{}\</highlight></codeline>
<codeline lineno="1358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>explicit<sp/>gmock_Impl(p0##_type<sp/>gmock_p0)<sp/>:<sp/>p0(gmock_p0)<sp/>{}\</highlight></codeline>
<codeline lineno="1366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1376"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0));\</highlight></codeline>
<codeline lineno="1384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1386"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP);\</highlight></codeline>
<codeline lineno="1388"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1389"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type&gt;\</highlight></codeline>
<codeline lineno="1390"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP&lt;p0##_type&gt;<sp/>name(p0##_type<sp/>p0)<sp/>{\</highlight></codeline>
<codeline lineno="1391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP&lt;p0##_type&gt;(p0);\</highlight></codeline>
<codeline lineno="1392"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1393"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type&gt;\</highlight></codeline>
<codeline lineno="1394"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1395"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1399"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP&lt;p0##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P2(name,<sp/>p0,<sp/>p1)\</highlight></codeline>
<codeline lineno="1404"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type&gt;\</highlight></codeline>
<codeline lineno="1405"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP2<sp/>{\</highlight></codeline>
<codeline lineno="1406"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP2(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1)<sp/>:<sp/>p0(gmock_p0),<sp/>\</highlight></codeline>
<codeline lineno="1408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1(gmock_p1)<sp/>{}\</highlight></codeline>
<codeline lineno="1409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1416"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1)<sp/>:<sp/>p0(gmock_p0),<sp/>\</highlight></codeline>
<codeline lineno="1417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1(gmock_p1)<sp/>{}\</highlight></codeline>
<codeline lineno="1418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1427"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1));\</highlight></codeline>
<codeline lineno="1437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1440"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP2);\</highlight></codeline>
<codeline lineno="1442"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1443"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type&gt;\</highlight></codeline>
<codeline lineno="1444"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP2&lt;p0##_type,<sp/>p1##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1)<sp/>{\</highlight></codeline>
<codeline lineno="1446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP2&lt;p0##_type,<sp/>p1##_type&gt;(p0,<sp/>p1);\</highlight></codeline>
<codeline lineno="1447"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1448"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type&gt;\</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1450"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1454"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP2&lt;p0##_type,<sp/>p1##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P3(name,<sp/>p0,<sp/>p1,<sp/>p2)\</highlight></codeline>
<codeline lineno="1459"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type&gt;\</highlight></codeline>
<codeline lineno="1460"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP3<sp/>{\</highlight></codeline>
<codeline lineno="1461"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP3(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1463"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2)<sp/>{}\</highlight></codeline>
<codeline lineno="1464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2)<sp/>{}\</highlight></codeline>
<codeline lineno="1473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1485"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2));\</highlight></codeline>
<codeline lineno="1493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1496"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1497"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP3);\</highlight></codeline>
<codeline lineno="1499"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1500"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type&gt;\</highlight></codeline>
<codeline lineno="1501"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP3&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2)<sp/>{\</highlight></codeline>
<codeline lineno="1503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP3&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type&gt;(p0,<sp/>p1,<sp/>p2);\</highlight></codeline>
<codeline lineno="1504"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1505"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type&gt;\</highlight></codeline>
<codeline lineno="1506"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1507"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1511"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP3&lt;p0##_type,<sp/>p1##_type,<sp/>\</highlight></codeline>
<codeline lineno="1513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P4(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3)\</highlight></codeline>
<codeline lineno="1517"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type&gt;\</highlight></codeline>
<codeline lineno="1519"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP4<sp/>{\</highlight></codeline>
<codeline lineno="1520"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1521"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP4(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="1523"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3)<sp/>{}\</highlight></codeline>
<codeline lineno="1524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1525"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1526"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1528"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3)<sp/>{}\</highlight></codeline>
<codeline lineno="1534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1535"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1536"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1537"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3));\</highlight></codeline>
<codeline lineno="1555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1560"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP4);\</highlight></codeline>
<codeline lineno="1562"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1563"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type&gt;\</highlight></codeline>
<codeline lineno="1565"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP4&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>\</highlight></codeline>
<codeline lineno="1567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3)<sp/>{\</highlight></codeline>
<codeline lineno="1568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP4&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type&gt;(p0,<sp/>p1,<sp/>\</highlight></codeline>
<codeline lineno="1569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2,<sp/>p3);\</highlight></codeline>
<codeline lineno="1570"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1571"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type&gt;\</highlight></codeline>
<codeline lineno="1573"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1574"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1578"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1579"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP4&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P5(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4)\</highlight></codeline>
<codeline lineno="1584"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1585"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type&gt;\</highlight></codeline>
<codeline lineno="1586"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP5<sp/>{\</highlight></codeline>
<codeline lineno="1587"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1588"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP5(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1589"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>\</highlight></codeline>
<codeline lineno="1590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>gmock_p4)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4)<sp/>{}\</highlight></codeline>
<codeline lineno="1592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4)<sp/>:<sp/>p0(gmock_p0),<sp/>\</highlight></codeline>
<codeline lineno="1601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4)<sp/>{}\</highlight></codeline>
<codeline lineno="1602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1604"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1606"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1607"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1608"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1609"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1611"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1612"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1613"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1616"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1617"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1618"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1619"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1621"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4));\</highlight></codeline>
<codeline lineno="1624"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1625"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1629"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1630"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP5);\</highlight></codeline>
<codeline lineno="1632"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1633"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1634"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type&gt;\</highlight></codeline>
<codeline lineno="1635"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP5&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1636"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="1637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4)<sp/>{\</highlight></codeline>
<codeline lineno="1638"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP5&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1639"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4);\</highlight></codeline>
<codeline lineno="1640"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1641"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type&gt;\</highlight></codeline>
<codeline lineno="1643"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1644"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1645"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1646"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1648"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP5&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P6(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5)\</highlight></codeline>
<codeline lineno="1654"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1655"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type&gt;\</highlight></codeline>
<codeline lineno="1656"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP6<sp/>{\</highlight></codeline>
<codeline lineno="1657"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP6(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5)<sp/>{}\</highlight></codeline>
<codeline lineno="1662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1669"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1672"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5)<sp/>{}\</highlight></codeline>
<codeline lineno="1673"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1674"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1675"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1676"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1677"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1678"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1679"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1680"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1681"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1682"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1690"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1692"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1693"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1694"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1695"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5));\</highlight></codeline>
<codeline lineno="1696"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1698"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1699"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1700"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1701"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1702"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1703"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1704"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP6);\</highlight></codeline>
<codeline lineno="1705"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1706"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1707"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type&gt;\</highlight></codeline>
<codeline lineno="1708"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP6&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1709"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>\</highlight></codeline>
<codeline lineno="1710"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5)<sp/>{\</highlight></codeline>
<codeline lineno="1711"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP6&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5);\</highlight></codeline>
<codeline lineno="1713"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1714"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1715"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type&gt;\</highlight></codeline>
<codeline lineno="1716"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1717"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1719"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1720"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1721"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1722"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP6&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1723"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1724"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P7(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6)\</highlight></codeline>
<codeline lineno="1727"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1729"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type&gt;\</highlight></codeline>
<codeline lineno="1730"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP7<sp/>{\</highlight></codeline>
<codeline lineno="1731"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1732"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP7(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1733"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1734"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="1735"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>\</highlight></codeline>
<codeline lineno="1736"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6(gmock_p6)<sp/>{}\</highlight></codeline>
<codeline lineno="1737"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1738"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1739"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1740"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1741"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1742"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1743"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1744"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1745"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1746"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1747"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6)<sp/>{}\</highlight></codeline>
<codeline lineno="1748"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1749"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1750"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1752"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1753"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1755"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1756"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1757"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1758"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1759"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1760"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1761"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1766"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1767"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1769"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1771"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1772"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6));\</highlight></codeline>
<codeline lineno="1773"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1774"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1780"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1781"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1782"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP7);\</highlight></codeline>
<codeline lineno="1783"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1784"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type&gt;\</highlight></codeline>
<codeline lineno="1787"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP7&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1788"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>\</highlight></codeline>
<codeline lineno="1789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6)<sp/>{\</highlight></codeline>
<codeline lineno="1791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP7&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6);\</highlight></codeline>
<codeline lineno="1793"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1794"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1796"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type&gt;\</highlight></codeline>
<codeline lineno="1797"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1798"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1799"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1800"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1801"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1802"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1803"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP7&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1804"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1805"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P8(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7)\</highlight></codeline>
<codeline lineno="1808"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1809"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1810"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type&gt;\</highlight></codeline>
<codeline lineno="1811"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP8<sp/>{\</highlight></codeline>
<codeline lineno="1812"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1813"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP8(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1814"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1815"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6,<sp/>\</highlight></codeline>
<codeline lineno="1816"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>gmock_p7)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1817"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>\</highlight></codeline>
<codeline lineno="1818"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7(gmock_p7)<sp/>{}\</highlight></codeline>
<codeline lineno="1819"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1820"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1821"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1822"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1823"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1824"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1825"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1826"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1827"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1828"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7)<sp/>:<sp/>p0(gmock_p0),<sp/>\</highlight></codeline>
<codeline lineno="1829"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>\</highlight></codeline>
<codeline lineno="1830"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7)<sp/>{}\</highlight></codeline>
<codeline lineno="1831"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1832"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1833"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1834"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1835"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1836"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1837"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1838"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1839"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1840"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1841"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1842"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1843"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1844"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1845"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1846"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1847"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1848"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1849"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1850"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="1851"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1852"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1853"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1854"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1855"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1856"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6,<sp/>p7));\</highlight></codeline>
<codeline lineno="1857"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1858"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1859"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1860"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1861"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1862"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1863"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1864"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1865"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="1866"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1867"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP8);\</highlight></codeline>
<codeline lineno="1868"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1869"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1870"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1871"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type&gt;\</highlight></codeline>
<codeline lineno="1872"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP8&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1873"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>\</highlight></codeline>
<codeline lineno="1874"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1875"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7)<sp/>{\</highlight></codeline>
<codeline lineno="1876"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP8&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1877"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1878"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6,<sp/>p7);\</highlight></codeline>
<codeline lineno="1879"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1880"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1881"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1882"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type&gt;\</highlight></codeline>
<codeline lineno="1883"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1884"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1885"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1886"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1887"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1888"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1889"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP8&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1890"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>\</highlight></codeline>
<codeline lineno="1891"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1892"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P9(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8)\</highlight></codeline>
<codeline lineno="1895"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1896"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1897"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type&gt;\</highlight></codeline>
<codeline lineno="1898"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP9<sp/>{\</highlight></codeline>
<codeline lineno="1899"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1900"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP9(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1901"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1902"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>\</highlight></codeline>
<codeline lineno="1903"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>gmock_p8)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1904"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>p7(gmock_p7),<sp/>\</highlight></codeline>
<codeline lineno="1905"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8(gmock_p8)<sp/>{}\</highlight></codeline>
<codeline lineno="1906"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1907"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="1908"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1909"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="1910"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="1911"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="1912"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="1913"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="1914"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="1915"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>\</highlight></codeline>
<codeline lineno="1916"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>gmock_p8)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="1917"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>\</highlight></codeline>
<codeline lineno="1918"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7(gmock_p7),<sp/>p8(gmock_p8)<sp/>{}\</highlight></codeline>
<codeline lineno="1919"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="1920"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="1921"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="1922"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1923"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1925"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1926"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1927"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="1928"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="1929"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="1930"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="1931"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1932"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1933"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1934"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1935"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1936"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1937"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1938"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="1939"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="1940"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1941"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="1942"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1943"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="1944"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="1945"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6,<sp/>p7,<sp/>p8));\</highlight></codeline>
<codeline lineno="1946"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1947"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="1948"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="1949"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="1950"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="1951"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="1952"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="1953"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="1954"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="1955"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="1956"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="1957"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP9);\</highlight></codeline>
<codeline lineno="1958"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="1959"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1960"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1961"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type&gt;\</highlight></codeline>
<codeline lineno="1962"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP9&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1963"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>\</highlight></codeline>
<codeline lineno="1964"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="1965"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7,<sp/>\</highlight></codeline>
<codeline lineno="1966"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>p8)<sp/>{\</highlight></codeline>
<codeline lineno="1967"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP9&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="1968"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type&gt;(p0,<sp/>p1,<sp/>p2,<sp/>\</highlight></codeline>
<codeline lineno="1969"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8);\</highlight></codeline>
<codeline lineno="1970"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1971"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1972"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1973"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type&gt;\</highlight></codeline>
<codeline lineno="1974"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1975"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="1976"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="1977"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="1978"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="1979"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="1980"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP9&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="1981"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>\</highlight></codeline>
<codeline lineno="1982"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="1983"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTION_P10(name,<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9)\</highlight></codeline>
<codeline lineno="1986"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="1987"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="1988"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="1989"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p9##_type&gt;\</highlight></codeline>
<codeline lineno="1990"><highlight class="preprocessor"><sp/><sp/>class<sp/>name##ActionP10<sp/>{\</highlight></codeline>
<codeline lineno="1991"><highlight class="preprocessor"><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="1992"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##ActionP10(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>\</highlight></codeline>
<codeline lineno="1993"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>gmock_p2,<sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>\</highlight></codeline>
<codeline lineno="1994"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>gmock_p5,<sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>\</highlight></codeline>
<codeline lineno="1995"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>gmock_p8,<sp/>p9##_type<sp/>gmock_p9)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>\</highlight></codeline>
<codeline lineno="1996"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2(gmock_p2),<sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>\</highlight></codeline>
<codeline lineno="1997"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7(gmock_p7),<sp/>p8(gmock_p8),<sp/>p9(gmock_p9)<sp/>{}\</highlight></codeline>
<codeline lineno="1998"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="1999"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>gmock_Impl<sp/>:<sp/>public<sp/>::testing::ActionInterface&lt;F&gt;<sp/>{\</highlight></codeline>
<codeline lineno="2000"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="2001"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>F<sp/>function_type;\</highlight></codeline>
<codeline lineno="2002"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result<sp/>return_type;\</highlight></codeline>
<codeline lineno="2003"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::ArgumentTuple\</highlight></codeline>
<codeline lineno="2004"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_type;\</highlight></codeline>
<codeline lineno="2005"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_Impl(p0##_type<sp/>gmock_p0,<sp/>p1##_type<sp/>gmock_p1,<sp/>p2##_type<sp/>gmock_p2,<sp/>\</highlight></codeline>
<codeline lineno="2006"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>gmock_p3,<sp/>p4##_type<sp/>gmock_p4,<sp/>p5##_type<sp/>gmock_p5,<sp/>\</highlight></codeline>
<codeline lineno="2007"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>gmock_p6,<sp/>p7##_type<sp/>gmock_p7,<sp/>p8##_type<sp/>gmock_p8,<sp/>\</highlight></codeline>
<codeline lineno="2008"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type<sp/>gmock_p9)<sp/>:<sp/>p0(gmock_p0),<sp/>p1(gmock_p1),<sp/>p2(gmock_p2),<sp/>\</highlight></codeline>
<codeline lineno="2009"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3(gmock_p3),<sp/>p4(gmock_p4),<sp/>p5(gmock_p5),<sp/>p6(gmock_p6),<sp/>\</highlight></codeline>
<codeline lineno="2010"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p7(gmock_p7),<sp/>p8(gmock_p8),<sp/>p9(gmock_p9)<sp/>{}\</highlight></codeline>
<codeline lineno="2011"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>return_type<sp/>Perform(const<sp/>args_type&amp;<sp/>args)<sp/>{\</highlight></codeline>
<codeline lineno="2012"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ActionHelper&lt;return_type,<sp/>gmock_Impl&gt;::\</highlight></codeline>
<codeline lineno="2013"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform(this,<sp/>args);\</highlight></codeline>
<codeline lineno="2014"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2015"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="2016"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="2017"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="2018"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="2019"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return_type<sp/>gmock_PerformImpl(const<sp/>args_type&amp;<sp/>args,<sp/>arg0_type<sp/>arg0,<sp/>\</highlight></codeline>
<codeline lineno="2020"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg1_type<sp/>arg1,<sp/>arg2_type<sp/>arg2,<sp/>arg3_type<sp/>arg3,<sp/>arg4_type<sp/>arg4,<sp/>\</highlight></codeline>
<codeline lineno="2021"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg5_type<sp/>arg5,<sp/>arg6_type<sp/>arg6,<sp/>arg7_type<sp/>arg7,<sp/>arg8_type<sp/>arg8,<sp/>\</highlight></codeline>
<codeline lineno="2022"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg9_type<sp/>arg9)<sp/>const;\</highlight></codeline>
<codeline lineno="2023"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="2024"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="2025"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="2026"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="2027"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="2028"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="2029"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="2030"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="2031"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="2032"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type<sp/>p9;\</highlight></codeline>
<codeline lineno="2033"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="2034"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(gmock_Impl);\</highlight></codeline>
<codeline lineno="2035"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="2036"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;<sp/>operator<sp/>::testing::Action&lt;F&gt;()<sp/>const<sp/>{\</highlight></codeline>
<codeline lineno="2037"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::testing::Action&lt;F&gt;(new<sp/>gmock_Impl&lt;F&gt;(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>\</highlight></codeline>
<codeline lineno="2038"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9));\</highlight></codeline>
<codeline lineno="2039"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2040"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p0##_type<sp/>p0;\</highlight></codeline>
<codeline lineno="2041"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p1##_type<sp/>p1;\</highlight></codeline>
<codeline lineno="2042"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p2##_type<sp/>p2;\</highlight></codeline>
<codeline lineno="2043"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p3##_type<sp/>p3;\</highlight></codeline>
<codeline lineno="2044"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p4##_type<sp/>p4;\</highlight></codeline>
<codeline lineno="2045"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p5##_type<sp/>p5;\</highlight></codeline>
<codeline lineno="2046"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p6##_type<sp/>p6;\</highlight></codeline>
<codeline lineno="2047"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p7##_type<sp/>p7;\</highlight></codeline>
<codeline lineno="2048"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p8##_type<sp/>p8;\</highlight></codeline>
<codeline lineno="2049"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>p9##_type<sp/>p9;\</highlight></codeline>
<codeline lineno="2050"><highlight class="preprocessor"><sp/><sp/><sp/>private:\</highlight></codeline>
<codeline lineno="2051"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DISALLOW_ASSIGN_(name##ActionP10);\</highlight></codeline>
<codeline lineno="2052"><highlight class="preprocessor"><sp/><sp/>};\</highlight></codeline>
<codeline lineno="2053"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="2054"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="2055"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2056"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p9##_type&gt;\</highlight></codeline>
<codeline lineno="2057"><highlight class="preprocessor"><sp/><sp/>inline<sp/>name##ActionP10&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2058"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2059"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type&gt;<sp/>name(p0##_type<sp/>p0,<sp/>p1##_type<sp/>p1,<sp/>p2##_type<sp/>p2,<sp/>p3##_type<sp/>p3,<sp/>\</highlight></codeline>
<codeline lineno="2060"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type<sp/>p4,<sp/>p5##_type<sp/>p5,<sp/>p6##_type<sp/>p6,<sp/>p7##_type<sp/>p7,<sp/>p8##_type<sp/>p8,<sp/>\</highlight></codeline>
<codeline lineno="2061"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type<sp/>p9)<sp/>{\</highlight></codeline>
<codeline lineno="2062"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>name##ActionP10&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>\</highlight></codeline>
<codeline lineno="2063"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4##_type,<sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>p9##_type&gt;(p0,<sp/>\</highlight></codeline>
<codeline lineno="2064"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9);\</highlight></codeline>
<codeline lineno="2065"><highlight class="preprocessor"><sp/><sp/>}\</highlight></codeline>
<codeline lineno="2066"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>p0##_type,<sp/>typename<sp/>p1##_type,<sp/>typename<sp/>p2##_type,<sp/>\</highlight></codeline>
<codeline lineno="2067"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p3##_type,<sp/>typename<sp/>p4##_type,<sp/>typename<sp/>p5##_type,<sp/>\</highlight></codeline>
<codeline lineno="2068"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p6##_type,<sp/>typename<sp/>p7##_type,<sp/>typename<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2069"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>p9##_type&gt;\</highlight></codeline>
<codeline lineno="2070"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>F&gt;\</highlight></codeline>
<codeline lineno="2071"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>arg0_type,<sp/>typename<sp/>arg1_type,<sp/>typename<sp/>arg2_type,<sp/>\</highlight></codeline>
<codeline lineno="2072"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg3_type,<sp/>typename<sp/>arg4_type,<sp/>typename<sp/>arg5_type,<sp/>\</highlight></codeline>
<codeline lineno="2073"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg6_type,<sp/>typename<sp/>arg7_type,<sp/>typename<sp/>arg8_type,<sp/>\</highlight></codeline>
<codeline lineno="2074"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>arg9_type&gt;\</highlight></codeline>
<codeline lineno="2075"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;F&gt;::Result\</highlight></codeline>
<codeline lineno="2076"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>name##ActionP10&lt;p0##_type,<sp/>p1##_type,<sp/>p2##_type,<sp/>p3##_type,<sp/>p4##_type,<sp/>\</highlight></codeline>
<codeline lineno="2077"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p5##_type,<sp/>p6##_type,<sp/>p7##_type,<sp/>p8##_type,<sp/>\</highlight></codeline>
<codeline lineno="2078"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p9##_type&gt;::gmock_Impl&lt;F&gt;::gmock_PerformImpl(\</highlight></codeline>
<codeline lineno="2079"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ACTION*()<sp/>macros<sp/>trigger<sp/>warning<sp/>C4100<sp/>(unreferenced<sp/>formal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameter)<sp/>in<sp/>MSVC<sp/>with<sp/>-W4.<sp/><sp/>Unfortunately<sp/>they<sp/>cannot<sp/>be<sp/>fixed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>macro<sp/>definition,<sp/>as<sp/>the<sp/>warnings<sp/>are<sp/>generated<sp/>when<sp/>the<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>expanded<sp/>and<sp/>macro<sp/>expansion<sp/>cannot<sp/>contain<sp/>#pragma.<sp/><sp/>Therefore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>suppress<sp/>them<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>pragma<sp/>warning(disable:4100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Various<sp/>overloads<sp/>for<sp/>InvokeArgument&lt;N&gt;().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>InvokeArgument&lt;N&gt;(a1,<sp/>a2,<sp/>...,<sp/>a_k)<sp/>action<sp/>invokes<sp/>the<sp/>N-th</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(0-based)<sp/>argument,<sp/>which<sp/>must<sp/>be<sp/>a<sp/>k-ary<sp/>callable,<sp/>of<sp/>the<sp/>mock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function,<sp/>with<sp/>arguments<sp/>a1,<sp/>a2,<sp/>...,<sp/>a_k.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Notes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.<sp/>The<sp/>arguments<sp/>are<sp/>passed<sp/>by<sp/>value<sp/>by<sp/>default.<sp/><sp/>If<sp/>you<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>pass<sp/>an<sp/>argument<sp/>by<sp/>reference,<sp/>wrap<sp/>it<sp/>inside<sp/>ByRef().<sp/><sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>InvokeArgument&lt;1&gt;(5,<sp/>string(&quot;Hello&quot;),<sp/>ByRef(foo))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>passes<sp/>5<sp/>and<sp/>string(&quot;Hello&quot;)<sp/>by<sp/>value,<sp/>and<sp/>passes<sp/>foo<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>2.<sp/>If<sp/>the<sp/>callable<sp/>takes<sp/>an<sp/>argument<sp/>by<sp/>reference<sp/>but<sp/>ByRef()<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>not<sp/>used,<sp/>it<sp/>will<sp/>receive<sp/>the<sp/>reference<sp/>to<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>instead<sp/>of<sp/>the<sp/>original<sp/>value.<sp/><sp/>For<sp/>example,<sp/>when<sp/>the<sp/>0-th</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>argument<sp/>of<sp/>the<sp/>mock<sp/>function<sp/>takes<sp/>a<sp/>const<sp/>string&amp;,<sp/>the<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>InvokeArgument&lt;0&gt;(string(&quot;Hello&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>makes<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>temporary<sp/>string(&quot;Hello&quot;)<sp/>object<sp/>and<sp/>passes<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>reference<sp/>of<sp/>the<sp/>copy,<sp/>instead<sp/>of<sp/>the<sp/>original<sp/>temporary<sp/>object,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>the<sp/>callable.<sp/><sp/>This<sp/>makes<sp/>it<sp/>easy<sp/>for<sp/>a<sp/>user<sp/>to<sp/>define<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>InvokeArgument<sp/>action<sp/>from<sp/>temporary<sp/>values<sp/>and<sp/>have<sp/>it<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">invoke_argument<sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Appears<sp/>in<sp/>InvokeArgumentAdl&apos;s<sp/>argument<sp/>list<sp/>to<sp/>help<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>accidental<sp/>calls<sp/>to<sp/>user<sp/>functions<sp/>of<sp/>the<sp/>same<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129" refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref><sp/>{};</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>InvokeArgumentAdl<sp/>-<sp/>a<sp/>helper<sp/>for<sp/>InvokeArgument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>basic<sp/>overloads<sp/>are<sp/>provided<sp/>here<sp/>for<sp/>generic<sp/>functors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Overloads<sp/>for<sp/>other<sp/>custom-callables<sp/>are<sp/>provided<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal/custom/callback-actions.h<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f();</highlight></codeline>
<codeline lineno="2139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1)<sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2)<sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3)<sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4)<sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3,<sp/>a4);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5)<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6)<sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>A7<sp/>a7)<sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>A7<sp/>a7,<sp/>A8<sp/>a8)<sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>A7<sp/>a7,<sp/>A8<sp/>a8,<sp/>A9<sp/>a9)<sp/>{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal">R<sp/>InvokeArgumentAdl(<ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">AdlTag</ref>,<sp/>F<sp/>f,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/>A7<sp/>a7,<sp/>A8<sp/>a8,<sp/>A9<sp/>a9,<sp/>A10<sp/>a10)<sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9,<sp/>a10);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>invoke_argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_0_VALUE_PARAMS())<sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args));</highlight></codeline>
<codeline lineno="2203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_1_VALUE_PARAMS(p0))<sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_2_VALUE_PARAMS(p0,<sp/>p1))<sp/>{</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2))<sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3))<sp/>{</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4))<sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5))<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6))<sp/>{</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7))<sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8))<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal">ACTION_TEMPLATE(InvokeArgument,</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>k),</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9))<sp/>{</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>internal::invoke_argument::InvokeArgumentAdl;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeArgumentAdl&lt;return_type&gt;(</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1invoke__argument_1_1_adl_tag" kindref="compound">internal::invoke_argument::AdlTag</ref>(),</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::get&lt;k&gt;(args),<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Various<sp/>overloads<sp/>for<sp/>ReturnNew&lt;T&gt;().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ReturnNew&lt;T&gt;(a1,<sp/>a2,<sp/>...,<sp/>a_k)<sp/>action<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instance<sp/>of<sp/>type<sp/>T,<sp/>constructed<sp/>on<sp/>the<sp/>heap<sp/>with<sp/>constructor<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a1,<sp/>a2,<sp/>...,<sp/>and<sp/>a_k.<sp/>The<sp/>caller<sp/>assumes<sp/>ownership<sp/>of<sp/>the<sp/>returned<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_0_VALUE_PARAMS())<sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T();</highlight></codeline>
<codeline lineno="2304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_1_VALUE_PARAMS(p0))<sp/>{</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_2_VALUE_PARAMS(p0,<sp/>p1))<sp/>{</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_3_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2))<sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_4_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3))<sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2,<sp/>p3);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_5_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4))<sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_6_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5))<sp/>{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_7_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6))<sp/>{</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_8_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7))<sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_9_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8))<sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal">ACTION_TEMPLATE(ReturnNew,</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAS_1_TEMPLATE_PARAMS(</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>T),</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND_10_VALUE_PARAMS(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9))<sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7,<sp/>p8,<sp/>p9);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>any<sp/>custom<sp/>actions<sp/>added<sp/>by<sp/>the<sp/>local<sp/>installation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>include<sp/>this<sp/>header<sp/>at<sp/>the<sp/>end<sp/>to<sp/>make<sp/>sure<sp/>it<sp/>can<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>declarations<sp/>from<sp/>this<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/custom/gmock-generated-actions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_ACTIONS_H_</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h"/>
  </compounddef>
</doxygen>
