<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</compoundname>
    <basecompoundref refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public" virt="non-virtual">testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5)&gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename A1</type>
      </param>
      <param>
        <type>typename A2</type>
      </param>
      <param>
        <type>typename A3</type>
      </param>
      <param>
        <type>typename A4</type>
      </param>
      <param>
        <type>typename A5</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a26144c33c64b0af26a1d0c43806a0370" prot="public" static="no">
        <type>R</type>
        <definition>typedef R testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;::F(A1, A2, A3, A4, A5)</definition>
        <argsstring>(A1, A2, A3, A4, A5)</argsstring>
        <name>F</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="175" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1ac82403b3f3e4e65797bb633ade91a43e" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function</ref>&lt; F &gt;::ArgumentTuple</type>
        <definition>typedef internal::Function&lt;F&gt;::ArgumentTuple testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;::ArgumentTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="176" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a719a0f9a249c92c3b990f5ea380899ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec</ref>&lt; F &gt; &amp;</type>
        <definition>MockSpec&lt;F&gt;&amp; testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;::With</definition>
        <argsstring>(const Matcher&lt; A1 &gt; &amp;m1, const Matcher&lt; A2 &gt; &amp;m2, const Matcher&lt; A3 &gt; &amp;m3, const Matcher&lt; A4 &gt; &amp;m4, const Matcher&lt; A5 &gt; &amp;m5)</argsstring>
        <name>With</name>
        <param>
          <type>const <ref refid="classtesting_1_1_matcher" kindref="compound">Matcher</ref>&lt; A1 &gt; &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_matcher" kindref="compound">Matcher</ref>&lt; A2 &gt; &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_matcher" kindref="compound">Matcher</ref>&lt; A3 &gt; &amp;</type>
          <declname>m3</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_matcher" kindref="compound">Matcher</ref>&lt; A4 &gt; &amp;</type>
          <declname>m4</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_matcher" kindref="compound">Matcher</ref>&lt; A5 &gt; &amp;</type>
          <declname>m5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="178" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a481d6a28daaba552a9d36a9d67e4a3db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;::Invoke</definition>
        <argsstring>(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5)</argsstring>
        <name>Invoke</name>
        <param>
          <type>A1</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>A3</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>A4</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>A5</type>
          <declname>a5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="184" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="184" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="861">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="862">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="863" relation="public-inheritance">
        </childnode>
      </node>
      <node id="863">
        <label>testing::internal::UntypedFunctionMockerBase</label>
        <link refid="classtesting_1_1internal_1_1_untyped_function_mocker_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="864">
        <label>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4"/>
        <childnode refid="865" relation="public-inheritance">
        </childnode>
      </node>
      <node id="865">
        <label>testing::internal::FunctionMockerBase&lt; R(A1, A2, A3, A4, A5)&gt;</label>
        <link refid="classtesting_1_1internal_1_1_function_mocker_base"/>
        <childnode refid="866" relation="public-inheritance">
        </childnode>
      </node>
      <node id="866">
        <label>testing::internal::UntypedFunctionMockerBase</label>
        <link refid="classtesting_1_1internal_1_1_untyped_function_mocker_base"/>
      </node>
    </collaborationgraph>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="173" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="172" bodyend="191"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1aa2c35c565f08d3649436af443ece468f" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>AddNewExpectation</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1a22ece3b6e8d24f11d8f4ba9c17b737c4" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>AddNewOnCallSpec</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1ab790bcb1dcf57fa6659365386723ae5a" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>ArgumentMatcherTuple</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1ac82403b3f3e4e65797bb633ade91a43e" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>ArgumentTuple</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1ada818fcb2b892f21bb939def386599e7" prot="public" virt="virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>ClearDefaultActionsLocked</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1a744318106e20b346f4f1efbf5a601644" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>current_spec</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a26144c33c64b0af26a1d0c43806a0370" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>F</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1a3bcd2e8191ffc44bd59b8d8d25eefd3e" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>FindOnCallSpec</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1a2206d80aad533ba6bf1f5e09c909aee0" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>FunctionMockerBase</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a7705611c4a63df16cddb0674878c403a" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>GetHandleOf</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a481d6a28daaba552a9d36a9d67e4a3db" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Invoke</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1a869ec713f000b4e7829c660efc25e8cd" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>InvokeWith</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1adf35c589969bb985668616031cb9ed56" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>mock_obj_</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a71863dd67193a7082078d5b366d5ce51" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>MockObject</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1ae90a5b5d48db1e99634bc6ff39ded335" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Name</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a2d472077b9a8d3758caaec5770259f70" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>name_</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1adbef6e1af840c9c14c3a6acee01007b2" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>PerformDefaultAction</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a0cd3dd14b92c714eab690c9597f32ffd" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>RegisterOwner</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1aa50abc4055b4d3a14ad64c317bccec8d" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>Result</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1aa4e1b2ee217676c9e70c3006b19a8074" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>ResultHolder</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a287bcacee639b7d123cec29e0614fe96" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>SetOwnerAndName</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aae4a42a4bace1fcb0cd4bdf1ddd40277" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>untyped_expectations_</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aed2a1913f6c03fd47c8900039556be34" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>untyped_on_call_specs_</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a36480bd395e110b4eae5b0d0402de966" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>UntypedExpectations</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1aedfa95e65d80936e4dff040140513b36" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>UntypedFunctionMockerBase</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1adaec41c0ba8a07c2415f6c8efa0ca54f" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>UntypedInvokeWith</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a29cc87ed60ad0218432aa777abba7dbb" prot="protected" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>UntypedOnCallSpecs</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1aebdb11fe4ea9e9f3984cbcd58c6f6cf9" prot="public" virt="virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>UntypedPerformAction</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1aed1c6248ba1b50437ee3a5f72c5f7bf3" prot="public" virt="virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>UntypedPerformDefaultAction</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a3f1d62a1662a3daa2895b3af963be269" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>VerifyAndClearExpectationsLocked</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4_1a719a0f9a249c92c3b990f5ea380899ff" prot="public" virt="non-virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>With</name></member>
      <member refid="classtesting_1_1internal_1_1_function_mocker_base_1a3c33e7b4aa0e28e5bd46eb072f511068" prot="public" virt="virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>~FunctionMockerBase</name></member>
      <member refid="classtesting_1_1internal_1_1_untyped_function_mocker_base_1a6badd47a3fe2a439ef98aa91bf73d721" prot="public" virt="virtual"><scope>testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</scope><name>~UntypedFunctionMockerBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
