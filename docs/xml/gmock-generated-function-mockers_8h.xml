<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmock-generated-function-mockers_8h" kind="file" language="C++">
    <compoundname>gmock-generated-function-mockers.h</compoundname>
    <includes refid="gmock-spec-builders_8h" local="yes">gmock/gmock-spec-builders.h</includes>
    <includes refid="gmock-internal-utils_8h" local="yes">gmock/internal/gmock-internal-utils.h</includes>
    <includedby refid="gmock_8h" local="yes">vendor/googletest/googlemock/include/gmock/gmock.h</includedby>
    <includedby refid="gmock-generated-function-mockers__test_8cc" local="yes">vendor/googletest/googlemock/test/gmock-generated-function-mockers_test.cc</includedby>
    <incdepgraph>
      <node id="441">
        <label>sys/stat.h</label>
      </node>
      <node id="459">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="436" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>iomanip</label>
      </node>
      <node id="452">
        <label>limits</label>
      </node>
      <node id="443">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="432">
        <label>assert.h</label>
      </node>
      <node id="464">
        <label>iterator</label>
      </node>
      <node id="454">
        <label>float.h</label>
      </node>
      <node id="427">
        <label>gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="468">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="433">
        <label>stdlib.h</label>
      </node>
      <node id="457">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
      </node>
      <node id="469">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="425">
        <label>errno.h</label>
      </node>
      <node id="477">
        <label>gmock/internal/custom/gmock-matchers.h</label>
        <link refid="internal_2custom_2gmock-matchers_8h_source"/>
      </node>
      <node id="417">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h</label>
        <link refid="gmock-generated-function-mockers_8h"/>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
      </node>
      <node id="422">
        <label>string</label>
      </node>
      <node id="419">
        <label>map</label>
      </node>
      <node id="450">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="467">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>stddef.h</label>
      </node>
      <node id="472">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="429">
        <label>ostream</label>
      </node>
      <node id="444">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="474">
        <label>limits.h</label>
      </node>
      <node id="460">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="440">
        <label>sys/types.h</label>
      </node>
      <node id="439">
        <label>string.h</label>
      </node>
      <node id="424">
        <label>gmock/gmock-actions.h</label>
        <link refid="gmock-actions_8h_source"/>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="448">
        <label>typeinfo</label>
      </node>
      <node id="431">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="445">
        <label>unistd.h</label>
      </node>
      <node id="423">
        <label>vector</label>
      </node>
      <node id="466">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="456">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
      </node>
      <node id="442">
        <label>utility</label>
      </node>
      <node id="418">
        <label>gmock/gmock-spec-builders.h</label>
        <link refid="gmock-spec-builders_8h_source"/>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="421">
        <label>sstream</label>
      </node>
      <node id="435">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>gmock/gmock-matchers.h</label>
        <link refid="gmock-matchers_8h_source"/>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>math.h</label>
      </node>
      <node id="470">
        <label>iosfwd</label>
      </node>
      <node id="473">
        <label>gmock/gmock-cardinalities.h</label>
        <link refid="gmock-cardinalities_8h_source"/>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="434">
        <label>iostream</label>
      </node>
      <node id="451">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="446">
        <label>strings.h</label>
      </node>
      <node id="437">
        <label>ctype.h</label>
      </node>
      <node id="471">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
      <node id="430">
        <label>gmock/internal/gmock-generated-internal-utils.h</label>
        <link refid="gmock-generated-internal-utils_8h_source"/>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="420">
        <label>set</label>
      </node>
      <node id="462">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>algorithm</label>
      </node>
      <node id="447">
        <label>regex.h</label>
      </node>
      <node id="428">
        <label>stdio.h</label>
      </node>
      <node id="461">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="478">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h</label>
        <link refid="gmock-generated-function-mockers_8h"/>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="479">
        <label>vendor/googletest/googlemock/include/gmock/gmock.h</label>
        <link refid="gmock_8h_source"/>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="480">
        <label>vendor/googletest/googlemock/test/gmock_link_test.h</label>
        <link refid="gmock__link__test_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_base" prot="public">testing::internal::FunctionMockerBase</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker" prot="public">testing::internal::FunctionMocker</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_08_4" prot="public">testing::internal::FunctionMocker&lt; R()&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00d00d8722bf1ad86ca8049508f133d393" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_0038b5baf41d3183579372e0e15a9db969" prot="public">testing::internal::FunctionMocker&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function" prot="public">testing::MockFunction</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_08_4" prot="public">testing::MockFunction&lt; R()&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_08_4" prot="public">testing::MockFunction&lt; R(A0)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_08_4" prot="public">testing::MockFunction&lt; R(A0, A1)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_08_4" prot="public">testing::MockFunction&lt; R(A0, A1, A2)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_08_4" prot="public">testing::MockFunction&lt; R(A0, A1, A2, A3)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_08_4" prot="public">testing::MockFunction&lt; R(A0, A1, A2, A3, A4)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" prot="public">testing::MockFunction&lt; R(A0, A1, A2, A3, A4, A5)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" prot="public">testing::MockFunction&lt; R(A0, A1, A2, A3, A4, A5, A6)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4" prot="public">testing::MockFunction&lt; R(A0, A1, A2, A3, A4, A5, A6, A7)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4" prot="public">testing::MockFunction&lt; R(A0, A1, A2, A3, A4, A5, A6, A7, A8)&gt;</innerclass>
    <innerclass refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a654a9d62da83bde10dfec0368733bb48" prot="public">testing::MockFunction&lt; R(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal">testing::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a0e9d94e9c77df84f1103af06feee1077" prot="public" static="no">
        <name>GMOCK_RESULT_</name>
        <param><defname>tn</defname></param>
        <param><defname>...</defname></param>
        <initializer>tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::Result</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="337" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a887575cc1c31158fba808180a10c004f" prot="public" static="no">
        <name>GMOCK_ARG_</name>
        <param><defname>tn</defname></param>
        <param><defname>N</defname></param>
        <param><defname>...</defname></param>
        <initializer>tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::Argument##N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="342" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aa87d0009fe91f1c89d658776b55a769c" prot="public" static="no">
        <name>GMOCK_MATCHER_</name>
        <param><defname>tn</defname></param>
        <param><defname>N</defname></param>
        <param><defname>...</defname></param>
        <initializer>const ::<ref refid="classtesting_1_1_matcher" kindref="compound">testing::Matcher</ref>&lt;GMOCK_ARG_(tn, N, __VA_ARGS__)&gt;&amp;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="347" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a7d362499e27b1bc3a9806dd3cf58a5b7" prot="public" static="no">
        <name>GMOCK_MOCKER_</name>
        <param><defname>arity</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>Method</defname></param>
        <initializer>GTEST_CONCAT_TOKEN_(gmock##constness##arity##_##Method##_, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="352" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ae0d290ffa58d7c624b2e3487ba1252f4" prot="public" static="no">
        <name>GMOCK_METHOD0_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      ) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 0), \
        this_method_does_not_take_0_arguments); \
    GMOCK_MOCKER_(0, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(0, constness, Method).Invoke(); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method() constness { \
    GMOCK_MOCKER_(0, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(0, constness, Method).With(); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(0, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="356" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a1bc0012d62440dda77208dabdf4925c9" prot="public" static="no">
        <name>GMOCK_METHOD1_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      GMOCK_ARG_(tn, 1, __VA_ARGS__) gmock_a1) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 1), \
        this_method_does_not_take_1_argument); \
    GMOCK_MOCKER_(1, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(1, constness, Method).Invoke(gmock_a1); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method(GMOCK_MATCHER_(tn, 1, __VA_ARGS__) gmock_a1) constness { \
    GMOCK_MOCKER_(1, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(1, constness, Method).With(gmock_a1); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(1, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="375" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a885295ca6bebb15efb3fc786218c5d47" prot="public" static="no">
        <name>GMOCK_METHOD2_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      GMOCK_ARG_(tn, 1, __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 2), \
        this_method_does_not_take_2_arguments); \
    GMOCK_MOCKER_(2, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(2, constness, Method).Invoke(gmock_a1, gmock_a2); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method(GMOCK_MATCHER_(tn, 1, __VA_ARGS__) gmock_a1, \
                     GMOCK_MATCHER_(tn, 2, __VA_ARGS__) gmock_a2) constness { \
    GMOCK_MOCKER_(2, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(2, constness, Method).With(gmock_a1, gmock_a2); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(2, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="394" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1af7c77ba511c631de02bb8c45a6ed3045" prot="public" static="no">
        <name>GMOCK_METHOD3_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      GMOCK_ARG_(tn, 1, __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 3), \
        this_method_does_not_take_3_arguments); \
    GMOCK_MOCKER_(3, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(3, constness, Method).Invoke(gmock_a1, gmock_a2, \
        gmock_a3); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method(GMOCK_MATCHER_(tn, 1, __VA_ARGS__) gmock_a1, \
                     GMOCK_MATCHER_(tn, 2, __VA_ARGS__) gmock_a2, \
                     GMOCK_MATCHER_(tn, 3, __VA_ARGS__) gmock_a3) constness { \
    GMOCK_MOCKER_(3, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(3, constness, Method).With(gmock_a1, gmock_a2, \
        gmock_a3); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(3, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="415" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ab6430f2cfad9de4aca5258ea559294bb" prot="public" static="no">
        <name>GMOCK_METHOD4_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      GMOCK_ARG_(tn, 1, __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 4), \
        this_method_does_not_take_4_arguments); \
    GMOCK_MOCKER_(4, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(4, constness, Method).Invoke(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method(GMOCK_MATCHER_(tn, 1, __VA_ARGS__) gmock_a1, \
                     GMOCK_MATCHER_(tn, 2, __VA_ARGS__) gmock_a2, \
                     GMOCK_MATCHER_(tn, 3, __VA_ARGS__) gmock_a3, \
                     GMOCK_MATCHER_(tn, 4, __VA_ARGS__) gmock_a4) constness { \
    GMOCK_MOCKER_(4, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(4, constness, Method).With(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(4, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="440" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a9e3ecd392499ab19a4a6d3adcabf56f6" prot="public" static="no">
        <name>GMOCK_METHOD5_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      GMOCK_ARG_(tn, 1, __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 5), \
        this_method_does_not_take_5_arguments); \
    GMOCK_MOCKER_(5, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(5, constness, Method).Invoke(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4, gmock_a5); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method(GMOCK_MATCHER_(tn, 1, __VA_ARGS__) gmock_a1, \
                     GMOCK_MATCHER_(tn, 2, __VA_ARGS__) gmock_a2, \
                     GMOCK_MATCHER_(tn, 3, __VA_ARGS__) gmock_a3, \
                     GMOCK_MATCHER_(tn, 4, __VA_ARGS__) gmock_a4, \
                     GMOCK_MATCHER_(tn, 5, __VA_ARGS__) gmock_a5) constness { \
    GMOCK_MOCKER_(5, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(5, constness, Method).With(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4, gmock_a5); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(5, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="467" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ad0ca7f6973a076d0af4c953f8ed91842" prot="public" static="no">
        <name>GMOCK_METHOD6_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      GMOCK_ARG_(tn, 1, __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 6), \
        this_method_does_not_take_6_arguments); \
    GMOCK_MOCKER_(6, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(6, constness, Method).Invoke(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4, gmock_a5, gmock_a6); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method(GMOCK_MATCHER_(tn, 1, __VA_ARGS__) gmock_a1, \
                     GMOCK_MATCHER_(tn, 2, __VA_ARGS__) gmock_a2, \
                     GMOCK_MATCHER_(tn, 3, __VA_ARGS__) gmock_a3, \
                     GMOCK_MATCHER_(tn, 4, __VA_ARGS__) gmock_a4, \
                     GMOCK_MATCHER_(tn, 5, __VA_ARGS__) gmock_a5, \
                     GMOCK_MATCHER_(tn, 6, __VA_ARGS__) gmock_a6) constness { \
    GMOCK_MOCKER_(6, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(6, constness, Method).With(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4, gmock_a5, gmock_a6); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(6, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="496" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ab98a8399ba62b53b375c2807f4d39d2f" prot="public" static="no">
        <name>GMOCK_METHOD7_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_RESULT_(tn, __VA_ARGS__) ct Method( \
      GMOCK_ARG_(tn, 1, __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7) constness { \
    GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;                          \
        tn ::<ref refid="structtesting_1_1internal_1_1_function" kindref="compound">testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value \
            == 7), \
        this_method_does_not_take_7_arguments); \
    GMOCK_MOCKER_(7, constness, Method).SetOwnerAndName(this, #Method); \
    return GMOCK_MOCKER_(7, constness, Method).Invoke(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4, gmock_a5, gmock_a6, gmock_a7); \
  } \
  ::<ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">testing::MockSpec</ref>&lt;__VA_ARGS__&gt;&amp; \
      gmock_##Method(GMOCK_MATCHER_(tn, 1, __VA_ARGS__) gmock_a1, \
                     GMOCK_MATCHER_(tn, 2, __VA_ARGS__) gmock_a2, \
                     GMOCK_MATCHER_(tn, 3, __VA_ARGS__) gmock_a3, \
                     GMOCK_MATCHER_(tn, 4, __VA_ARGS__) gmock_a4, \
                     GMOCK_MATCHER_(tn, 5, __VA_ARGS__) gmock_a5, \
                     GMOCK_MATCHER_(tn, 6, __VA_ARGS__) gmock_a6, \
                     GMOCK_MATCHER_(tn, 7, __VA_ARGS__) gmock_a7) constness { \
    GMOCK_MOCKER_(7, constness, Method).RegisterOwner(this); \
    return GMOCK_MOCKER_(7, constness, Method).With(gmock_a1, gmock_a2, \
        gmock_a3, gmock_a4, gmock_a5, gmock_a6, gmock_a7); \
  } \
  mutable ::<ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">testing::FunctionMocker</ref>&lt;__VA_ARGS__&gt; GMOCK_MOCKER_(7, constness, \
      Method)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="527" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aa84a36427c44505207b7cad5dec7ad67" prot="public" static="no">
        <name>GMOCK_METHOD8_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="560" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aa820171a19cc587c247dbe05cbffc55f" prot="public" static="no">
        <name>GMOCK_METHOD9_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="595" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a81a48223a8771de36ef92ac6d56f6e81" prot="public" static="no">
        <name>GMOCK_METHOD10_</name>
        <param><defname>tn</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="634" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a411c69e9d489d590480f728d365ae450" prot="public" static="no">
        <name>MOCK_METHOD0</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="675" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ac49d366be035ee87b73264a29059cdc7" prot="public" static="no">
        <name>MOCK_METHOD1</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="676" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ab3fb7d97f21dc99205db38a14df4a1c4" prot="public" static="no">
        <name>MOCK_METHOD2</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="677" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1af11ebf7fafb231778846dba77725cfdd" prot="public" static="no">
        <name>MOCK_METHOD3</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="678" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a111d70ee62b09089ec3cd7d6662e5cd2" prot="public" static="no">
        <name>MOCK_METHOD4</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="679" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a9b83bed95e89664e61d3a36174de0052" prot="public" static="no">
        <name>MOCK_METHOD5</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="680" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1add8f8f786444c2c85ac67f550dbde5a6" prot="public" static="no">
        <name>MOCK_METHOD6</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="681" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a01f3369877a0c52f59c006fbd54b6a10" prot="public" static="no">
        <name>MOCK_METHOD7</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="682" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ae77220bef9ab254c331b9026a3d18dba" prot="public" static="no">
        <name>MOCK_METHOD8</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="683" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ad6b30841fe780994d216cc8829cc127f" prot="public" static="no">
        <name>MOCK_METHOD9</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="684" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a01760fdd295f5a92264eed6a9ff1dbf8" prot="public" static="no">
        <name>MOCK_METHOD10</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="685" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="685" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ac86e04e649fa8bf35b5f0149a13c935d" prot="public" static="no">
        <name>MOCK_CONST_METHOD0</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="687" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a6f76aeb56f492cfe538e177b6aa77965" prot="public" static="no">
        <name>MOCK_CONST_METHOD1</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="688" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a31c489715704817a3f40d178404c61e8" prot="public" static="no">
        <name>MOCK_CONST_METHOD2</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="689" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a9e67763df6705172e1a2ae92f1446bbc" prot="public" static="no">
        <name>MOCK_CONST_METHOD3</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="690" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a4614e9d6b24dff60c30dd4dedf494c6c" prot="public" static="no">
        <name>MOCK_CONST_METHOD4</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="691" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ab7021ec2b869e7c9ea90363ee675f19b" prot="public" static="no">
        <name>MOCK_CONST_METHOD5</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="692" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a5081a185ba264d599357398952c23af1" prot="public" static="no">
        <name>MOCK_CONST_METHOD6</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="693" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a0f0e63ed14beab1d85f0160bdbed9930" prot="public" static="no">
        <name>MOCK_CONST_METHOD7</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="694" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a614ee58b7c9ab72e90c850d4bb97a502" prot="public" static="no">
        <name>MOCK_CONST_METHOD8</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="695" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ab7429646bacf56a7d560a3d81d497880" prot="public" static="no">
        <name>MOCK_CONST_METHOD9</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="696" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a4f16ede0ef660fb6dc49e5f5d226fbf9" prot="public" static="no">
        <name>MOCK_CONST_METHOD10</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="697" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a55a5a1a22cec416ead5605a2da39eec8" prot="public" static="no">
        <name>MOCK_METHOD0_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="699" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a8e5b9539726be5c7a13f1aa3bcc1f29f" prot="public" static="no">
        <name>MOCK_METHOD1_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="700" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1adb6e8d8bd6ab614c62d8ecc2ec163e3c" prot="public" static="no">
        <name>MOCK_METHOD2_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="701" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a0b1576f68e6161f106e3d9ee7e3ac28b" prot="public" static="no">
        <name>MOCK_METHOD3_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="702" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a17dde4ac8109f0bf1b73e3509e42c879" prot="public" static="no">
        <name>MOCK_METHOD4_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="703" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a3566f9bd057c5cee1841f55cbf685947" prot="public" static="no">
        <name>MOCK_METHOD5_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="704" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a0d16357a0043d36b167a1c42ef33f672" prot="public" static="no">
        <name>MOCK_METHOD6_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="705" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a31bdd1d1448052f4122ecebf937a8f44" prot="public" static="no">
        <name>MOCK_METHOD7_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="706" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aa7e6573bb6a57f2a2d3c2875caeffaa3" prot="public" static="no">
        <name>MOCK_METHOD8_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="707" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a838c68cbdf422cfc703b83daf1d1f1e1" prot="public" static="no">
        <name>MOCK_METHOD9_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="708" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aa28723ba52933b5ea9a4ffa1a73d15e1" prot="public" static="no">
        <name>MOCK_METHOD10_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(typename, , , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="709" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a5fc82f3de9d5e83b0a6bb6cda98a8887" prot="public" static="no">
        <name>MOCK_CONST_METHOD0_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="711" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a46dfe8631eee86b15a79aff8a2866621" prot="public" static="no">
        <name>MOCK_CONST_METHOD1_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="713" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a4337d7257aa4edff048aa406073b718b" prot="public" static="no">
        <name>MOCK_CONST_METHOD2_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="715" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a4c4c3417c197729f647fb0c700a41405" prot="public" static="no">
        <name>MOCK_CONST_METHOD3_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="717" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a52290b1b841869d2d624b60ba1b6c3c4" prot="public" static="no">
        <name>MOCK_CONST_METHOD4_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="719" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a37d02091cf2e4d31c11f38609d12a815" prot="public" static="no">
        <name>MOCK_CONST_METHOD5_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="721" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a18f8d1d9ac6c6684bd681342e130662b" prot="public" static="no">
        <name>MOCK_CONST_METHOD6_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="723" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a6e9ae85c17b12ba8882e06b3785d4582" prot="public" static="no">
        <name>MOCK_CONST_METHOD7_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="725" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a430c2eae077074190d4b380868d42944" prot="public" static="no">
        <name>MOCK_CONST_METHOD8_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="727" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a7875d0d77516825a4b9cee703ae85c6f" prot="public" static="no">
        <name>MOCK_CONST_METHOD9_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="729" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aa31d758cb898bad2d16ac706c204da7f" prot="public" static="no">
        <name>MOCK_CONST_METHOD10_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(typename, const, , m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="731" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1acedf2c97e3493f4f39d35bbead8d9e4a" prot="public" static="no">
        <name>MOCK_METHOD0_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="734" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a3ffee4ba10588254eb44e67603e9de71" prot="public" static="no">
        <name>MOCK_METHOD1_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="736" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a27fcf1de830388291c2a81b144b8f89b" prot="public" static="no">
        <name>MOCK_METHOD2_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="738" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1afef2985a236f7588139c690d395758fb" prot="public" static="no">
        <name>MOCK_METHOD3_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="740" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a333774e6dda450fc85c241bff4b9957a" prot="public" static="no">
        <name>MOCK_METHOD4_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="742" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a195de665a5ab83cf56ac9562ccc73838" prot="public" static="no">
        <name>MOCK_METHOD5_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="744" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a1e55bb6ae5cfcb0403c867541f5f0931" prot="public" static="no">
        <name>MOCK_METHOD6_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="746" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a696e2f91735b99b2a37c369a74bad647" prot="public" static="no">
        <name>MOCK_METHOD7_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="748" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a5d207db39768c12d6fecab03cfbe4d75" prot="public" static="no">
        <name>MOCK_METHOD8_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="750" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a38494187d78c6a395f78c074d204f593" prot="public" static="no">
        <name>MOCK_METHOD9_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="752" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1af9641034cbd1f178dacd3515633d951f" prot="public" static="no">
        <name>MOCK_METHOD10_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="754" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="754" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a001804410911b4ae2bc6f02a45a467e4" prot="public" static="no">
        <name>MOCK_CONST_METHOD0_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="757" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a94f4b0954d3d72011acf5f288ca40d42" prot="public" static="no">
        <name>MOCK_CONST_METHOD1_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="759" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a7c0507949996b9bae8b03fb6ea90d7a4" prot="public" static="no">
        <name>MOCK_CONST_METHOD2_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="761" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ac10e04e26db63b6c2a452e05d3c89db8" prot="public" static="no">
        <name>MOCK_CONST_METHOD3_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="763" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a15229a3933a49f5099ee010c6dcaadeb" prot="public" static="no">
        <name>MOCK_CONST_METHOD4_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="765" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a8d5e56fa6111cd7ee468e6dacf8691b9" prot="public" static="no">
        <name>MOCK_CONST_METHOD5_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="767" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a2d904ee47040f643e7b534c22603dd90" prot="public" static="no">
        <name>MOCK_CONST_METHOD6_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="769" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a66076ace4a10740c553080e5273f69c3" prot="public" static="no">
        <name>MOCK_CONST_METHOD7_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="771" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ab66f6bb289f1105f7c0dac3421c4a7f5" prot="public" static="no">
        <name>MOCK_CONST_METHOD8_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="773" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ad422a4d4cb5e3b91478e66a26c2af63e" prot="public" static="no">
        <name>MOCK_CONST_METHOD9_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="775" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a484ce7e8fbcc26b5145e893b48e7cd7d" prot="public" static="no">
        <name>MOCK_CONST_METHOD10_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="777" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a68a3dcece1b6932b4dbda2216ff4fa90" prot="public" static="no">
        <name>MOCK_METHOD0_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="780" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a3028c1938f6b819b64400c426ef1e30d" prot="public" static="no">
        <name>MOCK_METHOD1_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="782" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a18e4e8da0bdf27bde5ffca30587ff074" prot="public" static="no">
        <name>MOCK_METHOD2_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="784" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a1e723cc1c62c9fedb9f54ee30c111047" prot="public" static="no">
        <name>MOCK_METHOD3_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="786" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aae18ec395b1ba3e991a25ffb997821ee" prot="public" static="no">
        <name>MOCK_METHOD4_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="788" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="788" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a04f83b372ebe63dea92cb5c3502ff345" prot="public" static="no">
        <name>MOCK_METHOD5_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="790" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a0dfe65f974c2b6d60cac3114489b4527" prot="public" static="no">
        <name>MOCK_METHOD6_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="792" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ae820565d836fda34401e8bdcfaaa7605" prot="public" static="no">
        <name>MOCK_METHOD7_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="794" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a0cf1d3aba371dfe424d27b97b5473174" prot="public" static="no">
        <name>MOCK_METHOD8_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="796" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="796" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ad1bd879e10bad098cf68c27c75f4be09" prot="public" static="no">
        <name>MOCK_METHOD9_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="798" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ae0460a593b7868a5573117032d6d2e3e" prot="public" static="no">
        <name>MOCK_METHOD10_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(typename, , ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="800" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a4d7f87bf059071344e3a80c7fd1b9051" prot="public" static="no">
        <name>MOCK_CONST_METHOD0_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD0_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="803" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="803" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a73aa181fb48e360fd18f1c2b7d9073b0" prot="public" static="no">
        <name>MOCK_CONST_METHOD1_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD1_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="805" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="805" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a74512829feca879a8e11731f0442d7b7" prot="public" static="no">
        <name>MOCK_CONST_METHOD2_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD2_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="807" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="807" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ac19708f4d74bb11d9aeecb7c5b74dec8" prot="public" static="no">
        <name>MOCK_CONST_METHOD3_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD3_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="809" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1acd1c5b5fca7c75ef5ed812f1e495a3f7" prot="public" static="no">
        <name>MOCK_CONST_METHOD4_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD4_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="811" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ae1e95e9eb000b737025cb74da20398ac" prot="public" static="no">
        <name>MOCK_CONST_METHOD5_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD5_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="813" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1a3acffd86eecfbcfe829231930406610b" prot="public" static="no">
        <name>MOCK_CONST_METHOD6_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD6_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="815" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1ac041233126a7740a136fc7a9737613dd" prot="public" static="no">
        <name>MOCK_CONST_METHOD7_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD7_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="817" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1aa4ed75d9f9d23eb0a00543d3ac1ed093" prot="public" static="no">
        <name>MOCK_CONST_METHOD8_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD8_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="819" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1afb8878388e0875e109d1fd6902471780" prot="public" static="no">
        <name>MOCK_CONST_METHOD9_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD9_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="821" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-generated-function-mockers_8h_1af697bae09aedcdfb3d6897081efe7541" prot="public" static="no">
        <name>MOCK_CONST_METHOD10_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_METHOD10_(typename, const, ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" line="823" column="9" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h" bodystart="823" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>was<sp/>GENERATED<sp/>by<sp/>command:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>pump.py<sp/>gmock-generated-function-mockers.h.pump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>EDIT<sp/>BY<sp/>HAND!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Mock<sp/>-<sp/>a<sp/>framework<sp/>for<sp/>writing<sp/>C++<sp/>mock<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>implements<sp/>function<sp/>mockers<sp/>of<sp/>various<sp/>arities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_FUNCTION_MOCKERS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_FUNCTION_MOCKERS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/gmock-spec-builders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-internal-utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="54" refid="classtesting_1_1internal_1_1_function_mocker_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">FunctionMockerBase</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>class<sp/>FunctionMocker<sp/>really<sp/>belongs<sp/>to<sp/>the<sp/>::testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>namespace.<sp/><sp/>However<sp/>if<sp/>we<sp/>define<sp/>it<sp/>in<sp/>::testing,<sp/>MSVC<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>complain<sp/>when<sp/>classes<sp/>in<sp/>::testing::internal<sp/>declare<sp/>it<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>friend<sp/>class<sp/>template.<sp/><sp/>To<sp/>workaround<sp/>this<sp/>compiler<sp/>bug,<sp/>we<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FunctionMocker<sp/>in<sp/>::testing::internal<sp/>and<sp/>import<sp/>it<sp/>into<sp/>::testing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="62" refid="classtesting_1_1internal_1_1_function_mocker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="65" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R()&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R()&gt;<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>R<sp/>Invoke()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="85" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1)&gt;<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="106" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2)&gt;<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="127" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3)&gt;<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="149" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4)&gt;<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3,<sp/>A4);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>&amp;<sp/>m4)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3,<sp/>m4));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3,<sp/>a4));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="172" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5)&gt;<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>&amp;<sp/>m4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>&amp;<sp/>m5)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="195" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6)&gt;<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>&amp;<sp/>m4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>&amp;<sp/>m5,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>&amp;<sp/>m6)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m6));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="220" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7)&gt;<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>&amp;<sp/>m4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>&amp;<sp/>m5,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>&amp;<sp/>m6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref>&amp;<sp/>m7)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m6,<sp/>m7));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,<sp/>A7<sp/>a7)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="245" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8)&gt;<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>&amp;<sp/>m4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>&amp;<sp/>m5,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>&amp;<sp/>m6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref>&amp;<sp/>m7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A8&gt;</ref>&amp;<sp/>m8)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m6,<sp/>m7,<sp/>m8));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,<sp/>A7<sp/>a7,<sp/>A8<sp/>a8)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="270" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00d00d8722bf1ad86ca8049508f133d393" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9)&gt;<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>&amp;<sp/>m4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>&amp;<sp/>m5,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>&amp;<sp/>m6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref>&amp;<sp/>m7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A8&gt;</ref>&amp;<sp/>m8,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A9&gt;</ref>&amp;<sp/>m9)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m6,<sp/>m7,<sp/>m8,<sp/>m9));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,<sp/>A7<sp/>a7,<sp/>A8<sp/>a8,<sp/>A9<sp/>a9)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="297" refid="classtesting_1_1internal_1_1_function_mocker_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_0038b5baf41d3183579372e0e15a9db969" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">FunctionMocker</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,<sp/>A10)&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker_base" kindref="compound">internal::FunctionMockerBase</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,<sp/>A10)&gt;<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>F(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,<sp/>A10);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function&lt;F&gt;::ArgumentTuple</ref><sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_mock_spec" kindref="compound">MockSpec&lt;F&gt;</ref>&amp;<sp/>With(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A1&gt;</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>&amp;<sp/>m2,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>&amp;<sp/>m3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>&amp;<sp/>m4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>&amp;<sp/>m5,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>&amp;<sp/>m6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref>&amp;<sp/>m7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A8&gt;</ref>&amp;<sp/>m8,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A9&gt;</ref>&amp;<sp/>m9,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A10&gt;</ref>&amp;<sp/>m10)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_spec().SetMatchers(::testing::make_tuple(m1,<sp/>m2,<sp/>m3,<sp/>m4,<sp/>m5,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m6,<sp/>m7,<sp/>m8,<sp/>m9,<sp/>m10));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;current_spec();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>R<sp/>Invoke(A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,<sp/>A7<sp/>a7,<sp/>A8<sp/>a8,<sp/>A9<sp/>a9,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A10<sp/>a10)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>gcc<sp/>and<sp/>MSVC<sp/>don&apos;t<sp/>enforce<sp/>it,<sp/>&apos;this-&gt;&apos;<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>C++<sp/>standard<sp/>[14.6.4]<sp/>here,<sp/>as<sp/>the<sp/>base<sp/>class<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dependent<sp/>on<sp/>the<sp/>template<sp/>argument<sp/>(and<sp/>thus<sp/>shouldn&apos;t<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looked<sp/>into<sp/>when<sp/>resolving<sp/>InvokeWith).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;InvokeWith(ArgumentTuple(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a10));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">};</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>style<sp/>guide<sp/>prohibits<sp/>&quot;using&quot;<sp/>statements<sp/>in<sp/>a<sp/>namespace<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inside<sp/>a<sp/>header<sp/>file.<sp/><sp/>However,<sp/>the<sp/>FunctionMocker<sp/>class<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>defined<sp/>in<sp/>the<sp/>::testing<sp/>namespace.<sp/><sp/>The<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>just<sp/>a<sp/>trick<sp/>for<sp/>working<sp/>around<sp/>a<sp/>bug<sp/>in<sp/>MSVC<sp/>8.0,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cannot<sp/>handle<sp/>it<sp/>if<sp/>we<sp/>define<sp/>FunctionMocker<sp/>in<sp/>::testing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_function_mocker" kindref="compound">internal::FunctionMocker</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GMOCK_RESULT_(tn,<sp/>F)<sp/>expands<sp/>to<sp/>the<sp/>result<sp/>type<sp/>of<sp/>function<sp/>type<sp/>F.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>define<sp/>this<sp/>as<sp/>a<sp/>variadic<sp/>macro<sp/>in<sp/>case<sp/>F<sp/>contains<sp/>unprotected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>commas<sp/>(the<sp/>same<sp/>reason<sp/>that<sp/>we<sp/>use<sp/>variadic<sp/>macros<sp/>in<sp/>other<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>file).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_RESULT_(tn,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::Result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>of<sp/>argument<sp/>N<sp/>of<sp/>the<sp/>given<sp/>function<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_ARG_(tn,<sp/>N,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::Argument##N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>matcher<sp/>type<sp/>for<sp/>argument<sp/>N<sp/>of<sp/>the<sp/>given<sp/>function<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_MATCHER_(tn,<sp/>N,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>::testing::Matcher&lt;GMOCK_ARG_(tn,<sp/>N,<sp/>__VA_ARGS__)&gt;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>variable<sp/>for<sp/>mocking<sp/>the<sp/>given<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_MOCKER_(arity,<sp/>constness,<sp/>Method)<sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_CONCAT_TOKEN_(gmock##constness##arity##_##Method##_,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD0_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0),<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_0_arguments);<sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(0,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(0,<sp/>constness,<sp/>Method).Invoke();<sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method()<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(0,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(0,<sp/>constness,<sp/>Method).With();<sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(0,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD1_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1),<sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_1_argument);<sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(1,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(1,<sp/>constness,<sp/>Method).Invoke(gmock_a1);<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(1,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(1,<sp/>constness,<sp/>Method).With(gmock_a1);<sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(1,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD2_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>2),<sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_2_arguments);<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(2,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(2,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2);<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(2,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(2,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2);<sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(2,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD3_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>3),<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_3_arguments);<sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(3,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(3,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3);<sp/>\</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(3,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(3,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3);<sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(3,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD4_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>4),<sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_4_arguments);<sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(4,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(4,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4);<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(4,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(4,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4);<sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(4,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD5_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>5),<sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_5_arguments);<sp/>\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(5,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(5,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5);<sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(5,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(5,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5);<sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(5,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD6_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>6),<sp/>\</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_6_arguments);<sp/>\</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(6,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(6,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6);<sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(6,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(6,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6);<sp/>\</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(6,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD7_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="536"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="537"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>7),<sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_7_arguments);<sp/>\</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(7,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(7,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7);<sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(7,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(7,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7);<sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(7,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD8_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="563"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7,<sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>8,<sp/>__VA_ARGS__)<sp/>gmock_a8)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>8),<sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_8_arguments);<sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(8,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(8,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7,<sp/>gmock_a8);<sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="579"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="583"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="584"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="585"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7,<sp/>\</highlight></codeline>
<codeline lineno="586"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>8,<sp/>__VA_ARGS__)<sp/>gmock_a8)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="587"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(8,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="588"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(8,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="589"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7,<sp/>gmock_a8);<sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(8,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD9_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7,<sp/>\</highlight></codeline>
<codeline lineno="604"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>8,<sp/>__VA_ARGS__)<sp/>gmock_a8,<sp/>\</highlight></codeline>
<codeline lineno="605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>9,<sp/>__VA_ARGS__)<sp/>gmock_a9)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="608"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>9),<sp/>\</highlight></codeline>
<codeline lineno="609"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_9_arguments);<sp/>\</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(9,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="611"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(9,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7,<sp/>gmock_a8,<sp/>\</highlight></codeline>
<codeline lineno="613"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a9);<sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="617"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="619"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="621"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7,<sp/>\</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>8,<sp/>__VA_ARGS__)<sp/>gmock_a8,<sp/>\</highlight></codeline>
<codeline lineno="624"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>9,<sp/>__VA_ARGS__)<sp/>gmock_a9)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="625"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(9,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(9,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7,<sp/>gmock_a8,<sp/>\</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a9);<sp/>\</highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(9,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERNAL<sp/>IMPLEMENTATION<sp/>-<sp/>DON&apos;T<sp/>USE<sp/>IN<sp/>USER<sp/>CODE!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_METHOD10_(tn,<sp/>constness,<sp/>ct,<sp/>Method,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"><sp/><sp/>GMOCK_RESULT_(tn,<sp/>__VA_ARGS__)<sp/>ct<sp/>Method(<sp/>\</highlight></codeline>
<codeline lineno="636"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="638"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="639"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="640"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7,<sp/>\</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>8,<sp/>__VA_ARGS__)<sp/>gmock_a8,<sp/>\</highlight></codeline>
<codeline lineno="644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>9,<sp/>__VA_ARGS__)<sp/>gmock_a9,<sp/>\</highlight></codeline>
<codeline lineno="645"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_ARG_(tn,<sp/>10,<sp/>__VA_ARGS__)<sp/>gmock_a10)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="646"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_COMPILE_ASSERT_((::testing::tuple_size&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>\</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>10),<sp/>\</highlight></codeline>
<codeline lineno="649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_method_does_not_take_10_arguments);<sp/>\</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(10,<sp/>constness,<sp/>Method).SetOwnerAndName(this,<sp/>#Method);<sp/>\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(10,<sp/>constness,<sp/>Method).Invoke(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7,<sp/>gmock_a8,<sp/>gmock_a9,<sp/>\</highlight></codeline>
<codeline lineno="653"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a10);<sp/>\</highlight></codeline>
<codeline lineno="654"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="655"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;__VA_ARGS__&gt;&amp;<sp/>\</highlight></codeline>
<codeline lineno="656"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gmock_##Method(GMOCK_MATCHER_(tn,<sp/>1,<sp/>__VA_ARGS__)<sp/>gmock_a1,<sp/>\</highlight></codeline>
<codeline lineno="657"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>2,<sp/>__VA_ARGS__)<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>3,<sp/>__VA_ARGS__)<sp/>gmock_a3,<sp/>\</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>4,<sp/>__VA_ARGS__)<sp/>gmock_a4,<sp/>\</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>5,<sp/>__VA_ARGS__)<sp/>gmock_a5,<sp/>\</highlight></codeline>
<codeline lineno="661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>6,<sp/>__VA_ARGS__)<sp/>gmock_a6,<sp/>\</highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>7,<sp/>__VA_ARGS__)<sp/>gmock_a7,<sp/>\</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>8,<sp/>__VA_ARGS__)<sp/>gmock_a8,<sp/>\</highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>9,<sp/>__VA_ARGS__)<sp/>gmock_a9,<sp/>\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_MATCHER_(tn,<sp/>10,<sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__)<sp/>gmock_a10)<sp/>constness<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(10,<sp/>constness,<sp/>Method).RegisterOwner(this);<sp/>\</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(10,<sp/>constness,<sp/>Method).With(gmock_a1,<sp/>gmock_a2,<sp/>\</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a3,<sp/>gmock_a4,<sp/>gmock_a5,<sp/>gmock_a6,<sp/>gmock_a7,<sp/>gmock_a8,<sp/>gmock_a9,<sp/>\</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmock_a10);<sp/>\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;__VA_ARGS__&gt;<sp/>GMOCK_MOCKER_(10,<sp/>constness,<sp/>\</highlight></codeline>
<codeline lineno="673"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>Method)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0(m,<sp/>...)<sp/>GMOCK_METHOD0_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1(m,<sp/>...)<sp/>GMOCK_METHOD1_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2(m,<sp/>...)<sp/>GMOCK_METHOD2_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3(m,<sp/>...)<sp/>GMOCK_METHOD3_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4(m,<sp/>...)<sp/>GMOCK_METHOD4_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5(m,<sp/>...)<sp/>GMOCK_METHOD5_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6(m,<sp/>...)<sp/>GMOCK_METHOD6_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7(m,<sp/>...)<sp/>GMOCK_METHOD7_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8(m,<sp/>...)<sp/>GMOCK_METHOD8_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9(m,<sp/>...)<sp/>GMOCK_METHOD9_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10(m,<sp/>...)<sp/>GMOCK_METHOD10_(,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0(m,<sp/>...)<sp/>GMOCK_METHOD0_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1(m,<sp/>...)<sp/>GMOCK_METHOD1_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2(m,<sp/>...)<sp/>GMOCK_METHOD2_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3(m,<sp/>...)<sp/>GMOCK_METHOD3_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4(m,<sp/>...)<sp/>GMOCK_METHOD4_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5(m,<sp/>...)<sp/>GMOCK_METHOD5_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6(m,<sp/>...)<sp/>GMOCK_METHOD6_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7(m,<sp/>...)<sp/>GMOCK_METHOD7_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8(m,<sp/>...)<sp/>GMOCK_METHOD8_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9(m,<sp/>...)<sp/>GMOCK_METHOD9_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10(m,<sp/>...)<sp/>GMOCK_METHOD10_(,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0_T(m,<sp/>...)<sp/>GMOCK_METHOD0_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1_T(m,<sp/>...)<sp/>GMOCK_METHOD1_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2_T(m,<sp/>...)<sp/>GMOCK_METHOD2_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3_T(m,<sp/>...)<sp/>GMOCK_METHOD3_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4_T(m,<sp/>...)<sp/>GMOCK_METHOD4_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5_T(m,<sp/>...)<sp/>GMOCK_METHOD5_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6_T(m,<sp/>...)<sp/>GMOCK_METHOD6_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7_T(m,<sp/>...)<sp/>GMOCK_METHOD7_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8_T(m,<sp/>...)<sp/>GMOCK_METHOD8_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9_T(m,<sp/>...)<sp/>GMOCK_METHOD9_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10_T(m,<sp/>...)<sp/>GMOCK_METHOD10_(typename,<sp/>,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD0_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="714"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD1_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="716"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD2_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD3_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="720"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD4_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="722"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD5_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="724"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD6_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="726"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD7_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD8_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="730"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD9_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10_T(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="732"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD10_(typename,<sp/>const,<sp/>,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="735"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD0_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="737"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD1_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="739"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD2_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="741"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD3_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="743"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD4_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="745"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD5_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="747"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD6_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="749"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD7_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD8_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="753"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD9_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD10_(,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="758"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD0_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="760"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD1_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD2_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD3_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="766"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD4_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD5_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD6_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="772"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD7_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="774"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD8_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD9_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD10_(,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="781"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD0_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD1_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD2_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD3_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD4_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD5_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD6_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD7_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="797"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD8_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="799"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD9_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="801"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD10_(typename,<sp/>,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="804"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD0_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="806"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD1_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="808"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD2_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="810"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD3_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="812"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD4_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="814"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD5_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="816"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD6_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="818"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD7_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="820"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD8_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="822"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD9_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="824"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_METHOD10_(typename,<sp/>const,<sp/>ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>MockFunction&lt;F&gt;<sp/>class<sp/>has<sp/>one<sp/>mock<sp/>method<sp/>whose<sp/>type<sp/>is<sp/>F.<sp/><sp/>It<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>useful<sp/>when<sp/>you<sp/>just<sp/>want<sp/>your<sp/>test<sp/>code<sp/>to<sp/>emit<sp/>some<sp/>messages<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>Google<sp/>Mock<sp/>verify<sp/>the<sp/>right<sp/>messages<sp/>are<sp/>sent<sp/>(and<sp/>perhaps<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>right<sp/>times).<sp/><sp/>For<sp/>example,<sp/>if<sp/>you<sp/>are<sp/>exercising<sp/>code:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>want<sp/>to<sp/>verify<sp/>that<sp/>Foo(1)<sp/>and<sp/>Foo(3)<sp/>both<sp/>invoke</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mock.Bar(&quot;a&quot;),<sp/>but<sp/>Foo(2)<sp/>doesn&apos;t<sp/>invoke<sp/>anything,<sp/>you<sp/>can<sp/>write:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST(FooTest,<sp/>InvokesBarCorrectly)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MyMock<sp/>mock;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MockFunction&lt;void(string<sp/>check_point_name)&gt;<sp/>check;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>InSequence<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>EXPECT_CALL(mock,<sp/>Bar(&quot;a&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>EXPECT_CALL(check,<sp/>Call(&quot;1&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>EXPECT_CALL(check,<sp/>Call(&quot;2&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>EXPECT_CALL(mock,<sp/>Bar(&quot;a&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>check.Call(&quot;1&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>check.Call(&quot;2&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>expectation<sp/>spec<sp/>says<sp/>that<sp/>the<sp/>first<sp/>Bar(&quot;a&quot;)<sp/>must<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>before<sp/>check<sp/>point<sp/>&quot;1&quot;,<sp/>the<sp/>second<sp/>Bar(&quot;a&quot;)<sp/>must<sp/>happen<sp/>after<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">//<sp/>point<sp/>&quot;2&quot;,<sp/>and<sp/>nothing<sp/>should<sp/>happen<sp/>between<sp/>the<sp/>two<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>points.<sp/>The<sp/>explicit<sp/>check<sp/>points<sp/>make<sp/>it<sp/>easy<sp/>to<sp/>tell<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bar(&quot;a&quot;)<sp/>is<sp/>called<sp/>by<sp/>which<sp/>call<sp/>to<sp/>Foo().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MockFunction&lt;F&gt;<sp/>can<sp/>also<sp/>be<sp/>used<sp/>to<sp/>exercise<sp/>code<sp/>that<sp/>accepts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">//<sp/>std::function&lt;F&gt;<sp/>callbacks.<sp/>To<sp/>do<sp/>so,<sp/>use<sp/>AsStdFunction()<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>create<sp/>std::function<sp/>proxy<sp/>forwarding<sp/>to<sp/>original<sp/>object&apos;s<sp/>Call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST(FooTest,<sp/>RunsCallbackWithBarArgument)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MockFunction&lt;int(string)&gt;<sp/>callback;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_CALL(callback,<sp/>Call(&quot;bar&quot;)).WillOnce(Return(1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Foo(callback.AsStdFunction());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="873" refid="classtesting_1_1_mock_function" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="876" refid="classtesting_1_1_mock_function_3_01_r_07_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R()&gt;<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>MOCK_METHOD0_T(Call,<sp/>R());</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>std::function&lt;R()&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal">};</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0&gt;</highlight></codeline>
<codeline lineno="895" refid="classtesting_1_1_mock_function_3_01_r_07_a0_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0)&gt;<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>MOCK_METHOD1_T(Call,<sp/>R(A0));</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal">};</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="914" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1)&gt;<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>MOCK_METHOD2_T(Call,<sp/>R(A0,<sp/>A1));</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal">};</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="933" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2)&gt;<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>MOCK_METHOD3_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2));</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal">};</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="952" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3)&gt;<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>MOCK_METHOD4_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2,<sp/>A3));</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2,<sp/>a3);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal">};</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="972" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4)&gt;<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>MOCK_METHOD5_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4));</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">};</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="992" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5)&gt;<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>MOCK_METHOD6_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5));</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="1012" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6)&gt;<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>MOCK_METHOD7_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6));</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="1032" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7)&gt;<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>MOCK_METHOD8_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7));</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,<sp/>A7<sp/>a7)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="1052" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8)&gt;<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>MOCK_METHOD9_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8));</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,<sp/>A7<sp/>a7,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A8<sp/>a8)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="1074" refid="classtesting_1_1_mock_function_3_01_r_07_a0_00_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a654a9d62da83bde10dfec0368733bb48" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9)&gt;<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>MOCK_METHOD10_T(Call,<sp/>R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9));</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>std::function&lt;R(A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9)&gt;<sp/>AsStdFunction()<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](A0<sp/>a0,<sp/>A1<sp/>a1,<sp/>A2<sp/>a2,<sp/>A3<sp/>a3,<sp/>A4<sp/>a4,<sp/>A5<sp/>a5,<sp/>A6<sp/>a6,<sp/>A7<sp/>a7,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A8<sp/>a8,<sp/>A9<sp/>a9)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GTEST_HAS_STD_FUNCTION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(<ref refid="classtesting_1_1_mock_function" kindref="compound">MockFunction</ref>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_FUNCTION_MOCKERS_H_</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h"/>
  </compounddef>
</doxygen>
