<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmock-generated-internal-utils_8h" kind="file" language="C++">
    <compoundname>gmock-generated-internal-utils.h</compoundname>
    <includes refid="gmock-port_8h" local="yes">gmock/internal/gmock-port.h</includes>
    <includedby refid="gmock-internal-utils_8h" local="yes">vendor/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h</includedby>
    <includedby refid="gmock-generated-internal-utils__test_8cc" local="yes">vendor/googletest/googlemock/test/gmock-generated-internal-utils_test.cc</includedby>
    <incdepgraph>
      <node id="1002">
        <label>sys/stat.h</label>
      </node>
      <node id="1008">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="992">
        <label>assert.h</label>
      </node>
      <node id="993">
        <label>stdlib.h</label>
      </node>
      <node id="1005">
        <label>string</label>
      </node>
      <node id="1015">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="998">
        <label>stddef.h</label>
      </node>
      <node id="1009">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="1001">
        <label>sys/types.h</label>
      </node>
      <node id="1000">
        <label>string.h</label>
      </node>
      <node id="1013">
        <label>typeinfo</label>
      </node>
      <node id="991">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
      </node>
      <node id="1010">
        <label>unistd.h</label>
      </node>
      <node id="1007">
        <label>vector</label>
      </node>
      <node id="1006">
        <label>utility</label>
      </node>
      <node id="1004">
        <label>sstream</label>
      </node>
      <node id="995">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
      </node>
      <node id="994">
        <label>iostream</label>
      </node>
      <node id="1014">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="1006" relation="include">
        </childnode>
      </node>
      <node id="1011">
        <label>strings.h</label>
      </node>
      <node id="997">
        <label>ctype.h</label>
      </node>
      <node id="996">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1001" relation="include">
        </childnode>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1014" relation="include">
        </childnode>
      </node>
      <node id="990">
        <label>vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h</label>
        <link refid="gmock-generated-internal-utils_8h"/>
        <childnode refid="991" relation="include">
        </childnode>
      </node>
      <node id="1003">
        <label>algorithm</label>
      </node>
      <node id="1012">
        <label>regex.h</label>
      </node>
      <node id="999">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1017">
        <label>vendor/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1020">
        <label>vendor/googletest/googlemock/include/gmock/gmock-more-actions.h</label>
        <link refid="gmock-more-actions_8h_source"/>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1027">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-matchers.h</label>
        <link refid="gmock-generated-matchers_8h_source"/>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1024">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h</label>
        <link refid="gmock-generated-function-mockers_8h_source"/>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1021">
        <label>vendor/googletest/googlemock/include/gmock/gmock.h</label>
        <link refid="gmock_8h_source"/>
        <childnode refid="1022" relation="include">
        </childnode>
      </node>
      <node id="1019">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-actions.h</label>
        <link refid="gmock-generated-actions_8h_source"/>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1018">
        <label>vendor/googletest/googlemock/include/gmock/gmock-actions.h</label>
        <link refid="gmock-actions_8h_source"/>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1023">
        <label>vendor/googletest/googlemock/include/gmock/gmock-spec-builders.h</label>
        <link refid="gmock-spec-builders_8h_source"/>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
      </node>
      <node id="1026">
        <label>vendor/googletest/googlemock/include/gmock/gmock-matchers.h</label>
        <link refid="gmock-matchers_8h_source"/>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1025">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h</label>
        <link refid="gmock-generated-nice-strict_8h_source"/>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1028">
        <label>vendor/googletest/googlemock/include/gmock/gmock-more-matchers.h</label>
        <link refid="gmock-more-matchers_8h_source"/>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1016">
        <label>vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h</label>
        <link refid="gmock-generated-internal-utils_8h"/>
        <childnode refid="1017" relation="include">
        </childnode>
      </node>
      <node id="1022">
        <label>vendor/googletest/googlemock/test/gmock_link_test.h</label>
        <link refid="gmock__link__test_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesting_1_1_matcher" prot="public">testing::Matcher</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1_ignored_value" prot="public">testing::internal::IgnoredValue</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple" prot="public">testing::internal::MatcherTuple</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_4_01_4" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt;&gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_01_4_01_4" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_01_4_01_4" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_01_4_01_4" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_00_01_a4_01_4_01_4" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3, A4 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_01_4_01_4" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3, A4, A5 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0fb935efcf1b84fbc4f177777ca3392dc" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3, A4, A5, A6 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0064798126035aa0d3ca935c3449bf0c1" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0d8930d50f28e62c202d0bf6b34d01eac" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7, A8 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_05ce0d9708ffc0cc1f9fec180f9f8202e" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7, A8, A9 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0842d32b3c1d00aa4e42fe38fbc4fa689" prot="public">testing::internal::MatcherTuple&lt; ::testing::tuple&lt; A1, A2, A3, A4, A5, A6, A7, A8, A9, A10 &gt; &gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function" prot="public">testing::internal::Function</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4" prot="public">testing::internal::Function&lt; R()&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4" prot="public">testing::internal::Function&lt; R(A1)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4" prot="public">testing::internal::Function&lt; R(A1, A2)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4" prot="public">testing::internal::Function&lt; R(A1, A2, A3)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4" prot="public">testing::internal::Function&lt; R(A1, A2, A3, A4)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" prot="public">testing::internal::Function&lt; R(A1, A2, A3, A4, A5)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" prot="public">testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4" prot="public">testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4" prot="public">testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6dfab3ccde80824a59fc4efd5336a27c1" prot="public">testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9)&gt;</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6f6ff91550f0557b7708e490e5002cd35" prot="public">testing::internal::Function&lt; R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)&gt;</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal">testing::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>was<sp/>GENERATED<sp/>by<sp/>command:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>pump.py<sp/>gmock-generated-internal-utils.h.pump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>EDIT<sp/>BY<sp/>HAND!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Mock<sp/>-<sp/>a<sp/>framework<sp/>for<sp/>writing<sp/>C++<sp/>mock<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>contains<sp/>template<sp/>meta-programming<sp/>utility<sp/>classes<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>implementing<sp/>Google<sp/>Mock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_GENERATED_INTERNAL_UTILS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_GENERATED_INTERNAL_UTILS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Matcher;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>IgnoredValue<sp/>object<sp/>can<sp/>be<sp/>implicitly<sp/>constructed<sp/>from<sp/>ANY<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>in<sp/>implementing<sp/>the<sp/>IgnoreResult(a)<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classtesting_1_1internal_1_1_ignored_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>constructor<sp/>template<sp/>allows<sp/>any<sp/>value<sp/>to<sp/>be<sp/>implicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>converted<sp/>to<sp/>IgnoredValue.<sp/><sp/>The<sp/>object<sp/>has<sp/>no<sp/>data<sp/>member<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>try<sp/>to<sp/>remember<sp/>anything<sp/>about<sp/>the<sp/>argument.<sp/><sp/>We</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>deliberately<sp/>omit<sp/>the<sp/>&apos;explicit&apos;<sp/>keyword<sp/>in<sp/>order<sp/>to<sp/>allow<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>conversion<sp/>to<sp/>be<sp/>implicit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="comment">/*<sp/>ignored<sp/>*/</highlight><highlight class="normal">)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(runtime/explicit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MatcherTuple&lt;T&gt;::type<sp/>is<sp/>a<sp/>tuple<sp/>type<sp/>where<sp/>each<sp/>field<sp/>is<sp/>a<sp/>Matcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>corresponding<sp/>field<sp/>in<sp/>tuple<sp/>type<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tuple&gt;</highlight></codeline>
<codeline lineno="69" refid="structtesting_1_1internal_1_1_matcher_tuple" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="72" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;<sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="77" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;<sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="82" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="87" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="92" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_00_01_a4_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="98" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="105" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0fb935efcf1b84fbc4f177777ca3392dc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="112" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0064798126035aa0d3ca935c3449bf0c1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="119" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0d8930d50f28e62c202d0bf6b34d01eac" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A8&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="126" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_05ce0d9708ffc0cc1f9fec180f9f8202e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A8&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A9&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="133" refid="structtesting_1_1internal_1_1_matcher_tuple_3_01_1_1testing_1_1tuple_3_01_a1_00_01_a2_00_01_a3_0842d32b3c1d00aa4e42fe38fbc4fa689" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple</ref>&lt;<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>A10&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;Matcher&lt;A1&gt;,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A2&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A3&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A4&gt;</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A5&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A6&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A7&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A8&gt;</ref>,<sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A9&gt;</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1_matcher" kindref="compound">Matcher&lt;A10&gt;</ref><sp/>&gt;<sp/>type;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Template<sp/>struct<sp/>Function&lt;F&gt;,<sp/>where<sp/>F<sp/>must<sp/>be<sp/>a<sp/>function<sp/>type,<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>typedefs:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Result:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>function&apos;s<sp/>return<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ArgumentN:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>type<sp/>of<sp/>the<sp/>N-th<sp/>argument,<sp/>where<sp/>N<sp/>starts<sp/>with<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ArgumentTuple:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>tuple<sp/>type<sp/>consisting<sp/>of<sp/>all<sp/>parameters<sp/>of<sp/>F.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ArgumentMatcherTuple:<sp/>the<sp/>tuple<sp/>type<sp/>consisting<sp/>of<sp/>Matchers<sp/>for<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>of<sp/>F.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MakeResultVoid:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>function<sp/>type<sp/>obtained<sp/>by<sp/>substituting<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>return<sp/>type<sp/>of<sp/>F.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MakeResultIgnoredValue:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>function<sp/>type<sp/>obtained<sp/>by<sp/>substituting<sp/>Something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>return<sp/>type<sp/>of<sp/>F.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="154" refid="structtesting_1_1internal_1_1_function" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="157" refid="structtesting_1_1internal_1_1_function_3_01_r_07_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R()&gt;<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>R<sp/>Result;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue();</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="166" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1)&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R()&gt;<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A1<sp/>Argument1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="176" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2)&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1)&gt;<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A2<sp/>Argument2;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="186" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3)&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2)&gt;<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A3<sp/>Argument3;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="196" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4)&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3)&gt;<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A4<sp/>Argument4;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3,<sp/>A4);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3,<sp/>A4);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="207" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5)&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4)&gt;<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A5<sp/>Argument5;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="218" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6)&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5)&gt;<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A6<sp/>Argument6;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="229" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7)&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6)&gt;<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A7<sp/>Argument7;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="240" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6_00_01_a7_00_01_a8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8)&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7)&gt;<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A8<sp/>Argument8;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="251" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6dfab3ccde80824a59fc4efd5336a27c1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9)&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8)&gt;<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A9<sp/>Argument9;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A9);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="264" refid="structtesting_1_1internal_1_1_function_3_01_r_07_a1_00_01_a2_00_01_a3_00_01_a4_00_01_a5_00_01_a6f6ff91550f0557b7708e490e5002cd35" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,<sp/>A10)&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">Function</ref>&lt;R(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9)&gt;<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A10<sp/>Argument10;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>typedef<sp/>::testing::tuple&lt;A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A10&gt;<sp/>ArgumentTuple;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1_matcher_tuple" kindref="compound">MatcherTuple&lt;ArgumentTuple&gt;::type</ref><sp/>ArgumentMatcherTuple;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeResultVoid(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,<sp/>A9,<sp/>A10);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1_ignored_value" kindref="compound">IgnoredValue</ref><sp/>MakeResultIgnoredValue(A1,<sp/>A2,<sp/>A3,<sp/>A4,<sp/>A5,<sp/>A6,<sp/>A7,<sp/>A8,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A9,<sp/>A10);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_GENERATED_INTERNAL_UTILS_H_</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h"/>
  </compounddef>
</doxygen>
