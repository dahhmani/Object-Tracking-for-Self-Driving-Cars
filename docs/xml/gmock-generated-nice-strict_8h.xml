<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmock-generated-nice-strict_8h" kind="file" language="C++">
    <compoundname>gmock-generated-nice-strict.h</compoundname>
    <includes refid="gmock-spec-builders_8h" local="yes">gmock/gmock-spec-builders.h</includes>
    <includes refid="gmock-port_8h" local="yes">gmock/internal/gmock-port.h</includes>
    <includedby refid="gmock_8h" local="yes">vendor/googletest/googlemock/include/gmock/gmock.h</includedby>
    <includedby refid="gmock-nice-strict__test_8cc" local="yes">vendor/googletest/googlemock/test/gmock-nice-strict_test.cc</includedby>
    <incdepgraph>
      <node id="565">
        <label>sys/stat.h</label>
      </node>
      <node id="583">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="560" relation="include">
        </childnode>
      </node>
      <node id="579">
        <label>iomanip</label>
      </node>
      <node id="576">
        <label>limits</label>
      </node>
      <node id="567">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="556">
        <label>assert.h</label>
      </node>
      <node id="588">
        <label>iterator</label>
      </node>
      <node id="578">
        <label>float.h</label>
      </node>
      <node id="551">
        <label>gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="554" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
      </node>
      <node id="592">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="557">
        <label>stdlib.h</label>
      </node>
      <node id="581">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
      </node>
      <node id="593">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="581" relation="include">
        </childnode>
      </node>
      <node id="549">
        <label>errno.h</label>
      </node>
      <node id="601">
        <label>gmock/internal/custom/gmock-matchers.h</label>
        <link refid="internal_2custom_2gmock-matchers_8h_source"/>
      </node>
      <node id="546">
        <label>string</label>
      </node>
      <node id="543">
        <label>map</label>
      </node>
      <node id="574">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="591">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h_source"/>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
      </node>
      <node id="562">
        <label>stddef.h</label>
      </node>
      <node id="596">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
      </node>
      <node id="553">
        <label>ostream</label>
      </node>
      <node id="568">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="598">
        <label>limits.h</label>
      </node>
      <node id="584">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="585" relation="include">
        </childnode>
      </node>
      <node id="564">
        <label>sys/types.h</label>
      </node>
      <node id="563">
        <label>string.h</label>
      </node>
      <node id="548">
        <label>gmock/gmock-actions.h</label>
        <link refid="gmock-actions_8h_source"/>
        <childnode refid="549" relation="include">
        </childnode>
        <childnode refid="550" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="551" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
      </node>
      <node id="572">
        <label>typeinfo</label>
      </node>
      <node id="555">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="556" relation="include">
        </childnode>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
      </node>
      <node id="569">
        <label>unistd.h</label>
      </node>
      <node id="547">
        <label>vector</label>
      </node>
      <node id="590">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="580">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
      </node>
      <node id="566">
        <label>utility</label>
      </node>
      <node id="542">
        <label>gmock/gmock-spec-builders.h</label>
        <link refid="gmock-spec-builders_8h_source"/>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="548" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="551" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
      </node>
      <node id="545">
        <label>sstream</label>
      </node>
      <node id="559">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h_source"/>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="556" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
      </node>
      <node id="599">
        <label>gmock/gmock-matchers.h</label>
        <link refid="gmock-matchers_8h_source"/>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="550" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="551" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
      </node>
      <node id="600">
        <label>math.h</label>
      </node>
      <node id="541">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h</label>
        <link refid="gmock-generated-nice-strict_8h"/>
        <childnode refid="542" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
      </node>
      <node id="594">
        <label>iosfwd</label>
      </node>
      <node id="597">
        <label>gmock/gmock-cardinalities.h</label>
        <link refid="gmock-cardinalities_8h_source"/>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
      </node>
      <node id="582">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="581" relation="include">
        </childnode>
      </node>
      <node id="558">
        <label>iostream</label>
      </node>
      <node id="575">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="573">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h_source"/>
        <childnode refid="566" relation="include">
        </childnode>
      </node>
      <node id="570">
        <label>strings.h</label>
      </node>
      <node id="561">
        <label>ctype.h</label>
      </node>
      <node id="595">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
      </node>
      <node id="560">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="561" relation="include">
        </childnode>
        <childnode refid="562" relation="include">
        </childnode>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="550" relation="include">
        </childnode>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="572" relation="include">
        </childnode>
        <childnode refid="573" relation="include">
        </childnode>
      </node>
      <node id="577">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="561" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
      </node>
      <node id="587">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="561" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
      </node>
      <node id="554">
        <label>gmock/internal/gmock-generated-internal-utils.h</label>
        <link refid="gmock-generated-internal-utils_8h_source"/>
        <childnode refid="555" relation="include">
        </childnode>
      </node>
      <node id="544">
        <label>set</label>
      </node>
      <node id="586">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="550">
        <label>algorithm</label>
      </node>
      <node id="571">
        <label>regex.h</label>
      </node>
      <node id="552">
        <label>stdio.h</label>
      </node>
      <node id="585">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
      </node>
      <node id="589">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="603">
        <label>vendor/googletest/googlemock/include/gmock/gmock.h</label>
        <link refid="gmock_8h_source"/>
        <childnode refid="604" relation="include">
        </childnode>
      </node>
      <node id="602">
        <label>vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h</label>
        <link refid="gmock-generated-nice-strict_8h"/>
        <childnode refid="603" relation="include">
        </childnode>
      </node>
      <node id="604">
        <label>vendor/googletest/googlemock/test/gmock_link_test.h</label>
        <link refid="gmock__link__test_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesting_1_1_nice_mock" prot="public">testing::NiceMock</innerclass>
    <innerclass refid="classtesting_1_1_naggy_mock" prot="public">testing::NaggyMock</innerclass>
    <innerclass refid="classtesting_1_1_strict_mock" prot="public">testing::StrictMock</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>was<sp/>GENERATED<sp/>by<sp/>command:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>pump.py<sp/>gmock-generated-nice-strict.h.pump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>EDIT<sp/>BY<sp/>HAND!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implements<sp/>class<sp/>templates<sp/>NiceMock,<sp/>NaggyMock,<sp/>and<sp/>StrictMock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>a<sp/>mock<sp/>class<sp/>MockFoo<sp/>that<sp/>is<sp/>created<sp/>using<sp/>Google<sp/>Mock,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NiceMock&lt;MockFoo&gt;<sp/>is<sp/>a<sp/>subclass<sp/>of<sp/>MockFoo<sp/>that<sp/>allows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uninteresting<sp/>calls<sp/>(i.e.<sp/>calls<sp/>to<sp/>mock<sp/>methods<sp/>that<sp/>have<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_CALL<sp/>specs),<sp/>NaggyMock&lt;MockFoo&gt;<sp/>is<sp/>a<sp/>subclass<sp/>of<sp/>MockFoo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>prints<sp/>a<sp/>warning<sp/>when<sp/>an<sp/>uninteresting<sp/>call<sp/>occurs,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>StrictMock&lt;MockFoo&gt;<sp/>is<sp/>a<sp/>subclass<sp/>of<sp/>MockFoo<sp/>that<sp/>treats<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uninteresting<sp/>calls<sp/>as<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>a<sp/>mock<sp/>is<sp/>naggy<sp/>by<sp/>default,<sp/>so<sp/>MockFoo<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NaggyMock&lt;MockFoo&gt;<sp/>behave<sp/>like<sp/>the<sp/>same.<sp/><sp/>However,<sp/>we<sp/>will<sp/>soon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>switch<sp/>the<sp/>default<sp/>behavior<sp/>of<sp/>mocks<sp/>to<sp/>be<sp/>nice,<sp/>as<sp/>that<sp/>in<sp/>general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leads<sp/>to<sp/>more<sp/>maintainable<sp/>tests.<sp/><sp/>When<sp/>that<sp/>happens,<sp/>MockFoo<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stop<sp/>behaving<sp/>like<sp/>NaggyMock&lt;MockFoo&gt;<sp/>and<sp/>start<sp/>behaving<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NiceMock&lt;MockFoo&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NiceMock,<sp/>NaggyMock,<sp/>and<sp/>StrictMock<sp/>&quot;inherit&quot;<sp/>the<sp/>constructors<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>their<sp/>respective<sp/>base<sp/>class,<sp/>with<sp/>up-to<sp/>10<sp/>arguments.<sp/><sp/>Therefore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>write<sp/>NiceMock&lt;MockFoo&gt;(5,<sp/>&quot;a&quot;)<sp/>to<sp/>construct<sp/>a<sp/>nice<sp/>mock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>MockFoo<sp/>has<sp/>a<sp/>constructor<sp/>that<sp/>accepts<sp/>(int,<sp/>const<sp/>char*),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>example.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>known<sp/>limitation<sp/>is<sp/>that<sp/>NiceMock&lt;MockFoo&gt;,<sp/>NaggyMock&lt;MockFoo&gt;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>StrictMock&lt;MockFoo&gt;<sp/>only<sp/>works<sp/>for<sp/>mock<sp/>methods<sp/>defined<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>MOCK_METHOD*<sp/>family<sp/>of<sp/>macros<sp/>DIRECTLY<sp/>in<sp/>the<sp/>MockFoo<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>mock<sp/>method<sp/>is<sp/>defined<sp/>in<sp/>a<sp/>base<sp/>class<sp/>of<sp/>MockFoo,<sp/>the<sp/>&quot;nice&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>&quot;strict&quot;<sp/>modifier<sp/>may<sp/>not<sp/>affect<sp/>it,<sp/>depending<sp/>on<sp/>the<sp/>compiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>particular,<sp/>nesting<sp/>NiceMock,<sp/>NaggyMock,<sp/>and<sp/>StrictMock<sp/>is<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Another<sp/>known<sp/>limitation<sp/>is<sp/>that<sp/>the<sp/>constructors<sp/>of<sp/>the<sp/>base<sp/>mock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cannot<sp/>have<sp/>arguments<sp/>passed<sp/>by<sp/>non-const<sp/>reference,<sp/>which<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>banned<sp/>by<sp/>the<sp/>Google<sp/>C++<sp/>style<sp/>guide<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_NICE_STRICT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_NICE_STRICT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/gmock-spec-builders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="80" refid="classtesting_1_1_nice_mock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MockClass<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>factor<sp/>out<sp/>the<sp/>constructor<sp/>body<sp/>to<sp/>a<sp/>common<sp/>method,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>avoid<sp/>a<sp/>possible<sp/>clash<sp/>with<sp/>members<sp/>of<sp/>MockClass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>C++<sp/>doesn&apos;t<sp/>(yet)<sp/>allow<sp/>inheritance<sp/>of<sp/>constructors,<sp/>so<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>define<sp/>it<sp/>for<sp/>each<sp/>arity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1)<sp/>:<sp/>MockClass(a1)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2)<sp/>:<sp/>MockClass(a1,<sp/>a2)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>NiceMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a6,<sp/>a7)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>NiceMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8)<sp/>:<sp/>MockClass(a1,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>NiceMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A9&amp;<sp/>a9)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>NiceMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A9&amp;<sp/>a9,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A10&amp;<sp/>a10)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9,<sp/>a10)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::AllowUninterestingCalls(</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~NiceMock()<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::UnregisterCallReaction(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(NiceMock);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="176" refid="classtesting_1_1_naggy_mock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MockClass<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>factor<sp/>out<sp/>the<sp/>constructor<sp/>body<sp/>to<sp/>a<sp/>common<sp/>method,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>avoid<sp/>a<sp/>possible<sp/>clash<sp/>with<sp/>members<sp/>of<sp/>MockClass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref>()<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>C++<sp/>doesn&apos;t<sp/>(yet)<sp/>allow<sp/>inheritance<sp/>of<sp/>constructors,<sp/>so<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>define<sp/>it<sp/>for<sp/>each<sp/>arity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1)<sp/>:<sp/>MockClass(a1)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2)<sp/>:<sp/>MockClass(a1,<sp/>a2)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_naggy_mock" kindref="compound">NaggyMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>NaggyMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a6,<sp/>a7)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>NaggyMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8)<sp/>:<sp/>MockClass(a1,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>NaggyMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A9&amp;<sp/>a9)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>NaggyMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A9&amp;<sp/>a9,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A10&amp;<sp/>a10)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9,<sp/>a10)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::WarnUninterestingCalls(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~NaggyMock()<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::UnregisterCallReaction(</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(NaggyMock);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="272" refid="classtesting_1_1_strict_mock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MockClass<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>factor<sp/>out<sp/>the<sp/>constructor<sp/>body<sp/>to<sp/>a<sp/>common<sp/>method,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>avoid<sp/>a<sp/>possible<sp/>clash<sp/>with<sp/>members<sp/>of<sp/>MockClass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref>()<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>C++<sp/>doesn&apos;t<sp/>(yet)<sp/>allow<sp/>inheritance<sp/>of<sp/>constructors,<sp/>so<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>define<sp/>it<sp/>for<sp/>each<sp/>arity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1&gt;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1)<sp/>:<sp/>MockClass(a1)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2&gt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2)<sp/>:<sp/>MockClass(a1,<sp/>a2)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3&gt;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6&gt;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1_strict_mock" kindref="compound">StrictMock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7&gt;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>StrictMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a6,<sp/>a7)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8&gt;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>StrictMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8)<sp/>:<sp/>MockClass(a1,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>StrictMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A9&amp;<sp/>a9)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A4,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A5,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A9,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A10&gt;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>StrictMock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A1&amp;<sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A2&amp;<sp/>a2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A3&amp;<sp/>a3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A4&amp;<sp/>a4,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A5&amp;<sp/>a5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A6&amp;<sp/>a6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A7&amp;<sp/>a7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A8&amp;<sp/>a8,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A9&amp;<sp/>a9,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>A10&amp;<sp/>a10)<sp/>:<sp/>MockClass(a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7,<sp/>a8,<sp/>a9,<sp/>a10)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::FailUninterestingCalls(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~StrictMock()<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::Mock::UnregisterCallReaction(</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::ImplicitCast_&lt;MockClass*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>GTEST_DISALLOW_COPY_AND_ASSIGN_(StrictMock);</highlight></codeline>
<codeline lineno="365"><highlight class="normal">};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>specializations<sp/>catch<sp/>some<sp/>(relatively<sp/>more<sp/>common)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>user<sp/>errors<sp/>of<sp/>nesting<sp/>nice<sp/>and<sp/>strict<sp/>mocks.<sp/><sp/>They<sp/>do<sp/>NOT<sp/>catch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>possible<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>specializations<sp/>are<sp/>declared<sp/>but<sp/>not<sp/>defined,<sp/>as<sp/>NiceMock,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NaggyMock,<sp/>and<sp/>StrictMock<sp/>cannot<sp/>be<sp/>nested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1_nice_mock" kindref="compound">NiceMock</ref>&lt;NiceMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NiceMock&lt;NaggyMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NiceMock&lt;StrictMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NaggyMock&lt;NiceMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NaggyMock&lt;NaggyMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NaggyMock&lt;StrictMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StrictMock&lt;NiceMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StrictMock&lt;NaggyMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockClass&gt;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StrictMock&lt;StrictMock&lt;MockClass&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_NICE_STRICT_H_</highlight></codeline>
    </programlisting>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h"/>
  </compounddef>
</doxygen>
