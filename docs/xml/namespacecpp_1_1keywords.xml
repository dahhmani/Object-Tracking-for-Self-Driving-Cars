<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacecpp_1_1keywords" kind="namespace" language="Python">
    <compoundname>cpp::keywords</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="keywords_8py_1a9fc334775aca87951ebdcd556dac21cc" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string cpp::keywords.__author__</definition>
        <argsstring></argsstring>
        <name>__author__</name>
        <initializer>=  &apos;nnorwitz@google.com (Neal Norwitz)&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="20" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1a56fd5baf357970548e1ec366edfc2c13" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.TYPES</definition>
        <argsstring></argsstring>
        <name>TYPES</name>
        <initializer>=  set(&apos;bool char int long short double float void wchar_t unsigned signed&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="36" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1af9282ce418d6b4b43dca5ed574caedd7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.TYPE_MODIFIERS</definition>
        <argsstring></argsstring>
        <name>TYPE_MODIFIERS</name>
        <initializer>=  set(&apos;auto register const inline extern static virtual volatile mutable&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="37" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1a786f41bbea982641425c819d10bb2064" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.ACCESS</definition>
        <argsstring></argsstring>
        <name>ACCESS</name>
        <initializer>=  set(&apos;public protected private friend&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="38" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1aeba38dc38e188040f4ec44ba05092e7f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.CASTS</definition>
        <argsstring></argsstring>
        <name>CASTS</name>
        <initializer>=  set(&apos;static_cast const_cast dynamic_cast reinterpret_cast&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="40" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1a15fe231fbad145538b73892804898809" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.OTHERS</definition>
        <argsstring></argsstring>
        <name>OTHERS</name>
        <initializer>=  set(&apos;true false asm class namespace using explicit this operator sizeof&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="42" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1aa86a5e35a3ace14022a5ca1b91baf207" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.OTHER_TYPES</definition>
        <argsstring></argsstring>
        <name>OTHER_TYPES</name>
        <initializer>=  set(&apos;new delete typedef struct union enum typeid typename template&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="43" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1a374dfe9c96681079802ba4724287b8ff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.CONTROL</definition>
        <argsstring></argsstring>
        <name>CONTROL</name>
        <initializer>=  set(&apos;case switch default if else return goto&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="45" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1a2665fb8a25a4dae03fa5d3dc975c537c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.EXCEPTION</definition>
        <argsstring></argsstring>
        <name>EXCEPTION</name>
        <initializer>=  set(&apos;try catch throw&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="46" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1af0164c05398a2291487b76414102d555" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.LOOP</definition>
        <argsstring></argsstring>
        <name>LOOP</name>
        <initializer>=  set(&apos;while do for break continue&apos;.split())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="47" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keywords_8py_1a2e8727b78fb9434c99ac8518c6dd1ecc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cpp::keywords.ALL</definition>
        <argsstring></argsstring>
        <name>ALL</name>
        <initializer>=  TYPES | TYPE_MODIFIERS | ACCESS | CASTS | OTHERS | OTHER_TYPES | CONTROL | EXCEPTION | LOOP</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="49" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="keywords_8py_1ab9edc2cbd4a9d5ad58a1c0ad3281cbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cpp.keywords.IsKeyword</definition>
        <argsstring>(token)</argsstring>
        <name>IsKeyword</name>
        <param>
          <type>token</type>
          <defname>token</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="52" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="keywords_8py_1ae0f7a581fef26ad1a71c59bd963ee285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cpp.keywords.IsBuiltinType</definition>
        <argsstring>(token)</argsstring>
        <name>IsBuiltinType</name>
        <param>
          <type>token</type>
          <defname>token</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="55" column="1" bodyfile="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" bodystart="55" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/scripts/generator/cpp/keywords.py" line="1" column="1"/>
  </compounddef>
</doxygen>
