<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1internal_1_1_field_matcher" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::FieldMatcher</compoundname>
    <templateparamlist>
      <param>
        <type>typename Class</type>
      </param>
      <param>
        <type>typename FieldType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_field_matcher_1a5937d084f46df4f81948c33688408d31" prot="private" static="no" mutable="no">
        <type>const FieldType Class::*</type>
        <definition>const FieldType Class::* testing::internal::FieldMatcher&lt; Class, FieldType &gt;::field_</definition>
        <argsstring></argsstring>
        <name>field_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2227" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1_field_matcher_1a14eca9e5ca69aabaa9fe288effb1f57c" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtesting_1_1_matcher" kindref="compound">Matcher</ref>&lt; const FieldType &amp; &gt;</type>
        <definition>const Matcher&lt;const FieldType&amp;&gt; testing::internal::FieldMatcher&lt; Class, FieldType &gt;::matcher_</definition>
        <argsstring></argsstring>
        <name>matcher_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2228" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_field_matcher_1a5d20aa34edd41eb898b1f8dd35d585f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::FieldMatcher&lt; Class, FieldType &gt;::FieldMatcher</definition>
        <argsstring>(FieldType Class::*field, const Matcher&lt; const FieldType &amp;&gt; &amp;matcher)</argsstring>
        <name>FieldMatcher</name>
        <param>
          <type>FieldType Class::*</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1_matcher" kindref="compound">Matcher</ref>&lt; const FieldType &amp;&gt; &amp;</type>
          <declname>matcher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2183" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2183" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_field_matcher_1af0726e67962870bed9f3b184b3edb22e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::FieldMatcher&lt; Class, FieldType &gt;::DescribeTo</definition>
        <argsstring>(::std::ostream *os) const</argsstring>
        <name>DescribeTo</name>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2187" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2187" bodyend="2190"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_field_matcher_1a3d8eb433d6a765f8d59b3b07704c3d80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::FieldMatcher&lt; Class, FieldType &gt;::DescribeNegationTo</definition>
        <argsstring>(::std::ostream *os) const</argsstring>
        <name>DescribeNegationTo</name>
        <param>
          <type>::std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2192" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2192" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_field_matcher_1ac0cf950415d64026bc28eb84e6296f1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::FieldMatcher&lt; Class, FieldType &gt;::MatchAndExplain</definition>
        <argsstring>(const T &amp;value, MatchResultListener *listener) const</argsstring>
        <name>MatchAndExplain</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2198" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2198" bodyend="2203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1_field_matcher_1a3ac8072e68a33f78531d7b1eff96810c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FieldMatcher&lt; Class, FieldType &gt;::MatchAndExplainImpl</definition>
        <argsstring>(false_type, const Class &amp;obj, MatchResultListener *listener) const</argsstring>
        <name>MatchAndExplainImpl</name>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">false_type</ref></type>
        </param>
        <param>
          <type>const Class &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2209" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2209" bodyend="2213"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_field_matcher_1aade72eefad16c8e6f8db59082b62f3aa" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::FieldMatcher&lt; Class, FieldType &gt;::MatchAndExplainImpl</definition>
        <argsstring>(true_type, const Class *p, MatchResultListener *listener) const</argsstring>
        <name>MatchAndExplainImpl</name>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">true_type</ref></type>
        </param>
        <param>
          <type>const Class *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1_match_result_listener" kindref="compound">MatchResultListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2215" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2215" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1_field_matcher_1a54bedc88dafc15ebd6d681f93ad5a661" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::FieldMatcher&lt; Class, FieldType &gt;::GTEST_DISALLOW_ASSIGN_</definition>
        <argsstring>(FieldMatcher)</argsstring>
        <name>GTEST_DISALLOW_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1_field_matcher" kindref="compound">FieldMatcher</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2230" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" line="2181" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-matchers.h" bodystart="2181" bodyend="2231"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1a3d8eb433d6a765f8d59b3b07704c3d80" prot="public" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>DescribeNegationTo</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1af0726e67962870bed9f3b184b3edb22e" prot="public" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>DescribeTo</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1a5937d084f46df4f81948c33688408d31" prot="private" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>field_</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1a5d20aa34edd41eb898b1f8dd35d585f5" prot="public" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>FieldMatcher</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1a54bedc88dafc15ebd6d681f93ad5a661" prot="private" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>GTEST_DISALLOW_ASSIGN_</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1ac0cf950415d64026bc28eb84e6296f1b" prot="public" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>MatchAndExplain</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1a3ac8072e68a33f78531d7b1eff96810c" prot="private" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>MatchAndExplainImpl</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1aade72eefad16c8e6f8db59082b62f3aa" prot="private" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>MatchAndExplainImpl</name></member>
      <member refid="classtesting_1_1internal_1_1_field_matcher_1a14eca9e5ca69aabaa9fe288effb1f57c" prot="private" virt="non-virtual"><scope>testing::internal::FieldMatcher</scope><name>matcher_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
