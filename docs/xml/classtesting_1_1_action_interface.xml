<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtesting_1_1_action_interface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>testing::ActionInterface</compoundname>
    <derivedcompoundref refid="classtesting_1_1gmock__generated__actions__test_1_1_substract_action" prot="public" virt="non-virtual">testing::gmock_generated_actions_test::SubstractAction</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>F</declname>
        <defname>F</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtesting_1_1_action_interface_1a7477de2fe3e4e01c59db698203acaee7" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function</ref>&lt; F &gt;::Result</type>
        <definition>typedef internal::Function&lt;F&gt;::Result testing::ActionInterface&lt; F &gt;::Result</definition>
        <argsstring></argsstring>
        <name>Result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="329" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtesting_1_1_action_interface_1af72720d864da4d606629e83edc003511" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1_function" kindref="compound">internal::Function</ref>&lt; F &gt;::ArgumentTuple</type>
        <definition>typedef internal::Function&lt;F&gt;::ArgumentTuple testing::ActionInterface&lt; F &gt;::ArgumentTuple</definition>
        <argsstring></argsstring>
        <name>ArgumentTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="330" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1_action_interface_1a0f1d44e4c669a9cae5ee5b28419a6f52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::ActionInterface&lt; F &gt;::ActionInterface</definition>
        <argsstring>()</argsstring>
        <name>ActionInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="332" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_interface_1a7dd0a5fc93d86ae3c9d04963b9f3a93f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual testing::ActionInterface&lt; F &gt;::~ActionInterface</definition>
        <argsstring>()</argsstring>
        <name>~ActionInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="333" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="333" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1_action_interface_1a20f8624fcea1786f2992b358760422a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result</type>
        <definition>virtual Result testing::ActionInterface&lt; F &gt;::Perform</definition>
        <argsstring>(const ArgumentTuple &amp;args)=0</argsstring>
        <name>Perform</name>
        <reimplementedby refid="classtesting_1_1internal_1_1_action_adaptor_1a8d8a47a31f068cf6e0c95b91605d5540">Perform</reimplementedby>
        <param>
          <type>const ArgumentTuple &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="339" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1_action_interface_1aea0e7557e7f56ee0f29bd7680846c6aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::ActionInterface&lt; F &gt;::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(ActionInterface)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1_action_interface" kindref="compound">ActionInterface</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="342" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="46">
        <label>testing::ActionInterface&lt; F &gt;</label>
        <link refid="classtesting_1_1_action_interface"/>
      </node>
      <node id="47">
        <label>testing::gmock_generated_actions_test::SubstractAction&lt; int(int, int)&gt;</label>
        <link refid="classtesting_1_1gmock__generated__actions__test_1_1_substract_action"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="vendor/googletest/googlemock/include/gmock/gmock-actions.h" line="327" column="1" bodyfile="vendor/googletest/googlemock/include/gmock/gmock-actions.h" bodystart="327" bodyend="343"/>
    <listofallmembers>
      <member refid="classtesting_1_1_action_interface_1a0f1d44e4c669a9cae5ee5b28419a6f52" prot="public" virt="non-virtual"><scope>testing::ActionInterface</scope><name>ActionInterface</name></member>
      <member refid="classtesting_1_1_action_interface_1af72720d864da4d606629e83edc003511" prot="public" virt="non-virtual"><scope>testing::ActionInterface</scope><name>ArgumentTuple</name></member>
      <member refid="classtesting_1_1_action_interface_1aea0e7557e7f56ee0f29bd7680846c6aa" prot="private" virt="non-virtual"><scope>testing::ActionInterface</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1_action_interface_1a20f8624fcea1786f2992b358760422a0" prot="public" virt="pure-virtual"><scope>testing::ActionInterface</scope><name>Perform</name></member>
      <member refid="classtesting_1_1_action_interface_1a7477de2fe3e4e01c59db698203acaee7" prot="public" virt="non-virtual"><scope>testing::ActionInterface</scope><name>Result</name></member>
      <member refid="classtesting_1_1_action_interface_1a7dd0a5fc93d86ae3c9d04963b9f3a93f" prot="public" virt="virtual"><scope>testing::ActionInterface</scope><name>~ActionInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
